{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getExtension = exports.deleteExtension = exports.unpublishExtension = exports.publishExtensionVersion = exports.registerPublisherProfile = exports.listExtensionVersions = exports.listExtensions = exports.getExtensionVersion = exports.getSource = exports.createSource = exports.updateInstanceFromRegistry = exports.updateInstance = exports.configureInstance = exports.listInstances = exports.getInstance = exports.deleteInstance = exports.createInstance = exports.ParamType = exports.Visibility = exports.RegistryLaunchStage = void 0;\n\nconst yaml = require(\"js-yaml\");\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst marked = require(\"marked\");\n\nconst api = require(\"../api\");\n\nconst refs = require(\"./refs\");\n\nconst logger_1 = require(\"../logger\");\n\nconst operationPoller = require(\"../operation-poller\");\n\nconst error_1 = require(\"../error\");\n\nconst VERSION = \"v1beta\";\nconst PAGE_SIZE_MAX = 100;\nvar RegistryLaunchStage;\n\n(function (RegistryLaunchStage) {\n  RegistryLaunchStage[\"EXPERIMENTAL\"] = \"EXPERIMENTAL\";\n  RegistryLaunchStage[\"BETA\"] = \"BETA\";\n  RegistryLaunchStage[\"GA\"] = \"GA\";\n  RegistryLaunchStage[\"DEPRECATED\"] = \"DEPRECATED\";\n  RegistryLaunchStage[\"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\"] = \"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\";\n})(RegistryLaunchStage = exports.RegistryLaunchStage || (exports.RegistryLaunchStage = {}));\n\nvar Visibility;\n\n(function (Visibility) {\n  Visibility[\"UNLISTED\"] = \"unlisted\";\n  Visibility[\"PUBLIC\"] = \"public\";\n})(Visibility = exports.Visibility || (exports.Visibility = {}));\n\nvar ParamType;\n\n(function (ParamType) {\n  ParamType[\"STRING\"] = \"STRING\";\n  ParamType[\"SELECT\"] = \"SELECT\";\n  ParamType[\"MULTISELECT\"] = \"MULTISELECT\";\n  ParamType[\"SECRET\"] = \"SECRET\";\n})(ParamType = exports.ParamType || (exports.ParamType = {}));\n\nasync function createInstanceHelper(projectId, instanceId, config) {\n  const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/instances/`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      name: `projects/${projectId}/instances/${instanceId}`,\n      config: config\n    }\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: createRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nasync function createInstance(args) {\n  var _a, _b;\n\n  const config = {\n    params: args.params\n  };\n\n  if (args.extensionSource && args.extensionVersionRef) {\n    throw new error_1.FirebaseError(\"ExtensionSource and ExtensionVersion both provided, but only one should be.\");\n  } else if (args.extensionSource) {\n    config.source = {\n      name: (_a = args.extensionSource) === null || _a === void 0 ? void 0 : _a.name\n    };\n  } else if (args.extensionVersionRef) {\n    const ref = refs.parse(args.extensionVersionRef);\n    config.extensionRef = refs.toExtensionRef(ref);\n    config.extensionVersion = (_b = ref.version) !== null && _b !== void 0 ? _b : \"\";\n  } else {\n    throw new error_1.FirebaseError(\"No ExtensionVersion or ExtensionSource provided but one is required.\");\n  }\n\n  return createInstanceHelper(args.projectId, args.instanceId, config);\n}\n\nexports.createInstance = createInstance;\n\nasync function deleteInstance(projectId, instanceId) {\n  const deleteRes = await api.request(\"DELETE\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n    auth: true,\n    origin: api.extensionsOrigin\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: deleteRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nexports.deleteInstance = deleteInstance;\n\nasync function getInstance(projectId, instanceId, options = {}) {\n  const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, _.assign({\n    auth: true,\n    origin: api.extensionsOrigin\n  }, options));\n  return res.body;\n}\n\nexports.getInstance = getInstance;\n\nasync function listInstances(projectId) {\n  const instances = [];\n\n  const getNextPage = async pageToken => {\n    const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances`, {\n      auth: true,\n      origin: api.extensionsOrigin,\n      query: {\n        pageSize: PAGE_SIZE_MAX,\n        pageToken\n      }\n    });\n\n    if (Array.isArray(res.body.instances)) {\n      instances.push(...res.body.instances);\n    }\n\n    if (res.body.nextPageToken) {\n      await getNextPage(res.body.nextPageToken);\n    }\n  };\n\n  await getNextPage();\n  return instances;\n}\n\nexports.listInstances = listInstances;\n\nasync function configureInstance(projectId, instanceId, params) {\n  const res = await patchInstance(projectId, instanceId, \"config.params\", {\n    config: {\n      params\n    }\n  });\n  return res;\n}\n\nexports.configureInstance = configureInstance;\n\nasync function updateInstance(projectId, instanceId, extensionSource, params) {\n  const body = {\n    config: {\n      source: {\n        name: extensionSource.name\n      }\n    }\n  };\n  let updateMask = \"config.source.name\";\n\n  if (params) {\n    body.config.params = params;\n    updateMask += \",config.params\";\n  }\n\n  return await patchInstance(projectId, instanceId, updateMask, body);\n}\n\nexports.updateInstance = updateInstance;\n\nasync function updateInstanceFromRegistry(projectId, instanceId, extRef, params) {\n  const ref = refs.parse(extRef);\n  const body = {\n    config: {\n      extensionRef: refs.toExtensionRef(ref),\n      extensionVersion: ref.version\n    }\n  };\n  let updateMask = \"config.extension_ref,config.extension_version\";\n\n  if (params) {\n    body.config.params = params;\n    updateMask += \",config.params\";\n  }\n\n  return await patchInstance(projectId, instanceId, updateMask, body);\n}\n\nexports.updateInstanceFromRegistry = updateInstanceFromRegistry;\n\nasync function patchInstance(projectId, instanceId, updateMask, data) {\n  const updateRes = await api.request(\"PATCH\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    query: {\n      updateMask\n    },\n    data\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: updateRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nfunction populateResourceProperties(spec) {\n  if (spec) {\n    spec.resources.forEach(r => {\n      try {\n        if (r.propertiesYaml) {\n          r.properties = yaml.safeLoad(r.propertiesYaml);\n        }\n      } catch (err) {\n        logger_1.logger.debug(`[ext] failed to parse resource properties yaml: ${err}`);\n      }\n    });\n  }\n}\n\nasync function createSource(projectId, packageUri, extensionRoot) {\n  const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/sources/`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      packageUri,\n      extensionRoot\n    }\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: createRes.body.name,\n    masterTimeout: 600000\n  });\n\n  if (pollRes.spec) {\n    populateResourceProperties(pollRes.spec);\n  }\n\n  return pollRes;\n}\n\nexports.createSource = createSource;\n\nfunction getSource(sourceName) {\n  return api.request(\"GET\", `/${VERSION}/${sourceName}`, {\n    auth: true,\n    origin: api.extensionsOrigin\n  }).then(res => {\n    if (res.body.spec) {\n      populateResourceProperties(res.body.spec);\n    }\n\n    return res.body;\n  });\n}\n\nexports.getSource = getSource;\n\nasync function getExtensionVersion(extensionVersionRef) {\n  const ref = refs.parse(extensionVersionRef);\n\n  if (!ref.version) {\n    throw new error_1.FirebaseError(`ExtensionVersion ref \"${extensionVersionRef}\" must supply a version.`);\n  }\n\n  try {\n    const res = await api.request(\"GET\", `/${VERSION}/${refs.toExtensionVersionName(ref)}`, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n\n    if (res.body.spec) {\n      populateResourceProperties(res.body.spec);\n    }\n\n    return res.body;\n  } catch (err) {\n    if (err.status === 404) {\n      throw refNotFoundError(ref);\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Failed to query the extension version '${clc.bold(extensionVersionRef)}': ${err}`);\n  }\n}\n\nexports.getExtensionVersion = getExtensionVersion;\n\nasync function listExtensions(publisherId) {\n  const extensions = [];\n\n  const getNextPage = async pageToken => {\n    const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions`, {\n      auth: true,\n      origin: api.extensionsOrigin,\n      showUnpublished: false,\n      query: {\n        pageSize: PAGE_SIZE_MAX,\n        pageToken\n      }\n    });\n\n    if (Array.isArray(res.body.extensions)) {\n      extensions.push(...res.body.extensions);\n    }\n\n    if (res.body.nextPageToken) {\n      await getNextPage(res.body.nextPageToken);\n    }\n  };\n\n  await getNextPage();\n  return extensions;\n}\n\nexports.listExtensions = listExtensions;\n\nasync function listExtensionVersions(ref, filter) {\n  const {\n    publisherId,\n    extensionId\n  } = refs.parse(ref);\n  const extensionVersions = [];\n\n  const getNextPage = async pageToken => {\n    const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions`, {\n      auth: true,\n      origin: api.extensionsOrigin,\n      query: {\n        filter,\n        pageSize: PAGE_SIZE_MAX,\n        pageToken\n      }\n    });\n\n    if (Array.isArray(res.body.extensionVersions)) {\n      extensionVersions.push(...res.body.extensionVersions);\n    }\n\n    if (res.body.nextPageToken) {\n      await getNextPage(res.body.nextPageToken);\n    }\n  };\n\n  await getNextPage();\n  return extensionVersions;\n}\n\nexports.listExtensionVersions = listExtensionVersions;\n\nasync function registerPublisherProfile(projectId, publisherId) {\n  const res = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/publisherProfile:register`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      publisherId\n    }\n  });\n  return res.body;\n}\n\nexports.registerPublisherProfile = registerPublisherProfile;\n\nasync function publishExtensionVersion(extensionVersionRef, packageUri, extensionRoot) {\n  const ref = refs.parse(extensionVersionRef);\n\n  if (!ref.version) {\n    throw new error_1.FirebaseError(`ExtensionVersion ref \"${extensionVersionRef}\" must supply a version.`);\n  }\n\n  const publishRes = await api.request(\"POST\", `/${VERSION}/${refs.toExtensionName(ref)}/versions:publish`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      versionId: ref.version,\n      packageUri,\n      extensionRoot: extensionRoot !== null && extensionRoot !== void 0 ? extensionRoot : \"/\"\n    }\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: publishRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nexports.publishExtensionVersion = publishExtensionVersion;\n\nasync function unpublishExtension(extensionRef) {\n  const ref = refs.parse(extensionRef);\n\n  if (ref.version) {\n    throw new error_1.FirebaseError(`Extension reference \"${extensionRef}\" must not contain a version.`);\n  }\n\n  const url = `/${VERSION}/${refs.toExtensionName(ref)}:unpublish`;\n\n  try {\n    await api.request(\"POST\", url, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n  } catch (err) {\n    if (err.status === 403) {\n      throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(extensionRef)}' and don’t have the correct permissions to unpublish this extension.`, {\n        status: err.status\n      });\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Error occurred unpublishing extension '${extensionRef}': ${err}`, {\n      status: err.status\n    });\n  }\n}\n\nexports.unpublishExtension = unpublishExtension;\n\nasync function deleteExtension(extensionRef) {\n  const ref = refs.parse(extensionRef);\n\n  if (ref.version) {\n    throw new error_1.FirebaseError(`Extension reference \"${extensionRef}\" must not contain a version.`);\n  }\n\n  const url = `/${VERSION}/${refs.toExtensionName(ref)}`;\n\n  try {\n    await api.request(\"DELETE\", url, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n  } catch (err) {\n    if (err.status === 403) {\n      throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(extensionRef)}' and don’t have the correct permissions to delete this extension.`, {\n        status: err.status\n      });\n    } else if (err.status === 404) {\n      throw new error_1.FirebaseError(`Extension ${clc.bold(extensionRef)} was not found.`);\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Error occurred delete extension '${extensionRef}': ${err}`, {\n      status: err.status\n    });\n  }\n}\n\nexports.deleteExtension = deleteExtension;\n\nasync function getExtension(extensionRef) {\n  const ref = refs.parse(extensionRef);\n\n  try {\n    const res = await api.request(\"GET\", `/${VERSION}/${refs.toExtensionName(ref)}`, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n    return res.body;\n  } catch (err) {\n    if (err.status === 404) {\n      throw refNotFoundError(ref);\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Failed to query the extension '${clc.bold(extensionRef)}': ${err}`, {\n      status: err.status\n    });\n  }\n}\n\nexports.getExtension = getExtension;\n\nfunction refNotFoundError(ref) {\n  return new error_1.FirebaseError(`The extension reference '${clc.bold(ref.version ? refs.toExtensionVersionRef(ref) : refs.toExtensionRef(ref))}' doesn't exist. This could happen for two reasons:\\n` + `  -The publisher ID '${clc.bold(ref.publisherId)}' doesn't exist or could be misspelled\\n` + `  -The name of the ${ref.version ? \"extension version\" : \"extension\"} '${clc.bold(ref.version ? `${ref.extensionId}@${ref.version}` : ref.extensionId)}' doesn't exist or could be misspelled\\n\\n` + `Please correct the extension reference and try again. If you meant to install an extension from a local source, please provide a relative path prefixed with '${clc.bold(\"./\")}', '${clc.bold(\"../\")}', or '${clc.bold(\"~/\")}'. Learn more about local extension installation at ${marked(\"[https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install](https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install).\")}`, {\n    status: 404\n  });\n}","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/extensions/extensionsApi.js"],"names":["Object","defineProperty","exports","value","getExtension","deleteExtension","unpublishExtension","publishExtensionVersion","registerPublisherProfile","listExtensionVersions","listExtensions","getExtensionVersion","getSource","createSource","updateInstanceFromRegistry","updateInstance","configureInstance","listInstances","getInstance","deleteInstance","createInstance","ParamType","Visibility","RegistryLaunchStage","yaml","require","_","clc","marked","api","refs","logger_1","operationPoller","error_1","VERSION","PAGE_SIZE_MAX","createInstanceHelper","projectId","instanceId","config","createRes","request","auth","origin","extensionsOrigin","data","name","pollRes","pollOperation","apiOrigin","apiVersion","operationResourceName","body","masterTimeout","args","_a","_b","params","extensionSource","extensionVersionRef","FirebaseError","source","ref","parse","extensionRef","toExtensionRef","extensionVersion","version","deleteRes","options","res","assign","instances","getNextPage","pageToken","query","pageSize","Array","isArray","push","nextPageToken","patchInstance","updateMask","extRef","updateRes","populateResourceProperties","spec","resources","forEach","r","propertiesYaml","properties","safeLoad","err","logger","debug","packageUri","extensionRoot","sourceName","then","toExtensionVersionName","status","refNotFoundError","bold","publisherId","extensions","showUnpublished","filter","extensionId","extensionVersions","publishRes","toExtensionName","versionId","url","toExtensionVersionRef"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getExtension = exports.deleteExtension = exports.unpublishExtension = exports.publishExtensionVersion = exports.registerPublisherProfile = exports.listExtensionVersions = exports.listExtensions = exports.getExtensionVersion = exports.getSource = exports.createSource = exports.updateInstanceFromRegistry = exports.updateInstance = exports.configureInstance = exports.listInstances = exports.getInstance = exports.deleteInstance = exports.createInstance = exports.ParamType = exports.Visibility = exports.RegistryLaunchStage = void 0;\nconst yaml = require(\"js-yaml\");\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst marked = require(\"marked\");\nconst api = require(\"../api\");\nconst refs = require(\"./refs\");\nconst logger_1 = require(\"../logger\");\nconst operationPoller = require(\"../operation-poller\");\nconst error_1 = require(\"../error\");\nconst VERSION = \"v1beta\";\nconst PAGE_SIZE_MAX = 100;\nvar RegistryLaunchStage;\n(function (RegistryLaunchStage) {\n    RegistryLaunchStage[\"EXPERIMENTAL\"] = \"EXPERIMENTAL\";\n    RegistryLaunchStage[\"BETA\"] = \"BETA\";\n    RegistryLaunchStage[\"GA\"] = \"GA\";\n    RegistryLaunchStage[\"DEPRECATED\"] = \"DEPRECATED\";\n    RegistryLaunchStage[\"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\"] = \"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\";\n})(RegistryLaunchStage = exports.RegistryLaunchStage || (exports.RegistryLaunchStage = {}));\nvar Visibility;\n(function (Visibility) {\n    Visibility[\"UNLISTED\"] = \"unlisted\";\n    Visibility[\"PUBLIC\"] = \"public\";\n})(Visibility = exports.Visibility || (exports.Visibility = {}));\nvar ParamType;\n(function (ParamType) {\n    ParamType[\"STRING\"] = \"STRING\";\n    ParamType[\"SELECT\"] = \"SELECT\";\n    ParamType[\"MULTISELECT\"] = \"MULTISELECT\";\n    ParamType[\"SECRET\"] = \"SECRET\";\n})(ParamType = exports.ParamType || (exports.ParamType = {}));\nasync function createInstanceHelper(projectId, instanceId, config) {\n    const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/instances/`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: {\n            name: `projects/${projectId}/instances/${instanceId}`,\n            config: config,\n        },\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: createRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nasync function createInstance(args) {\n    var _a, _b;\n    const config = {\n        params: args.params,\n    };\n    if (args.extensionSource && args.extensionVersionRef) {\n        throw new error_1.FirebaseError(\"ExtensionSource and ExtensionVersion both provided, but only one should be.\");\n    }\n    else if (args.extensionSource) {\n        config.source = { name: (_a = args.extensionSource) === null || _a === void 0 ? void 0 : _a.name };\n    }\n    else if (args.extensionVersionRef) {\n        const ref = refs.parse(args.extensionVersionRef);\n        config.extensionRef = refs.toExtensionRef(ref);\n        config.extensionVersion = (_b = ref.version) !== null && _b !== void 0 ? _b : \"\";\n    }\n    else {\n        throw new error_1.FirebaseError(\"No ExtensionVersion or ExtensionSource provided but one is required.\");\n    }\n    return createInstanceHelper(args.projectId, args.instanceId, config);\n}\nexports.createInstance = createInstance;\nasync function deleteInstance(projectId, instanceId) {\n    const deleteRes = await api.request(\"DELETE\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: deleteRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nexports.deleteInstance = deleteInstance;\nasync function getInstance(projectId, instanceId, options = {}) {\n    const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, _.assign({\n        auth: true,\n        origin: api.extensionsOrigin,\n    }, options));\n    return res.body;\n}\nexports.getInstance = getInstance;\nasync function listInstances(projectId) {\n    const instances = [];\n    const getNextPage = async (pageToken) => {\n        const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n            query: {\n                pageSize: PAGE_SIZE_MAX,\n                pageToken,\n            },\n        });\n        if (Array.isArray(res.body.instances)) {\n            instances.push(...res.body.instances);\n        }\n        if (res.body.nextPageToken) {\n            await getNextPage(res.body.nextPageToken);\n        }\n    };\n    await getNextPage();\n    return instances;\n}\nexports.listInstances = listInstances;\nasync function configureInstance(projectId, instanceId, params) {\n    const res = await patchInstance(projectId, instanceId, \"config.params\", {\n        config: {\n            params,\n        },\n    });\n    return res;\n}\nexports.configureInstance = configureInstance;\nasync function updateInstance(projectId, instanceId, extensionSource, params) {\n    const body = {\n        config: {\n            source: { name: extensionSource.name },\n        },\n    };\n    let updateMask = \"config.source.name\";\n    if (params) {\n        body.config.params = params;\n        updateMask += \",config.params\";\n    }\n    return await patchInstance(projectId, instanceId, updateMask, body);\n}\nexports.updateInstance = updateInstance;\nasync function updateInstanceFromRegistry(projectId, instanceId, extRef, params) {\n    const ref = refs.parse(extRef);\n    const body = {\n        config: {\n            extensionRef: refs.toExtensionRef(ref),\n            extensionVersion: ref.version,\n        },\n    };\n    let updateMask = \"config.extension_ref,config.extension_version\";\n    if (params) {\n        body.config.params = params;\n        updateMask += \",config.params\";\n    }\n    return await patchInstance(projectId, instanceId, updateMask, body);\n}\nexports.updateInstanceFromRegistry = updateInstanceFromRegistry;\nasync function patchInstance(projectId, instanceId, updateMask, data) {\n    const updateRes = await api.request(\"PATCH\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        query: {\n            updateMask,\n        },\n        data,\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: updateRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nfunction populateResourceProperties(spec) {\n    if (spec) {\n        spec.resources.forEach((r) => {\n            try {\n                if (r.propertiesYaml) {\n                    r.properties = yaml.safeLoad(r.propertiesYaml);\n                }\n            }\n            catch (err) {\n                logger_1.logger.debug(`[ext] failed to parse resource properties yaml: ${err}`);\n            }\n        });\n    }\n}\nasync function createSource(projectId, packageUri, extensionRoot) {\n    const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/sources/`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: {\n            packageUri,\n            extensionRoot,\n        },\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: createRes.body.name,\n        masterTimeout: 600000,\n    });\n    if (pollRes.spec) {\n        populateResourceProperties(pollRes.spec);\n    }\n    return pollRes;\n}\nexports.createSource = createSource;\nfunction getSource(sourceName) {\n    return api\n        .request(\"GET\", `/${VERSION}/${sourceName}`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n    })\n        .then((res) => {\n        if (res.body.spec) {\n            populateResourceProperties(res.body.spec);\n        }\n        return res.body;\n    });\n}\nexports.getSource = getSource;\nasync function getExtensionVersion(extensionVersionRef) {\n    const ref = refs.parse(extensionVersionRef);\n    if (!ref.version) {\n        throw new error_1.FirebaseError(`ExtensionVersion ref \"${extensionVersionRef}\" must supply a version.`);\n    }\n    try {\n        const res = await api.request(\"GET\", `/${VERSION}/${refs.toExtensionVersionName(ref)}`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n        if (res.body.spec) {\n            populateResourceProperties(res.body.spec);\n        }\n        return res.body;\n    }\n    catch (err) {\n        if (err.status === 404) {\n            throw refNotFoundError(ref);\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Failed to query the extension version '${clc.bold(extensionVersionRef)}': ${err}`);\n    }\n}\nexports.getExtensionVersion = getExtensionVersion;\nasync function listExtensions(publisherId) {\n    const extensions = [];\n    const getNextPage = async (pageToken) => {\n        const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n            showUnpublished: false,\n            query: {\n                pageSize: PAGE_SIZE_MAX,\n                pageToken,\n            },\n        });\n        if (Array.isArray(res.body.extensions)) {\n            extensions.push(...res.body.extensions);\n        }\n        if (res.body.nextPageToken) {\n            await getNextPage(res.body.nextPageToken);\n        }\n    };\n    await getNextPage();\n    return extensions;\n}\nexports.listExtensions = listExtensions;\nasync function listExtensionVersions(ref, filter) {\n    const { publisherId, extensionId } = refs.parse(ref);\n    const extensionVersions = [];\n    const getNextPage = async (pageToken) => {\n        const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n            query: {\n                filter,\n                pageSize: PAGE_SIZE_MAX,\n                pageToken,\n            },\n        });\n        if (Array.isArray(res.body.extensionVersions)) {\n            extensionVersions.push(...res.body.extensionVersions);\n        }\n        if (res.body.nextPageToken) {\n            await getNextPage(res.body.nextPageToken);\n        }\n    };\n    await getNextPage();\n    return extensionVersions;\n}\nexports.listExtensionVersions = listExtensionVersions;\nasync function registerPublisherProfile(projectId, publisherId) {\n    const res = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/publisherProfile:register`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: { publisherId },\n    });\n    return res.body;\n}\nexports.registerPublisherProfile = registerPublisherProfile;\nasync function publishExtensionVersion(extensionVersionRef, packageUri, extensionRoot) {\n    const ref = refs.parse(extensionVersionRef);\n    if (!ref.version) {\n        throw new error_1.FirebaseError(`ExtensionVersion ref \"${extensionVersionRef}\" must supply a version.`);\n    }\n    const publishRes = await api.request(\"POST\", `/${VERSION}/${refs.toExtensionName(ref)}/versions:publish`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: {\n            versionId: ref.version,\n            packageUri,\n            extensionRoot: extensionRoot !== null && extensionRoot !== void 0 ? extensionRoot : \"/\",\n        },\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: publishRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nexports.publishExtensionVersion = publishExtensionVersion;\nasync function unpublishExtension(extensionRef) {\n    const ref = refs.parse(extensionRef);\n    if (ref.version) {\n        throw new error_1.FirebaseError(`Extension reference \"${extensionRef}\" must not contain a version.`);\n    }\n    const url = `/${VERSION}/${refs.toExtensionName(ref)}:unpublish`;\n    try {\n        await api.request(\"POST\", url, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n    }\n    catch (err) {\n        if (err.status === 403) {\n            throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(extensionRef)}' and don’t have the correct permissions to unpublish this extension.`, { status: err.status });\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Error occurred unpublishing extension '${extensionRef}': ${err}`, {\n            status: err.status,\n        });\n    }\n}\nexports.unpublishExtension = unpublishExtension;\nasync function deleteExtension(extensionRef) {\n    const ref = refs.parse(extensionRef);\n    if (ref.version) {\n        throw new error_1.FirebaseError(`Extension reference \"${extensionRef}\" must not contain a version.`);\n    }\n    const url = `/${VERSION}/${refs.toExtensionName(ref)}`;\n    try {\n        await api.request(\"DELETE\", url, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n    }\n    catch (err) {\n        if (err.status === 403) {\n            throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(extensionRef)}' and don’t have the correct permissions to delete this extension.`, { status: err.status });\n        }\n        else if (err.status === 404) {\n            throw new error_1.FirebaseError(`Extension ${clc.bold(extensionRef)} was not found.`);\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Error occurred delete extension '${extensionRef}': ${err}`, {\n            status: err.status,\n        });\n    }\n}\nexports.deleteExtension = deleteExtension;\nasync function getExtension(extensionRef) {\n    const ref = refs.parse(extensionRef);\n    try {\n        const res = await api.request(\"GET\", `/${VERSION}/${refs.toExtensionName(ref)}`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n        return res.body;\n    }\n    catch (err) {\n        if (err.status === 404) {\n            throw refNotFoundError(ref);\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Failed to query the extension '${clc.bold(extensionRef)}': ${err}`, {\n            status: err.status,\n        });\n    }\n}\nexports.getExtension = getExtension;\nfunction refNotFoundError(ref) {\n    return new error_1.FirebaseError(`The extension reference '${clc.bold(ref.version ? refs.toExtensionVersionRef(ref) : refs.toExtensionRef(ref))}' doesn't exist. This could happen for two reasons:\\n` +\n        `  -The publisher ID '${clc.bold(ref.publisherId)}' doesn't exist or could be misspelled\\n` +\n        `  -The name of the ${ref.version ? \"extension version\" : \"extension\"} '${clc.bold(ref.version ? `${ref.extensionId}@${ref.version}` : ref.extensionId)}' doesn't exist or could be misspelled\\n\\n` +\n        `Please correct the extension reference and try again. If you meant to install an extension from a local source, please provide a relative path prefixed with '${clc.bold(\"./\")}', '${clc.bold(\"../\")}', or '${clc.bold(\"~/\")}'. Learn more about local extension installation at ${marked(\"[https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install](https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install).\")}`, { status: 404 });\n}\n"]},"metadata":{},"sourceType":"script"}