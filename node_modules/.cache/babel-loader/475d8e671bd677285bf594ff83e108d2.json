{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst command_1 = require(\"../command\");\n\nconst utils = require(\"../utils\");\n\nconst requireAuth_1 = require(\"../requireAuth\");\n\nconst client_1 = require(\"../appdistribution/client\");\n\nconst options_parser_util_1 = require(\"../appdistribution/options-parser-util\");\n\nmodule.exports = new command_1.Command(\"appdistribution:testers:add [emails...]\").description(\"add testers to project\").option(\"--file <file>\", \"a path to a file containing a list of tester emails to be added\").before(requireAuth_1.requireAuth).action(async (emails, options) => {\n  const projectName = await options_parser_util_1.getProjectName(options);\n  const appDistroClient = new client_1.AppDistributionClient();\n  const emailsToAdd = options_parser_util_1.getEmails(emails, options.file);\n  utils.logBullet(`Adding ${emailsToAdd.length} testers to project`);\n  await appDistroClient.addTesters(projectName, emailsToAdd);\n});","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/commands/appdistribution-testers-add.js"],"names":["Object","defineProperty","exports","value","command_1","require","utils","requireAuth_1","client_1","options_parser_util_1","module","Command","description","option","before","requireAuth","action","emails","options","projectName","getProjectName","appDistroClient","AppDistributionClient","emailsToAdd","getEmails","file","logBullet","length","addTesters"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,gBAAD,CAA7B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,2BAAD,CAAxB;;AACA,MAAMI,qBAAqB,GAAGJ,OAAO,CAAC,wCAAD,CAArC;;AACAK,MAAM,CAACR,OAAP,GAAiB,IAAIE,SAAS,CAACO,OAAd,CAAsB,yCAAtB,EACZC,WADY,CACA,wBADA,EAEZC,MAFY,CAEL,eAFK,EAEY,iEAFZ,EAGZC,MAHY,CAGLP,aAAa,CAACQ,WAHT,EAIZC,MAJY,CAIL,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AACnC,QAAMC,WAAW,GAAG,MAAMV,qBAAqB,CAACW,cAAtB,CAAqCF,OAArC,CAA1B;AACA,QAAMG,eAAe,GAAG,IAAIb,QAAQ,CAACc,qBAAb,EAAxB;AACA,QAAMC,WAAW,GAAGd,qBAAqB,CAACe,SAAtB,CAAgCP,MAAhC,EAAwCC,OAAO,CAACO,IAAhD,CAApB;AACAnB,EAAAA,KAAK,CAACoB,SAAN,CAAiB,UAASH,WAAW,CAACI,MAAO,qBAA7C;AACA,QAAMN,eAAe,CAACO,UAAhB,CAA2BT,WAA3B,EAAwCI,WAAxC,CAAN;AACH,CAVgB,CAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"../command\");\nconst utils = require(\"../utils\");\nconst requireAuth_1 = require(\"../requireAuth\");\nconst client_1 = require(\"../appdistribution/client\");\nconst options_parser_util_1 = require(\"../appdistribution/options-parser-util\");\nmodule.exports = new command_1.Command(\"appdistribution:testers:add [emails...]\")\n    .description(\"add testers to project\")\n    .option(\"--file <file>\", \"a path to a file containing a list of tester emails to be added\")\n    .before(requireAuth_1.requireAuth)\n    .action(async (emails, options) => {\n    const projectName = await options_parser_util_1.getProjectName(options);\n    const appDistroClient = new client_1.AppDistributionClient();\n    const emailsToAdd = options_parser_util_1.getEmails(emails, options.file);\n    utils.logBullet(`Adding ${emailsToAdd.length} testers to project`);\n    await appDistroClient.addTesters(projectName, emailsToAdd);\n});\n"]},"metadata":{},"sourceType":"script"}