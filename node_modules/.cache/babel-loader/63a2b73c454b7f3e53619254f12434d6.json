{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printTriggerUrls = exports.release = void 0;\n\nconst clc = require(\"cli-color\");\n\nconst logger_1 = require(\"../../../logger\");\n\nconst functional_1 = require(\"../../../functional\");\n\nconst backend = require(\"../backend\");\n\nconst containerCleaner = require(\"../containerCleaner\");\n\nconst planner = require(\"./planner\");\n\nconst fabricator = require(\"./fabricator\");\n\nconst reporter = require(\"./reporter\");\n\nconst executor = require(\"./executor\");\n\nconst prompts = require(\"../prompts\");\n\nconst functionsConfig_1 = require(\"../../../functionsConfig\");\n\nconst functionsDeployHelper_1 = require(\"../functionsDeployHelper\");\n\nconst error_1 = require(\"../../../error\");\n\nasync function release(context, options, payload) {\n  if (!options.config.has(\"functions\")) {\n    return;\n  }\n\n  const plan = planner.createDeploymentPlan(payload.functions.backend, await backend.existingBackend(context), {\n    filters: context.filters\n  });\n  const fnsToDelete = Object.values(plan).map(regionalChanges => regionalChanges.endpointsToDelete).reduce(functional_1.reduceFlat, []);\n  const shouldDelete = await prompts.promptForFunctionDeletion(fnsToDelete, options.force, options.nonInteractive);\n\n  if (!shouldDelete) {\n    for (const change of Object.values(plan)) {\n      change.endpointsToDelete = [];\n    }\n  }\n\n  const functionExecutor = new executor.QueueExecutor({\n    retries: 30,\n    backoff: 20000,\n    concurrency: 40,\n    maxBackoff: 40000\n  });\n  const fab = new fabricator.Fabricator({\n    functionExecutor,\n    executor: new executor.QueueExecutor({}),\n    sourceUrl: context.uploadUrl,\n    storage: context.storage,\n    appEngineLocation: functionsConfig_1.getAppEngineLocation(context.firebaseConfig)\n  });\n  const summary = await fab.applyPlan(plan);\n  await reporter.logAndTrackDeployStats(summary);\n  reporter.printErrors(summary);\n  printTriggerUrls(payload.functions.backend);\n  await containerCleaner.cleanupBuildImages(backend.allEndpoints(payload.functions.backend));\n  const allErrors = summary.results.filter(r => r.error).map(r => r.error);\n\n  if (allErrors.length) {\n    const opts = allErrors.length == 1 ? {\n      original: allErrors[0]\n    } : {\n      children: allErrors\n    };\n    throw new error_1.FirebaseError(\"There was an error deploying functions\", Object.assign(Object.assign({}, opts), {\n      exit: 2\n    }));\n  }\n}\n\nexports.release = release;\n\nfunction printTriggerUrls(results) {\n  const httpsFunctions = backend.allEndpoints(results).filter(backend.isHttpsTriggered);\n\n  if (httpsFunctions.length === 0) {\n    return;\n  }\n\n  for (const httpsFunc of httpsFunctions) {\n    if (!httpsFunc.uri) {\n      logger_1.logger.debug(\"Missing URI for HTTPS function in printTriggerUrls. This shouldn't happen\");\n      continue;\n    }\n\n    logger_1.logger.info(clc.bold(\"Function URL\"), `(${functionsDeployHelper_1.getFunctionLabel(httpsFunc)}):`, httpsFunc.uri);\n  }\n}\n\nexports.printTriggerUrls = printTriggerUrls;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/deploy/functions/release/index.js"],"names":["Object","defineProperty","exports","value","printTriggerUrls","release","clc","require","logger_1","functional_1","backend","containerCleaner","planner","fabricator","reporter","executor","prompts","functionsConfig_1","functionsDeployHelper_1","error_1","context","options","payload","config","has","plan","createDeploymentPlan","functions","existingBackend","filters","fnsToDelete","values","map","regionalChanges","endpointsToDelete","reduce","reduceFlat","shouldDelete","promptForFunctionDeletion","force","nonInteractive","change","functionExecutor","QueueExecutor","retries","backoff","concurrency","maxBackoff","fab","Fabricator","sourceUrl","uploadUrl","storage","appEngineLocation","getAppEngineLocation","firebaseConfig","summary","applyPlan","logAndTrackDeployStats","printErrors","cleanupBuildImages","allEndpoints","allErrors","results","filter","r","error","length","opts","original","children","FirebaseError","assign","exit","httpsFunctions","isHttpsTriggered","httpsFunc","uri","logger","debug","info","bold","getFunctionLabel"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printTriggerUrls = exports.release = void 0;\nconst clc = require(\"cli-color\");\nconst logger_1 = require(\"../../../logger\");\nconst functional_1 = require(\"../../../functional\");\nconst backend = require(\"../backend\");\nconst containerCleaner = require(\"../containerCleaner\");\nconst planner = require(\"./planner\");\nconst fabricator = require(\"./fabricator\");\nconst reporter = require(\"./reporter\");\nconst executor = require(\"./executor\");\nconst prompts = require(\"../prompts\");\nconst functionsConfig_1 = require(\"../../../functionsConfig\");\nconst functionsDeployHelper_1 = require(\"../functionsDeployHelper\");\nconst error_1 = require(\"../../../error\");\nasync function release(context, options, payload) {\n    if (!options.config.has(\"functions\")) {\n        return;\n    }\n    const plan = planner.createDeploymentPlan(payload.functions.backend, await backend.existingBackend(context), { filters: context.filters });\n    const fnsToDelete = Object.values(plan)\n        .map((regionalChanges) => regionalChanges.endpointsToDelete)\n        .reduce(functional_1.reduceFlat, []);\n    const shouldDelete = await prompts.promptForFunctionDeletion(fnsToDelete, options.force, options.nonInteractive);\n    if (!shouldDelete) {\n        for (const change of Object.values(plan)) {\n            change.endpointsToDelete = [];\n        }\n    }\n    const functionExecutor = new executor.QueueExecutor({\n        retries: 30,\n        backoff: 20000,\n        concurrency: 40,\n        maxBackoff: 40000,\n    });\n    const fab = new fabricator.Fabricator({\n        functionExecutor,\n        executor: new executor.QueueExecutor({}),\n        sourceUrl: context.uploadUrl,\n        storage: context.storage,\n        appEngineLocation: functionsConfig_1.getAppEngineLocation(context.firebaseConfig),\n    });\n    const summary = await fab.applyPlan(plan);\n    await reporter.logAndTrackDeployStats(summary);\n    reporter.printErrors(summary);\n    printTriggerUrls(payload.functions.backend);\n    await containerCleaner.cleanupBuildImages(backend.allEndpoints(payload.functions.backend));\n    const allErrors = summary.results.filter((r) => r.error).map((r) => r.error);\n    if (allErrors.length) {\n        const opts = allErrors.length == 1 ? { original: allErrors[0] } : { children: allErrors };\n        throw new error_1.FirebaseError(\"There was an error deploying functions\", Object.assign(Object.assign({}, opts), { exit: 2 }));\n    }\n}\nexports.release = release;\nfunction printTriggerUrls(results) {\n    const httpsFunctions = backend.allEndpoints(results).filter(backend.isHttpsTriggered);\n    if (httpsFunctions.length === 0) {\n        return;\n    }\n    for (const httpsFunc of httpsFunctions) {\n        if (!httpsFunc.uri) {\n            logger_1.logger.debug(\"Missing URI for HTTPS function in printTriggerUrls. This shouldn't happen\");\n            continue;\n        }\n        logger_1.logger.info(clc.bold(\"Function URL\"), `(${functionsDeployHelper_1.getFunctionLabel(httpsFunc)}):`, httpsFunc.uri);\n    }\n}\nexports.printTriggerUrls = printTriggerUrls;\n"]},"metadata":{},"sourceType":"script"}