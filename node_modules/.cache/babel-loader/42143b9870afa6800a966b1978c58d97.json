{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFunctionLabel = exports.getFilterGroups = exports.functionMatchesGroup = exports.functionMatchesAnyGroup = void 0;\n\nfunction functionMatchesAnyGroup(func, filterGroups) {\n  if (!filterGroups.length) {\n    return true;\n  }\n\n  return filterGroups.some(groupChunk => functionMatchesGroup(func, groupChunk));\n}\n\nexports.functionMatchesAnyGroup = functionMatchesAnyGroup;\n\nfunction functionMatchesGroup(func, groupChunks) {\n  const functionNameChunks = func.id.split(\"-\").slice(0, groupChunks.length);\n\n  if (functionNameChunks.length != groupChunks.length) {\n    return false;\n  }\n\n  for (let i = 0; i < groupChunks.length; i += 1) {\n    if (groupChunks[i] !== functionNameChunks[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.functionMatchesGroup = functionMatchesGroup;\n\nfunction getFilterGroups(options) {\n  if (!options.only) {\n    return [];\n  }\n\n  const only = options.only.split(\",\");\n  const onlyFunctions = only.filter(filter => {\n    const opts = filter.split(\":\");\n    return opts[0] == \"functions\" && opts[1];\n  });\n  return onlyFunctions.map(filter => {\n    return filter.split(\":\")[1].split(/[.-]/);\n  });\n}\n\nexports.getFilterGroups = getFilterGroups;\n\nfunction getFunctionLabel(fn) {\n  return `${fn.id}(${fn.region})`;\n}\n\nexports.getFunctionLabel = getFunctionLabel;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/deploy/functions/functionsDeployHelper.js"],"names":["Object","defineProperty","exports","value","getFunctionLabel","getFilterGroups","functionMatchesGroup","functionMatchesAnyGroup","func","filterGroups","length","some","groupChunk","groupChunks","functionNameChunks","id","split","slice","i","options","only","onlyFunctions","filter","opts","map","fn","region"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,eAAR,GAA0BH,OAAO,CAACI,oBAAR,GAA+BJ,OAAO,CAACK,uBAAR,GAAkC,KAAK,CAA3H;;AACA,SAASA,uBAAT,CAAiCC,IAAjC,EAAuCC,YAAvC,EAAqD;AACjD,MAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;AACtB,WAAO,IAAP;AACH;;AACD,SAAOD,YAAY,CAACE,IAAb,CAAmBC,UAAD,IAAgBN,oBAAoB,CAACE,IAAD,EAAOI,UAAP,CAAtD,CAAP;AACH;;AACDV,OAAO,CAACK,uBAAR,GAAkCA,uBAAlC;;AACA,SAASD,oBAAT,CAA8BE,IAA9B,EAAoCK,WAApC,EAAiD;AAC7C,QAAMC,kBAAkB,GAAGN,IAAI,CAACO,EAAL,CAAQC,KAAR,CAAc,GAAd,EAAmBC,KAAnB,CAAyB,CAAzB,EAA4BJ,WAAW,CAACH,MAAxC,CAA3B;;AACA,MAAII,kBAAkB,CAACJ,MAAnB,IAA6BG,WAAW,CAACH,MAA7C,EAAqD;AACjD,WAAO,KAAP;AACH;;AACD,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,WAAW,CAACH,MAAhC,EAAwCQ,CAAC,IAAI,CAA7C,EAAgD;AAC5C,QAAIL,WAAW,CAACK,CAAD,CAAX,KAAmBJ,kBAAkB,CAACI,CAAD,CAAzC,EAA8C;AAC1C,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AACDhB,OAAO,CAACI,oBAAR,GAA+BA,oBAA/B;;AACA,SAASD,eAAT,CAAyBc,OAAzB,EAAkC;AAC9B,MAAI,CAACA,OAAO,CAACC,IAAb,EAAmB;AACf,WAAO,EAAP;AACH;;AACD,QAAMA,IAAI,GAAGD,OAAO,CAACC,IAAR,CAAaJ,KAAb,CAAmB,GAAnB,CAAb;AACA,QAAMK,aAAa,GAAGD,IAAI,CAACE,MAAL,CAAaA,MAAD,IAAY;AAC1C,UAAMC,IAAI,GAAGD,MAAM,CAACN,KAAP,CAAa,GAAb,CAAb;AACA,WAAOO,IAAI,CAAC,CAAD,CAAJ,IAAW,WAAX,IAA0BA,IAAI,CAAC,CAAD,CAArC;AACH,GAHqB,CAAtB;AAIA,SAAOF,aAAa,CAACG,GAAd,CAAmBF,MAAD,IAAY;AACjC,WAAOA,MAAM,CAACN,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqBA,KAArB,CAA2B,MAA3B,CAAP;AACH,GAFM,CAAP;AAGH;;AACDd,OAAO,CAACG,eAAR,GAA0BA,eAA1B;;AACA,SAASD,gBAAT,CAA0BqB,EAA1B,EAA8B;AAC1B,SAAQ,GAAEA,EAAE,CAACV,EAAG,IAAGU,EAAE,CAACC,MAAO,GAA7B;AACH;;AACDxB,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctionLabel = exports.getFilterGroups = exports.functionMatchesGroup = exports.functionMatchesAnyGroup = void 0;\nfunction functionMatchesAnyGroup(func, filterGroups) {\n    if (!filterGroups.length) {\n        return true;\n    }\n    return filterGroups.some((groupChunk) => functionMatchesGroup(func, groupChunk));\n}\nexports.functionMatchesAnyGroup = functionMatchesAnyGroup;\nfunction functionMatchesGroup(func, groupChunks) {\n    const functionNameChunks = func.id.split(\"-\").slice(0, groupChunks.length);\n    if (functionNameChunks.length != groupChunks.length) {\n        return false;\n    }\n    for (let i = 0; i < groupChunks.length; i += 1) {\n        if (groupChunks[i] !== functionNameChunks[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.functionMatchesGroup = functionMatchesGroup;\nfunction getFilterGroups(options) {\n    if (!options.only) {\n        return [];\n    }\n    const only = options.only.split(\",\");\n    const onlyFunctions = only.filter((filter) => {\n        const opts = filter.split(\":\");\n        return opts[0] == \"functions\" && opts[1];\n    });\n    return onlyFunctions.map((filter) => {\n        return filter.split(\":\")[1].split(/[.-]/);\n    });\n}\nexports.getFilterGroups = getFilterGroups;\nfunction getFunctionLabel(fn) {\n    return `${fn.id}(${fn.region})`;\n}\nexports.getFunctionLabel = getFunctionLabel;\n"]},"metadata":{},"sourceType":"script"}