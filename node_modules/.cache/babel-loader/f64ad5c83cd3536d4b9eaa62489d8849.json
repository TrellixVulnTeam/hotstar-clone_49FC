{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateMessageSize = void 0;\n/**\n * Precisely calculates the size of a message with optional `data` and\n * `attributes` fields. If a `data` field is present, its {@link Buffer#length}\n * member will be used. If `attributes` are present, each attribute's\n * key and value will be calculated for byte length.\n *\n * When the calculation is complete, the result will be stored in\n * `calculatedSize`. Since this calculation is generally only done\n * after the message has been handed off to this library, there shouldn't\n * be an issue with it being updated after the fact.\n *\n * This should not be used outside of this library. Its implementation\n * may change.\n *\n * @private\n */\n\nfunction calculateMessageSize(message) {\n  // If it's not a PubsubMessage, we'll augment it into one.\n  const msg = message;\n\n  if (msg.calculatedSize !== undefined) {\n    return msg.calculatedSize;\n  }\n\n  let size = 0;\n\n  if (msg.data) {\n    size += msg.data.length;\n  }\n\n  if (msg.attributes) {\n    const attrs = msg.attributes;\n\n    for (const key of Object.getOwnPropertyNames(attrs)) {\n      const val = attrs[key] || '';\n      size += Buffer.byteLength(key + val);\n    }\n  }\n\n  msg.calculatedSize = size;\n  return size;\n}\n\nexports.calculateMessageSize = calculateMessageSize;","map":{"version":3,"sources":["../../../src/publisher/pubsub-message.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAyBH;;;;;;;;;;;;;;;AAeG;;AACH,SAAgB,oBAAhB,CACE,OADF,EAC0D;AAExD;AACA,QAAM,GAAG,GAAG,OAAZ;;AAEA,MAAI,GAAG,CAAC,cAAJ,KAAuB,SAA3B,EAAsC;AACpC,WAAO,GAAG,CAAC,cAAX;AACD;;AAED,MAAI,IAAI,GAAG,CAAX;;AAEA,MAAI,GAAG,CAAC,IAAR,EAAc;AACZ,IAAA,IAAI,IAAI,GAAG,CAAC,IAAJ,CAAS,MAAjB;AACD;;AACD,MAAI,GAAG,CAAC,UAAR,EAAoB;AAClB,UAAM,KAAK,GAAG,GAAG,CAAC,UAAlB;;AACA,SAAK,MAAM,GAAX,IAAkB,MAAM,CAAC,mBAAP,CAA2B,KAA3B,CAAlB,EAAqD;AACnD,YAAM,GAAG,GAAG,KAAK,CAAC,GAAD,CAAL,IAAc,EAA1B;AACA,MAAA,IAAI,IAAI,MAAM,CAAC,UAAP,CAAkB,GAAG,GAAG,GAAxB,CAAR;AACD;AACF;;AAED,EAAA,GAAG,CAAC,cAAJ,GAAqB,IAArB;AACA,SAAO,IAAP;AACD;;AAzBD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateMessageSize = void 0;\n/**\n * Precisely calculates the size of a message with optional `data` and\n * `attributes` fields. If a `data` field is present, its {@link Buffer#length}\n * member will be used. If `attributes` are present, each attribute's\n * key and value will be calculated for byte length.\n *\n * When the calculation is complete, the result will be stored in\n * `calculatedSize`. Since this calculation is generally only done\n * after the message has been handed off to this library, there shouldn't\n * be an issue with it being updated after the fact.\n *\n * This should not be used outside of this library. Its implementation\n * may change.\n *\n * @private\n */\nfunction calculateMessageSize(message) {\n    // If it's not a PubsubMessage, we'll augment it into one.\n    const msg = message;\n    if (msg.calculatedSize !== undefined) {\n        return msg.calculatedSize;\n    }\n    let size = 0;\n    if (msg.data) {\n        size += msg.data.length;\n    }\n    if (msg.attributes) {\n        const attrs = msg.attributes;\n        for (const key of Object.getOwnPropertyNames(attrs)) {\n            const val = attrs[key] || '';\n            size += Buffer.byteLength(key + val);\n        }\n    }\n    msg.calculatedSize = size;\n    return size;\n}\nexports.calculateMessageSize = calculateMessageSize;\n//# sourceMappingURL=pubsub-message.js.map"]},"metadata":{},"sourceType":"script"}