{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.functionFromEndpoint = exports.endpointFromFunction = exports.listAllFunctions = exports.listFunctions = exports.deleteFunction = exports.updateFunction = exports.setInvokerUpdate = exports.setInvokerCreate = exports.getIamPolicy = exports.setIamPolicy = exports.createFunction = exports.generateUploadUrl = exports.API_VERSION = void 0;\n\nconst clc = require(\"cli-color\");\n\nconst error_1 = require(\"../error\");\n\nconst logger_1 = require(\"../logger\");\n\nconst api = require(\"../api\");\n\nconst backend = require(\"../deploy/functions/backend\");\n\nconst utils = require(\"../utils\");\n\nconst proto = require(\"./proto\");\n\nconst runtimes = require(\"../deploy/functions/runtimes\");\n\nexports.API_VERSION = \"v1\";\n\nfunction validateFunction(func) {\n  proto.assertOneOf(\"Cloud Function\", func, \"sourceCode\", \"sourceArchiveUrl\", \"sourceRepository\", \"sourceUploadUrl\");\n  proto.assertOneOf(\"Cloud Function\", func, \"trigger\", \"httpsTrigger\", \"eventTrigger\");\n}\n\nfunction functionsOpLogReject(funcName, type, err) {\n  var _a, _b;\n\n  if (((_b = (_a = err === null || err === void 0 ? void 0 : err.context) === null || _a === void 0 ? void 0 : _a.response) === null || _b === void 0 ? void 0 : _b.statusCode) === 429) {\n    utils.logWarning(`${clc.bold.yellow(\"functions:\")} got \"Quota Exceeded\" error while trying to ${type} ${funcName}. Waiting to retry...`);\n  } else {\n    utils.logWarning(clc.bold.yellow(\"functions:\") + \" failed to \" + type + \" function \" + funcName);\n  }\n\n  throw new error_1.FirebaseError(`Failed to ${type} function ${funcName}`, {\n    original: err,\n    context: {\n      function: funcName\n    }\n  });\n}\n\nasync function generateUploadUrl(projectId, location) {\n  const parent = \"projects/\" + projectId + \"/locations/\" + location;\n  const endpoint = \"/\" + exports.API_VERSION + \"/\" + parent + \"/functions:generateUploadUrl\";\n\n  try {\n    const res = await api.request(\"POST\", endpoint, {\n      auth: true,\n      json: false,\n      origin: api.functionsOrigin,\n      retryCodes: [503]\n    });\n    const responseBody = JSON.parse(res.body);\n    return responseBody.uploadUrl;\n  } catch (err) {\n    logger_1.logger.info(\"\\n\\nThere was an issue deploying your functions. Verify that your project has a Google App Engine instance setup at https://console.cloud.google.com/appengine and try again. If this issue persists, please contact support.\");\n    throw err;\n  }\n}\n\nexports.generateUploadUrl = generateUploadUrl;\n\nasync function createFunction(cloudFunction) {\n  const apiPath = cloudFunction.name.substring(0, cloudFunction.name.lastIndexOf(\"/\"));\n  const endpoint = `/${exports.API_VERSION}/${apiPath}`;\n\n  try {\n    const res = await api.request(\"POST\", endpoint, {\n      auth: true,\n      data: cloudFunction,\n      origin: api.functionsOrigin\n    });\n    return {\n      name: res.body.name,\n      type: \"create\",\n      done: false\n    };\n  } catch (err) {\n    throw functionsOpLogReject(cloudFunction.name, \"create\", err);\n  }\n}\n\nexports.createFunction = createFunction;\n\nasync function setIamPolicy(options) {\n  const endpoint = `/${exports.API_VERSION}/${options.name}:setIamPolicy`;\n\n  try {\n    await api.request(\"POST\", endpoint, {\n      auth: true,\n      data: {\n        policy: options.policy,\n        updateMask: Object.keys(options.policy).join(\",\")\n      },\n      origin: api.functionsOrigin\n    });\n  } catch (err) {\n    throw new error_1.FirebaseError(`Failed to set the IAM Policy on the function ${options.name}`, {\n      original: err\n    });\n  }\n}\n\nexports.setIamPolicy = setIamPolicy;\n\nasync function getIamPolicy(fnName) {\n  const endpoint = `/${exports.API_VERSION}/${fnName}:getIamPolicy`;\n\n  try {\n    return await api.request(\"GET\", endpoint, {\n      auth: true,\n      origin: api.functionsOrigin\n    });\n  } catch (err) {\n    throw new error_1.FirebaseError(`Failed to get the IAM Policy on the function ${fnName}`, {\n      original: err\n    });\n  }\n}\n\nexports.getIamPolicy = getIamPolicy;\n\nasync function setInvokerCreate(projectId, fnName, invoker) {\n  if (invoker.length == 0) {\n    throw new error_1.FirebaseError(\"Invoker cannot be an empty array\");\n  }\n\n  const invokerMembers = proto.getInvokerMembers(invoker, projectId);\n  const invokerRole = \"roles/cloudfunctions.invoker\";\n  const bindings = [{\n    role: invokerRole,\n    members: invokerMembers\n  }];\n  const policy = {\n    bindings: bindings,\n    etag: \"\",\n    version: 3\n  };\n  await setIamPolicy({\n    name: fnName,\n    policy: policy\n  });\n}\n\nexports.setInvokerCreate = setInvokerCreate;\n\nasync function setInvokerUpdate(projectId, fnName, invoker) {\n  var _a;\n\n  if (invoker.length == 0) {\n    throw new error_1.FirebaseError(\"Invoker cannot be an empty array\");\n  }\n\n  const invokerMembers = proto.getInvokerMembers(invoker, projectId);\n  const invokerRole = \"roles/cloudfunctions.invoker\";\n  const currentPolicy = await getIamPolicy(fnName);\n  const currentInvokerBinding = (_a = currentPolicy.bindings) === null || _a === void 0 ? void 0 : _a.find(binding => binding.role === invokerRole);\n\n  if (currentInvokerBinding && JSON.stringify(currentInvokerBinding.members.sort()) === JSON.stringify(invokerMembers.sort())) {\n    return;\n  }\n\n  const bindings = (currentPolicy.bindings || []).filter(binding => binding.role !== invokerRole);\n  bindings.push({\n    role: invokerRole,\n    members: invokerMembers\n  });\n  const policy = {\n    bindings: bindings,\n    etag: currentPolicy.etag || \"\",\n    version: 3\n  };\n  await setIamPolicy({\n    name: fnName,\n    policy: policy\n  });\n}\n\nexports.setInvokerUpdate = setInvokerUpdate;\n\nasync function updateFunction(cloudFunction) {\n  const endpoint = `/${exports.API_VERSION}/${cloudFunction.name}`;\n  const fieldMasks = proto.fieldMasks(cloudFunction, \"labels\", \"environmentVariables\");\n\n  try {\n    const res = await api.request(\"PATCH\", endpoint, {\n      qs: {\n        updateMask: fieldMasks.join(\",\")\n      },\n      auth: true,\n      data: cloudFunction,\n      origin: api.functionsOrigin\n    });\n    return {\n      done: false,\n      name: res.body.name,\n      type: \"update\"\n    };\n  } catch (err) {\n    throw functionsOpLogReject(cloudFunction.name, \"update\", err);\n  }\n}\n\nexports.updateFunction = updateFunction;\n\nasync function deleteFunction(name) {\n  const endpoint = `/${exports.API_VERSION}/${name}`;\n\n  try {\n    const res = await api.request(\"DELETE\", endpoint, {\n      auth: true,\n      origin: api.functionsOrigin\n    });\n    return {\n      done: false,\n      name: res.body.name,\n      type: \"delete\"\n    };\n  } catch (err) {\n    throw functionsOpLogReject(name, \"delete\", err);\n  }\n}\n\nexports.deleteFunction = deleteFunction;\n\nasync function list(projectId, region) {\n  const endpoint = \"/\" + exports.API_VERSION + \"/projects/\" + projectId + \"/locations/\" + region + \"/functions\";\n\n  try {\n    const res = await api.request(\"GET\", endpoint, {\n      auth: true,\n      origin: api.functionsOrigin\n    });\n\n    if (res.body.unreachable && res.body.unreachable.length > 0) {\n      logger_1.logger.debug(`[functions] unable to reach the following regions: ${res.body.unreachable.join(\", \")}`);\n    }\n\n    return {\n      functions: res.body.functions || [],\n      unreachable: res.body.unreachable || []\n    };\n  } catch (err) {\n    logger_1.logger.debug(`[functions] failed to list functions for ${projectId}`);\n    logger_1.logger.debug(`[functions] ${err === null || err === void 0 ? void 0 : err.message}`);\n    throw new error_1.FirebaseError(`Failed to list functions for ${projectId}`, {\n      original: err\n    });\n  }\n}\n\nasync function listFunctions(projectId, region) {\n  const res = await list(projectId, region);\n  return res.functions;\n}\n\nexports.listFunctions = listFunctions;\n\nasync function listAllFunctions(projectId) {\n  return list(projectId, \"-\");\n}\n\nexports.listAllFunctions = listAllFunctions;\n\nfunction endpointFromFunction(gcfFunction) {\n  var _a, _b;\n\n  const [, project,, region,, id] = gcfFunction.name.split(\"/\");\n  let trigger;\n  let uri;\n\n  if (gcfFunction.httpsTrigger) {\n    trigger = {\n      httpsTrigger: {}\n    };\n    uri = gcfFunction.httpsTrigger.url;\n  } else if ((_a = gcfFunction.labels) === null || _a === void 0 ? void 0 : _a[\"deployment-scheduled\"]) {\n    trigger = {\n      scheduleTrigger: {}\n    };\n  } else {\n    trigger = {\n      eventTrigger: {\n        eventType: gcfFunction.eventTrigger.eventType,\n        eventFilters: {\n          resource: gcfFunction.eventTrigger.resource\n        },\n        retry: !!((_b = gcfFunction.eventTrigger.failurePolicy) === null || _b === void 0 ? void 0 : _b.retry)\n      }\n    };\n  }\n\n  if (!runtimes.isValidRuntime(gcfFunction.runtime)) {\n    logger_1.logger.debug(\"GCFv1 function has a deprecated runtime:\", JSON.stringify(gcfFunction, null, 2));\n  }\n\n  const endpoint = Object.assign(Object.assign({\n    platform: \"gcfv1\",\n    id,\n    project,\n    region\n  }, trigger), {\n    entryPoint: gcfFunction.entryPoint,\n    runtime: gcfFunction.runtime\n  });\n\n  if (uri) {\n    endpoint.uri = uri;\n  }\n\n  proto.copyIfPresent(endpoint, gcfFunction, \"serviceAccountEmail\", \"availableMemoryMb\", \"timeout\", \"minInstances\", \"maxInstances\", \"vpcConnector\", \"vpcConnectorEgressSettings\", \"ingressSettings\", \"labels\", \"environmentVariables\", \"sourceUploadUrl\");\n  return endpoint;\n}\n\nexports.endpointFromFunction = endpointFromFunction;\n\nfunction functionFromEndpoint(endpoint, sourceUploadUrl) {\n  if (endpoint.platform != \"gcfv1\") {\n    throw new error_1.FirebaseError(\"Trying to create a v1 CloudFunction with v2 API. This should never happen\");\n  }\n\n  if (!runtimes.isValidRuntime(endpoint.runtime)) {\n    throw new error_1.FirebaseError(\"Failed internal assertion. Trying to deploy a new function with a deprecated runtime.\" + \" This should never happen\");\n  }\n\n  const gcfFunction = {\n    name: backend.functionName(endpoint),\n    sourceUploadUrl: sourceUploadUrl,\n    entryPoint: endpoint.entryPoint,\n    runtime: endpoint.runtime\n  };\n  proto.copyIfPresent(gcfFunction, endpoint, \"labels\");\n\n  if (backend.isEventTriggered(endpoint)) {\n    gcfFunction.eventTrigger = {\n      eventType: endpoint.eventTrigger.eventType,\n      resource: endpoint.eventTrigger.eventFilters.resource\n    };\n    gcfFunction.eventTrigger.failurePolicy = endpoint.eventTrigger.retry ? {\n      retry: {}\n    } : undefined;\n  } else if (backend.isScheduleTriggered(endpoint)) {\n    const id = backend.scheduleIdForFunction(endpoint);\n    gcfFunction.eventTrigger = {\n      eventType: \"google.pubsub.topic.publish\",\n      resource: `projects/${endpoint.project}/topics/${id}`\n    };\n    gcfFunction.labels = Object.assign(Object.assign({}, gcfFunction.labels), {\n      \"deployment-scheduled\": \"true\"\n    });\n  } else {\n    gcfFunction.httpsTrigger = {};\n  }\n\n  proto.copyIfPresent(gcfFunction, endpoint, \"serviceAccountEmail\", \"timeout\", \"availableMemoryMb\", \"minInstances\", \"maxInstances\", \"vpcConnector\", \"vpcConnectorEgressSettings\", \"ingressSettings\", \"environmentVariables\");\n  return gcfFunction;\n}\n\nexports.functionFromEndpoint = functionFromEndpoint;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/gcp/cloudfunctions.js"],"names":["Object","defineProperty","exports","value","functionFromEndpoint","endpointFromFunction","listAllFunctions","listFunctions","deleteFunction","updateFunction","setInvokerUpdate","setInvokerCreate","getIamPolicy","setIamPolicy","createFunction","generateUploadUrl","API_VERSION","clc","require","error_1","logger_1","api","backend","utils","proto","runtimes","validateFunction","func","assertOneOf","functionsOpLogReject","funcName","type","err","_a","_b","context","response","statusCode","logWarning","bold","yellow","FirebaseError","original","function","projectId","location","parent","endpoint","res","request","auth","json","origin","functionsOrigin","retryCodes","responseBody","JSON","parse","body","uploadUrl","logger","info","cloudFunction","apiPath","name","substring","lastIndexOf","data","done","options","policy","updateMask","keys","join","fnName","invoker","length","invokerMembers","getInvokerMembers","invokerRole","bindings","role","members","etag","version","currentPolicy","currentInvokerBinding","find","binding","stringify","sort","filter","push","fieldMasks","qs","list","region","unreachable","debug","functions","message","gcfFunction","project","id","split","trigger","uri","httpsTrigger","url","labels","scheduleTrigger","eventTrigger","eventType","eventFilters","resource","retry","failurePolicy","isValidRuntime","runtime","assign","platform","entryPoint","copyIfPresent","sourceUploadUrl","functionName","isEventTriggered","undefined","isScheduleTriggered","scheduleIdForFunction"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.functionFromEndpoint = exports.endpointFromFunction = exports.listAllFunctions = exports.listFunctions = exports.deleteFunction = exports.updateFunction = exports.setInvokerUpdate = exports.setInvokerCreate = exports.getIamPolicy = exports.setIamPolicy = exports.createFunction = exports.generateUploadUrl = exports.API_VERSION = void 0;\nconst clc = require(\"cli-color\");\nconst error_1 = require(\"../error\");\nconst logger_1 = require(\"../logger\");\nconst api = require(\"../api\");\nconst backend = require(\"../deploy/functions/backend\");\nconst utils = require(\"../utils\");\nconst proto = require(\"./proto\");\nconst runtimes = require(\"../deploy/functions/runtimes\");\nexports.API_VERSION = \"v1\";\nfunction validateFunction(func) {\n    proto.assertOneOf(\"Cloud Function\", func, \"sourceCode\", \"sourceArchiveUrl\", \"sourceRepository\", \"sourceUploadUrl\");\n    proto.assertOneOf(\"Cloud Function\", func, \"trigger\", \"httpsTrigger\", \"eventTrigger\");\n}\nfunction functionsOpLogReject(funcName, type, err) {\n    var _a, _b;\n    if (((_b = (_a = err === null || err === void 0 ? void 0 : err.context) === null || _a === void 0 ? void 0 : _a.response) === null || _b === void 0 ? void 0 : _b.statusCode) === 429) {\n        utils.logWarning(`${clc.bold.yellow(\"functions:\")} got \"Quota Exceeded\" error while trying to ${type} ${funcName}. Waiting to retry...`);\n    }\n    else {\n        utils.logWarning(clc.bold.yellow(\"functions:\") + \" failed to \" + type + \" function \" + funcName);\n    }\n    throw new error_1.FirebaseError(`Failed to ${type} function ${funcName}`, {\n        original: err,\n        context: { function: funcName },\n    });\n}\nasync function generateUploadUrl(projectId, location) {\n    const parent = \"projects/\" + projectId + \"/locations/\" + location;\n    const endpoint = \"/\" + exports.API_VERSION + \"/\" + parent + \"/functions:generateUploadUrl\";\n    try {\n        const res = await api.request(\"POST\", endpoint, {\n            auth: true,\n            json: false,\n            origin: api.functionsOrigin,\n            retryCodes: [503],\n        });\n        const responseBody = JSON.parse(res.body);\n        return responseBody.uploadUrl;\n    }\n    catch (err) {\n        logger_1.logger.info(\"\\n\\nThere was an issue deploying your functions. Verify that your project has a Google App Engine instance setup at https://console.cloud.google.com/appengine and try again. If this issue persists, please contact support.\");\n        throw err;\n    }\n}\nexports.generateUploadUrl = generateUploadUrl;\nasync function createFunction(cloudFunction) {\n    const apiPath = cloudFunction.name.substring(0, cloudFunction.name.lastIndexOf(\"/\"));\n    const endpoint = `/${exports.API_VERSION}/${apiPath}`;\n    try {\n        const res = await api.request(\"POST\", endpoint, {\n            auth: true,\n            data: cloudFunction,\n            origin: api.functionsOrigin,\n        });\n        return {\n            name: res.body.name,\n            type: \"create\",\n            done: false,\n        };\n    }\n    catch (err) {\n        throw functionsOpLogReject(cloudFunction.name, \"create\", err);\n    }\n}\nexports.createFunction = createFunction;\nasync function setIamPolicy(options) {\n    const endpoint = `/${exports.API_VERSION}/${options.name}:setIamPolicy`;\n    try {\n        await api.request(\"POST\", endpoint, {\n            auth: true,\n            data: {\n                policy: options.policy,\n                updateMask: Object.keys(options.policy).join(\",\"),\n            },\n            origin: api.functionsOrigin,\n        });\n    }\n    catch (err) {\n        throw new error_1.FirebaseError(`Failed to set the IAM Policy on the function ${options.name}`, {\n            original: err,\n        });\n    }\n}\nexports.setIamPolicy = setIamPolicy;\nasync function getIamPolicy(fnName) {\n    const endpoint = `/${exports.API_VERSION}/${fnName}:getIamPolicy`;\n    try {\n        return await api.request(\"GET\", endpoint, {\n            auth: true,\n            origin: api.functionsOrigin,\n        });\n    }\n    catch (err) {\n        throw new error_1.FirebaseError(`Failed to get the IAM Policy on the function ${fnName}`, {\n            original: err,\n        });\n    }\n}\nexports.getIamPolicy = getIamPolicy;\nasync function setInvokerCreate(projectId, fnName, invoker) {\n    if (invoker.length == 0) {\n        throw new error_1.FirebaseError(\"Invoker cannot be an empty array\");\n    }\n    const invokerMembers = proto.getInvokerMembers(invoker, projectId);\n    const invokerRole = \"roles/cloudfunctions.invoker\";\n    const bindings = [{ role: invokerRole, members: invokerMembers }];\n    const policy = {\n        bindings: bindings,\n        etag: \"\",\n        version: 3,\n    };\n    await setIamPolicy({ name: fnName, policy: policy });\n}\nexports.setInvokerCreate = setInvokerCreate;\nasync function setInvokerUpdate(projectId, fnName, invoker) {\n    var _a;\n    if (invoker.length == 0) {\n        throw new error_1.FirebaseError(\"Invoker cannot be an empty array\");\n    }\n    const invokerMembers = proto.getInvokerMembers(invoker, projectId);\n    const invokerRole = \"roles/cloudfunctions.invoker\";\n    const currentPolicy = await getIamPolicy(fnName);\n    const currentInvokerBinding = (_a = currentPolicy.bindings) === null || _a === void 0 ? void 0 : _a.find((binding) => binding.role === invokerRole);\n    if (currentInvokerBinding &&\n        JSON.stringify(currentInvokerBinding.members.sort()) === JSON.stringify(invokerMembers.sort())) {\n        return;\n    }\n    const bindings = (currentPolicy.bindings || []).filter((binding) => binding.role !== invokerRole);\n    bindings.push({\n        role: invokerRole,\n        members: invokerMembers,\n    });\n    const policy = {\n        bindings: bindings,\n        etag: currentPolicy.etag || \"\",\n        version: 3,\n    };\n    await setIamPolicy({ name: fnName, policy: policy });\n}\nexports.setInvokerUpdate = setInvokerUpdate;\nasync function updateFunction(cloudFunction) {\n    const endpoint = `/${exports.API_VERSION}/${cloudFunction.name}`;\n    const fieldMasks = proto.fieldMasks(cloudFunction, \"labels\", \"environmentVariables\");\n    try {\n        const res = await api.request(\"PATCH\", endpoint, {\n            qs: {\n                updateMask: fieldMasks.join(\",\"),\n            },\n            auth: true,\n            data: cloudFunction,\n            origin: api.functionsOrigin,\n        });\n        return {\n            done: false,\n            name: res.body.name,\n            type: \"update\",\n        };\n    }\n    catch (err) {\n        throw functionsOpLogReject(cloudFunction.name, \"update\", err);\n    }\n}\nexports.updateFunction = updateFunction;\nasync function deleteFunction(name) {\n    const endpoint = `/${exports.API_VERSION}/${name}`;\n    try {\n        const res = await api.request(\"DELETE\", endpoint, {\n            auth: true,\n            origin: api.functionsOrigin,\n        });\n        return {\n            done: false,\n            name: res.body.name,\n            type: \"delete\",\n        };\n    }\n    catch (err) {\n        throw functionsOpLogReject(name, \"delete\", err);\n    }\n}\nexports.deleteFunction = deleteFunction;\nasync function list(projectId, region) {\n    const endpoint = \"/\" + exports.API_VERSION + \"/projects/\" + projectId + \"/locations/\" + region + \"/functions\";\n    try {\n        const res = await api.request(\"GET\", endpoint, {\n            auth: true,\n            origin: api.functionsOrigin,\n        });\n        if (res.body.unreachable && res.body.unreachable.length > 0) {\n            logger_1.logger.debug(`[functions] unable to reach the following regions: ${res.body.unreachable.join(\", \")}`);\n        }\n        return {\n            functions: res.body.functions || [],\n            unreachable: res.body.unreachable || [],\n        };\n    }\n    catch (err) {\n        logger_1.logger.debug(`[functions] failed to list functions for ${projectId}`);\n        logger_1.logger.debug(`[functions] ${err === null || err === void 0 ? void 0 : err.message}`);\n        throw new error_1.FirebaseError(`Failed to list functions for ${projectId}`, {\n            original: err,\n        });\n    }\n}\nasync function listFunctions(projectId, region) {\n    const res = await list(projectId, region);\n    return res.functions;\n}\nexports.listFunctions = listFunctions;\nasync function listAllFunctions(projectId) {\n    return list(projectId, \"-\");\n}\nexports.listAllFunctions = listAllFunctions;\nfunction endpointFromFunction(gcfFunction) {\n    var _a, _b;\n    const [, project, , region, , id] = gcfFunction.name.split(\"/\");\n    let trigger;\n    let uri;\n    if (gcfFunction.httpsTrigger) {\n        trigger = { httpsTrigger: {} };\n        uri = gcfFunction.httpsTrigger.url;\n    }\n    else if ((_a = gcfFunction.labels) === null || _a === void 0 ? void 0 : _a[\"deployment-scheduled\"]) {\n        trigger = {\n            scheduleTrigger: {},\n        };\n    }\n    else {\n        trigger = {\n            eventTrigger: {\n                eventType: gcfFunction.eventTrigger.eventType,\n                eventFilters: {\n                    resource: gcfFunction.eventTrigger.resource,\n                },\n                retry: !!((_b = gcfFunction.eventTrigger.failurePolicy) === null || _b === void 0 ? void 0 : _b.retry),\n            },\n        };\n    }\n    if (!runtimes.isValidRuntime(gcfFunction.runtime)) {\n        logger_1.logger.debug(\"GCFv1 function has a deprecated runtime:\", JSON.stringify(gcfFunction, null, 2));\n    }\n    const endpoint = Object.assign(Object.assign({ platform: \"gcfv1\", id,\n        project,\n        region }, trigger), { entryPoint: gcfFunction.entryPoint, runtime: gcfFunction.runtime });\n    if (uri) {\n        endpoint.uri = uri;\n    }\n    proto.copyIfPresent(endpoint, gcfFunction, \"serviceAccountEmail\", \"availableMemoryMb\", \"timeout\", \"minInstances\", \"maxInstances\", \"vpcConnector\", \"vpcConnectorEgressSettings\", \"ingressSettings\", \"labels\", \"environmentVariables\", \"sourceUploadUrl\");\n    return endpoint;\n}\nexports.endpointFromFunction = endpointFromFunction;\nfunction functionFromEndpoint(endpoint, sourceUploadUrl) {\n    if (endpoint.platform != \"gcfv1\") {\n        throw new error_1.FirebaseError(\"Trying to create a v1 CloudFunction with v2 API. This should never happen\");\n    }\n    if (!runtimes.isValidRuntime(endpoint.runtime)) {\n        throw new error_1.FirebaseError(\"Failed internal assertion. Trying to deploy a new function with a deprecated runtime.\" +\n            \" This should never happen\");\n    }\n    const gcfFunction = {\n        name: backend.functionName(endpoint),\n        sourceUploadUrl: sourceUploadUrl,\n        entryPoint: endpoint.entryPoint,\n        runtime: endpoint.runtime,\n    };\n    proto.copyIfPresent(gcfFunction, endpoint, \"labels\");\n    if (backend.isEventTriggered(endpoint)) {\n        gcfFunction.eventTrigger = {\n            eventType: endpoint.eventTrigger.eventType,\n            resource: endpoint.eventTrigger.eventFilters.resource,\n        };\n        gcfFunction.eventTrigger.failurePolicy = endpoint.eventTrigger.retry\n            ? { retry: {} }\n            : undefined;\n    }\n    else if (backend.isScheduleTriggered(endpoint)) {\n        const id = backend.scheduleIdForFunction(endpoint);\n        gcfFunction.eventTrigger = {\n            eventType: \"google.pubsub.topic.publish\",\n            resource: `projects/${endpoint.project}/topics/${id}`,\n        };\n        gcfFunction.labels = Object.assign(Object.assign({}, gcfFunction.labels), { \"deployment-scheduled\": \"true\" });\n    }\n    else {\n        gcfFunction.httpsTrigger = {};\n    }\n    proto.copyIfPresent(gcfFunction, endpoint, \"serviceAccountEmail\", \"timeout\", \"availableMemoryMb\", \"minInstances\", \"maxInstances\", \"vpcConnector\", \"vpcConnectorEgressSettings\", \"ingressSettings\", \"environmentVariables\");\n    return gcfFunction;\n}\nexports.functionFromEndpoint = functionFromEndpoint;\n"]},"metadata":{},"sourceType":"script"}