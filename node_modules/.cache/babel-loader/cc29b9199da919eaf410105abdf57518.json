{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  openapi: \"3.0.3\",\n  info: {\n    title: \"Identity Toolkit API\",\n    description: \"The Google Identity Toolkit API lets you use open standards to verify a user's identity.\",\n    contact: {\n      name: \"Google\",\n      url: \"https://google.com\"\n    },\n    version: \"v1\",\n    license: {\n      name: \"Creative Commons Attribution 3.0\",\n      url: \"http://creativecommons.org/licenses/by/3.0/\"\n    },\n    termsOfService: \"https://developers.google.com/terms/\"\n  },\n  servers: [{\n    url: \"https://identitytoolkit.googleapis.com\"\n  }],\n  externalDocs: {\n    url: \"https://firebase.google.com/docs/auth/\"\n  },\n  tags: [{\n    name: \"accounts\"\n  }, {\n    name: \"projects\"\n  }, {\n    name: \"v1\"\n  }, {\n    name: \"defaultSupportedIdps\"\n  }, {\n    name: \"secureToken\"\n  }, {\n    name: \"emulator\"\n  }],\n  paths: {\n    \"/v1/accounts:createAuthUri\": {\n      post: {\n        description: \"If an email identifier is specified, checks and returns if any user account is registered with the email. If there is a registered account, fetches all providers associated with the account's email. If the provider ID of an Identity Provider (IdP) is specified, creates an authorization URI for the IdP. The user can be directed to this URI to sign in with the IdP. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.createAuthUri\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateAuthUriResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateAuthUriRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:delete\": {\n      post: {\n        description: \"Deletes a user's account.\",\n        operationId: \"identitytoolkit.accounts.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:issueSamlResponse\": {\n      post: {\n        description: \"Experimental\",\n        operationId: \"identitytoolkit.accounts.issueSamlResponse\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:lookup\": {\n      post: {\n        description: \"Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.\",\n        operationId: \"identitytoolkit.accounts.lookup\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:resetPassword\": {\n      post: {\n        description: \"Resets the password of an account either using an out-of-band code generated by sendOobCode or by specifying the email and password of the account to be modified. Can also check the purpose of an out-of-band code without consuming it.\",\n        operationId: \"identitytoolkit.accounts.resetPassword\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ResetPasswordResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ResetPasswordRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:sendOobCode\": {\n      post: {\n        description: \"Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.\",\n        operationId: \"identitytoolkit.accounts.sendOobCode\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:sendVerificationCode\": {\n      post: {\n        description: \"Sends a SMS verification code for phone number sign-in. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.sendVerificationCode\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:signInWithCustomToken\": {\n      post: {\n        description: \"Signs in or signs up a user by exchanging a custom Auth token. Upon a successful sign-in or sign-up, a new Identity Platform ID token and refresh token are issued for the user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.signInWithCustomToken\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:signInWithEmailLink\": {\n      post: {\n        description: \"Signs in or signs up a user with a out-of-band code from an email link. If a user does not exist with the given email address, a user record will be created. If the sign-in succeeds, an Identity Platform ID and refresh token are issued for the authenticated user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.signInWithEmailLink\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:signInWithGameCenter\": {\n      post: {\n        description: \"Signs in or signs up a user with iOS Game Center credentials. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. The bundle ID is required in the request header as `x-ios-bundle-identifier`. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.signInWithGameCenter\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:signInWithIdp\": {\n      post: {\n        description: 'Signs in or signs up a user using credentials from an Identity Provider (IdP). This is done by manually providing an IdP credential, or by providing the authorization response obtained via the authorization request from CreateAuthUri. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. A new Identity Platform user account will be created if the user has not previously signed in to the IdP with the same account. In addition, when the \"One account per email address\" setting is enabled, there should not be an existing Identity Platform user account with the same email address for a new user account to be created. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.',\n        operationId: \"identitytoolkit.accounts.signInWithIdp\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithIdpResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithIdpRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:signInWithPassword\": {\n      post: {\n        description: \"Signs in a user with email and password. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.signInWithPassword\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:signInWithPhoneNumber\": {\n      post: {\n        description: \"Completes a phone number authentication attempt. If a user already exists with the given phone number, an ID token is minted for that user. Otherwise, a new user is created and associated with the phone number. This method may also be used to link a phone number to an existing user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.signInWithPhoneNumber\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:signUp\": {\n      post: {\n        description: \"Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.signUp\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SignUpRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:update\": {\n      post: {\n        description: \"Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.\",\n        operationId: \"identitytoolkit.accounts.update\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/accounts:verifyIosClient\": {\n      post: {\n        description: \"Verifies an iOS client is a real iOS device. If the request is valid, a reciept will be sent in the response and a secret will be sent via Apple Push Notification Service. The client should send both of them back to certain Identity Platform APIs in a later call (for example, /accounts:sendVerificationCode), in order to verify the client. The bundle ID is required in the request header as `x-ios-bundle-identifier`. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.accounts.verifyIosClient\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1VerifyIosClientResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1VerifyIosClientRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts\": {\n      post: {\n        description: \"Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.projects.accounts\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SignUpRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}:createSessionCookie\": {\n      post: {\n        description: \"Creates a session cookie for the given Identity Platform ID token. The session cookie is used by the client to preserve the user's login state.\",\n        operationId: \"identitytoolkit.projects.createSessionCookie\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the project that the account belongs to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}:queryAccounts\": {\n      post: {\n        description: \"Looks up user accounts within a project or a tenant based on conditions in the request.\",\n        operationId: \"identitytoolkit.projects.queryAccounts\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the project to which the result is scoped.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:batchCreate\": {\n      post: {\n        description: \"Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n        operationId: \"identitytoolkit.projects.accounts.batchCreate\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UploadAccountResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The Project ID of the Identity Platform project which the account belongs to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1UploadAccountRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:batchDelete\": {\n      post: {\n        description: \"Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in the response. The method ignores accounts that do not exist or are duplicated in the request. This method requires a Google OAuth 2.0 credential with proper permissions. (https://cloud.google.com/identity-platform/docs/access-control)\",\n        operationId: \"identitytoolkit.projects.accounts.batchDelete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:batchGet\": {\n      get: {\n        description: \"Download account information for all accounts on the project in a paginated manner. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get password hash, password salt, and password version from accounts; otherwise these fields are redacted.\",\n        operationId: \"identitytoolkit.projects.accounts.batchGet\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DownloadAccountResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"delegatedProjectNumber\",\n          in: \"query\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"maxResults\",\n          in: \"query\",\n          description: \"The maximum number of results to return. Must be at least 1 and no greater than 1000. By default, it is 20.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"nextPageToken\",\n          in: \"query\",\n          description: \"The pagination token from the response of a previous request.\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"query\",\n          description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:delete\": {\n      post: {\n        description: \"Deletes a user's account.\",\n        operationId: \"identitytoolkit.projects.accounts.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:lookup\": {\n      post: {\n        description: \"Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.\",\n        operationId: \"identitytoolkit.projects.accounts.lookup\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:query\": {\n      post: {\n        description: \"Looks up user accounts within a project or a tenant based on conditions in the request.\",\n        operationId: \"identitytoolkit.projects.accounts.query\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the project to which the result is scoped.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:sendOobCode\": {\n      post: {\n        description: \"Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.\",\n        operationId: \"identitytoolkit.projects.accounts.sendOobCode\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/accounts:update\": {\n      post: {\n        description: \"Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.\",\n        operationId: \"identitytoolkit.projects.accounts.update\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts\": {\n      post: {\n        description: \"Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n        operationId: \"identitytoolkit.projects.tenants.accounts\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The ID of the Identity Platform tenant to create a user under. If not set, the user will be created under the default Identity Platform project.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SignUpRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}:createSessionCookie\": {\n      post: {\n        description: \"Creates a session cookie for the given Identity Platform ID token. The session cookie is used by the client to preserve the user's login state.\",\n        operationId: \"identitytoolkit.projects.tenants.createSessionCookie\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the project that the account belongs to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:batchCreate\": {\n      post: {\n        description: \"Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.batchCreate\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UploadAccountResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The Project ID of the Identity Platform project which the account belongs to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The ID of the Identity Platform tenant the account belongs to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1UploadAccountRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:batchDelete\": {\n      post: {\n        description: \"Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in the response. The method ignores accounts that do not exist or are duplicated in the request. This method requires a Google OAuth 2.0 credential with proper permissions. (https://cloud.google.com/identity-platform/docs/access-control)\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.batchDelete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong to an default Identity Platform project, the field is not needed.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:batchGet\": {\n      get: {\n        description: \"Download account information for all accounts on the project in a paginated manner. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get password hash, password salt, and password version from accounts; otherwise these fields are redacted.\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.batchGet\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DownloadAccountResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"delegatedProjectNumber\",\n          in: \"query\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"maxResults\",\n          in: \"query\",\n          description: \"The maximum number of results to return. Must be at least 1 and no greater than 1000. By default, it is 20.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"nextPageToken\",\n          in: \"query\",\n          description: \"The pagination token from the response of a previous request.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:delete\": {\n      post: {\n        description: \"Deletes a user's account.\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The ID of the tenant that the account belongs to, if applicable. Only require to be specified for authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an account that belongs to an Identity Platform tenant.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:lookup\": {\n      post: {\n        description: \"Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.lookup\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The ID of the tenant that the account belongs to. Should only be specified by authenticated requests from a developer.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:query\": {\n      post: {\n        description: \"Looks up user accounts within a project or a tenant based on conditions in the request.\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.query\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The ID of the project to which the result is scoped.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The ID of the tenant to which the result is scoped.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:sendOobCode\": {\n      post: {\n        description: \"Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.sendOobCode\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:update\": {\n      post: {\n        description: \"Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.\",\n        operationId: \"identitytoolkit.projects.tenants.accounts.update\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          description: \"The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          description: \"The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users should pass an Identity Platform ID token rather than setting this field.\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/projects\": {\n      get: {\n        description: \"Gets a project's public Identity Toolkit configuration. (Legacy) This method also supports authenticated calls from a developer to retrieve non-public configuration.\",\n        operationId: \"identitytoolkit.getProjects\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetProjectConfigResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"androidPackageName\",\n          in: \"query\",\n          description: \"Android package name to check against the real android package name. If this field is provided, and sha1_cert_hash is not provided, the action will throw an error if this does not match the real android package name.\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"clientId\",\n          in: \"query\",\n          description: \"The RP OAuth client ID. If set, a check will be performed to ensure that the OAuth client is valid for the retrieved project and the request rejected with a client error if not valid.\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"delegatedProjectNumber\",\n          in: \"query\",\n          description: \"Project Number of the delegated project request. This field should only be used as part of the Firebase V1 migration.\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"firebaseAppId\",\n          in: \"query\",\n          description: \"The Firebase app ID, for applications that use Firebase. This can be found in the Firebase console for your project. If set, a check will be performed to ensure that the app ID is valid for the retrieved project. If not valid, the request will be rejected with a client error.\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"iosBundleId\",\n          in: \"query\",\n          description: \"iOS bundle id to check against the real ios bundle id. If this field is provided, the action will throw an error if this does not match the real iOS bundle id.\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"projectNumber\",\n          in: \"query\",\n          description: \"Project number of the configuration to retrieve. This field is deprecated and should not be used by new integrations.\",\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"returnDynamicLink\",\n          in: \"query\",\n          description: \"Whether dynamic link should be returned.\",\n          schema: {\n            type: \"boolean\"\n          }\n        }, {\n          name: \"sha1Cert\",\n          in: \"query\",\n          description: \"SHA-1 Android application cert hash. If set, a check will be performed to ensure that the cert hash is valid for the retrieved project and android_package_name.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"v1\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/recaptchaParams\": {\n      get: {\n        description: \"Gets parameters needed for generating a reCAPTCHA challenge.\",\n        operationId: \"identitytoolkit.getRecaptchaParams\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse\"\n                }\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"v1\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/sessionCookiePublicKeys\": {\n      get: {\n        description: \"Retrieves the set of public keys of the session cookie JSON Web Token (JWT) signer that can be used to validate the session cookie created through createSessionCookie.\",\n        operationId: \"identitytoolkit.getSessionCookiePublicKeys\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse\"\n                }\n              }\n            }\n          }\n        },\n        tags: [\"v1\"],\n        security: [{\n          apiKey: []\n        }]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/accounts/mfaEnrollment:finalize\": {\n      post: {\n        description: \"Finishes enrolling a second factor for the user.\",\n        operationId: \"identitytoolkit.accounts.mfaEnrollment.finalize\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/accounts/mfaEnrollment:start\": {\n      post: {\n        description: \"Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the user.\",\n        operationId: \"identitytoolkit.accounts.mfaEnrollment.start\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/accounts/mfaEnrollment:withdraw\": {\n      post: {\n        description: \"Revokes one second factor from the enrolled second factors for an account.\",\n        operationId: \"identitytoolkit.accounts.mfaEnrollment.withdraw\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2WithdrawMfaResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2WithdrawMfaRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/accounts/mfaSignIn:finalize\": {\n      post: {\n        description: \"Verifies the MFA challenge and performs sign-in\",\n        operationId: \"identitytoolkit.accounts.mfaSignIn.finalize\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/accounts/mfaSignIn:start\": {\n      post: {\n        description: \"Sends the MFA challenge\",\n        operationId: \"identitytoolkit.accounts.mfaSignIn.start\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaSignInResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaSignInRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"accounts\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/defaultSupportedIdps\": {\n      get: {\n        description: \"List all default supported Idps.\",\n        operationId: \"identitytoolkit.defaultSupportedIdps.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of items to return.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The next_page_token value returned from a previous List request, if any.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"defaultSupportedIdps\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/config\": {\n      get: {\n        description: \"Retrieve an Identity Toolkit project configuration.\",\n        operationId: \"identitytoolkit.projects.getConfig\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Config\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update an Identity Toolkit project configuration.\",\n        operationId: \"identitytoolkit.projects.updateConfig\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Config\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"The update mask applies to the resource. Fields set in the config but not included in this update mask will be ignored. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Config\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/defaultSupportedIdpConfigs\": {\n      post: {\n        description: \"Create a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.create\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"idpId\",\n          in: \"query\",\n          description: \"The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"List all default supported Idp configurations for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of items to return.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The next_page_token value returned from a previous List request, if any.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}\": {\n      delete: {\n        description: \"Delete a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleProtobufEmpty\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"defaultSupportedIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"Retrieve a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"defaultSupportedIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.patch\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"defaultSupportedIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/inboundSamlConfigs\": {\n      post: {\n        description: \"Create an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.inboundSamlConfigs.create\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigId\",\n          in: \"query\",\n          description: \"The id to use for this config.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"List all inbound SAML configurations for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.inboundSamlConfigs.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of items to return.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The next_page_token value returned from a previous List request, if any.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/inboundSamlConfigs/{inboundSamlConfigsId}\": {\n      delete: {\n        description: \"Delete an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.inboundSamlConfigs.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleProtobufEmpty\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"Retrieve an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.inboundSamlConfigs.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.inboundSamlConfigs.patch\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/oauthIdpConfigs\": {\n      post: {\n        description: \"Create an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.oauthIdpConfigs.create\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigId\",\n          in: \"query\",\n          description: \"The id to use for this config.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"List all Oidc Idp configurations for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.oauthIdpConfigs.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of items to return.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The next_page_token value returned from a previous List request, if any.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/oauthIdpConfigs/{oauthIdpConfigsId}\": {\n      delete: {\n        description: \"Delete an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.oauthIdpConfigs.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleProtobufEmpty\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"Retrieve an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.oauthIdpConfigs.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.oauthIdpConfigs.patch\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants\": {\n      post: {\n        description: \"Create a tenant. Requires write permission on the Agent project.\",\n        operationId: \"identitytoolkit.projects.tenants.create\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2Tenant\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"List tenants under the given agent project. Requires read permission on the Agent project.\",\n        operationId: \"identitytoolkit.projects.tenants.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of results to return, capped at 1000. If not specified, the default value is 20.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The pagination token from the response of a previous request.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}\": {\n      delete: {\n        description: \"Delete a tenant. Requires write permission on the Agent project.\",\n        operationId: \"identitytoolkit.projects.tenants.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleProtobufEmpty\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"Get a tenant. Requires read permission on the Tenant resource.\",\n        operationId: \"identitytoolkit.projects.tenants.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update a tenant. Requires write permission on the Tenant resource.\",\n        operationId: \"identitytoolkit.projects.tenants.patch\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"If provided, only update fields set in the update mask. Otherwise, all settable fields will be updated. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2Tenant\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}:getIamPolicy\": {\n      post: {\n        description: \"Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.\",\n        operationId: \"identitytoolkit.projects.tenants.getIamPolicy\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleIamV1Policy\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleIamV1GetIamPolicyRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}:setIamPolicy\": {\n      post: {\n        description: \"Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.\",\n        operationId: \"identitytoolkit.projects.tenants.setIamPolicy\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleIamV1Policy\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleIamV1SetIamPolicyRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}:testIamPermissions\": {\n      post: {\n        description: \"Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request.\",\n        operationId: \"identitytoolkit.projects.tenants.testIamPermissions\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleIamV1TestIamPermissionsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GoogleIamV1TestIamPermissionsRequest\"\n              }\n            }\n          }\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}/defaultSupportedIdpConfigs\": {\n      post: {\n        description: \"Create a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.create\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"idpId\",\n          in: \"query\",\n          description: \"The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"List all default supported Idp configurations for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of items to return.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The next_page_token value returned from a previous List request, if any.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}\": {\n      delete: {\n        description: \"Delete a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleProtobufEmpty\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"defaultSupportedIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"Retrieve a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"defaultSupportedIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update a default supported Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.patch\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"defaultSupportedIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}/inboundSamlConfigs\": {\n      post: {\n        description: \"Create an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.create\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigId\",\n          in: \"query\",\n          description: \"The id to use for this config.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"List all inbound SAML configurations for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of items to return.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The next_page_token value returned from a previous List request, if any.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}/inboundSamlConfigs/{inboundSamlConfigsId}\": {\n      delete: {\n        description: \"Delete an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleProtobufEmpty\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"Retrieve an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update an inbound SAML configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.patch\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"inboundSamlConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}/oauthIdpConfigs\": {\n      post: {\n        description: \"Create an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.create\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigId\",\n          in: \"query\",\n          description: \"The id to use for this config.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"List all Oidc Idp configurations for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"pageSize\",\n          in: \"query\",\n          description: \"The maximum number of items to return.\",\n          schema: {\n            type: \"integer\"\n          }\n        }, {\n          name: \"pageToken\",\n          in: \"query\",\n          description: \"The next_page_token value returned from a previous List request, if any.\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v2/projects/{targetProjectId}/tenants/{tenantId}/oauthIdpConfigs/{oauthIdpConfigsId}\": {\n      delete: {\n        description: \"Delete an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleProtobufEmpty\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      get: {\n        description: \"Retrieve an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }],\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      patch: {\n        description: \"Update an Oidc Idp configuration for an Identity Toolkit project.\",\n        operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.patch\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n                }\n              }\n            }\n          }\n        },\n        parameters: [{\n          name: \"targetProjectId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"tenantId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"oauthIdpConfigsId\",\n          in: \"path\",\n          required: true,\n          schema: {\n            type: \"string\"\n          }\n        }, {\n          name: \"updateMask\",\n          in: \"query\",\n          description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n          schema: {\n            type: \"string\"\n          }\n        }],\n        requestBody: {\n          $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n        },\n        security: [{\n          Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"]\n        }, {\n          Oauth2: [\"https://www.googleapis.com/auth/firebase\"]\n        }, {\n          apiKey: []\n        }],\n        tags: [\"projects\"]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }]\n    },\n    \"/v1/token\": {\n      post: {\n        description: \"The Token Service API lets you exchange either an ID token or a refresh token for an access token and a new refresh token. You can use the access token to securely call APIs that require user authorization.\",\n        operationId: \"securetoken.token\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"*/*\": {\n                schema: {\n                  $ref: \"#/components/schemas/GrantTokenResponse\"\n                }\n              }\n            }\n          }\n        },\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/GrantTokenRequest\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              schema: {\n                $ref: \"#/components/schemas/GrantTokenRequest\"\n              }\n            }\n          }\n        },\n        tags: [\"secureToken\"],\n        security: [{\n          apiKey: []\n        }]\n      },\n      parameters: [{\n        $ref: \"#/components/parameters/access_token\"\n      }, {\n        $ref: \"#/components/parameters/alt\"\n      }, {\n        $ref: \"#/components/parameters/callback\"\n      }, {\n        $ref: \"#/components/parameters/fields\"\n      }, {\n        $ref: \"#/components/parameters/oauth_token\"\n      }, {\n        $ref: \"#/components/parameters/prettyPrint\"\n      }, {\n        $ref: \"#/components/parameters/quotaUser\"\n      }, {\n        $ref: \"#/components/parameters/uploadType\"\n      }, {\n        $ref: \"#/components/parameters/upload_protocol\"\n      }],\n      servers: [{\n        url: \"https://securetoken.googleapis.com\"\n      }]\n    },\n    \"/emulator/v1/projects/{targetProjectId}/accounts\": {\n      parameters: [{\n        name: \"targetProjectId\",\n        in: \"path\",\n        description: \"The ID of the Google Cloud project that the accounts belong to.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }],\n      servers: [{\n        url: \"\"\n      }],\n      delete: {\n        description: \"Remove all accounts in the project, regardless of state.\",\n        operationId: \"emulator.projects.accounts.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      }\n    },\n    \"/emulator/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts\": {\n      parameters: [{\n        name: \"targetProjectId\",\n        in: \"path\",\n        description: \"The ID of the Google Cloud project that the accounts belong to.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }, {\n        name: \"tenantId\",\n        in: \"path\",\n        description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }],\n      servers: [{\n        url: \"\"\n      }],\n      delete: {\n        description: \"Remove all accounts in the project, regardless of state.\",\n        operationId: \"emulator.projects.accounts.delete\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      }\n    },\n    \"/emulator/v1/projects/{targetProjectId}/config\": {\n      parameters: [{\n        name: \"targetProjectId\",\n        in: \"path\",\n        description: \"The ID of the Google Cloud project that the config belongs to.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }],\n      servers: [{\n        url: \"\"\n      }],\n      get: {\n        description: \"Get emulator-specific configuration for the project.\",\n        operationId: \"emulator.projects.config.get\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  $ref: \"#/components/schemas/EmulatorV1ProjectsConfig\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      },\n      patch: {\n        description: \"Update emulator-specific configuration for the project.\",\n        operationId: \"emulator.projects.config.update\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                $ref: \"#/components/schemas/EmulatorV1ProjectsConfig\"\n              }\n            }\n          }\n        },\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  $ref: \"#/components/schemas/EmulatorV1ProjectsConfig\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      }\n    },\n    \"/emulator/v1/projects/{targetProjectId}/oobCodes\": {\n      parameters: [{\n        name: \"targetProjectId\",\n        in: \"path\",\n        description: \"The ID of the Google Cloud project that the confirmation codes belongs to.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }],\n      servers: [{\n        url: \"\"\n      }],\n      get: {\n        description: \"List all pending confirmation codes for the project.\",\n        operationId: \"emulator.projects.oobCodes.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      }\n    },\n    \"/emulator/v1/projects/{targetProjectId}/tenants/{tenantId}/oobCodes\": {\n      parameters: [{\n        name: \"targetProjectId\",\n        in: \"path\",\n        description: \"The ID of the Google Cloud project that the confirmation codes belongs to.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }, {\n        name: \"tenantId\",\n        in: \"path\",\n        description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }],\n      servers: [{\n        url: \"\"\n      }],\n      get: {\n        description: \"List all pending confirmation codes for the project.\",\n        operationId: \"emulator.projects.oobCodes.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      }\n    },\n    \"/emulator/v1/projects/{targetProjectId}/verificationCodes\": {\n      parameters: [{\n        name: \"targetProjectId\",\n        in: \"path\",\n        description: \"The ID of the Google Cloud project that the verification codes belongs to.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }],\n      servers: [{\n        url: \"\"\n      }],\n      get: {\n        description: \"List all pending phone verification codes for the project.\",\n        operationId: \"emulator.projects.verificationCodes.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      }\n    },\n    \"/emulator/v1/projects/{targetProjectId}/tenants/{tenantId}/verificationCodes\": {\n      parameters: [{\n        name: \"targetProjectId\",\n        in: \"path\",\n        description: \"The ID of the Google Cloud project that the verification codes belongs to.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }, {\n        name: \"tenantId\",\n        in: \"path\",\n        description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n        required: true,\n        schema: {\n          type: \"string\"\n        }\n      }],\n      servers: [{\n        url: \"\"\n      }],\n      get: {\n        description: \"List all pending phone verification codes for the project.\",\n        operationId: \"emulator.projects.verificationCodes.list\",\n        responses: {\n          200: {\n            description: \"Successful response\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\"\n                }\n              }\n            }\n          }\n        },\n        security: [],\n        tags: [\"emulator\"]\n      }\n    }\n  },\n  components: {\n    schemas: {\n      GoogleCloudIdentitytoolkitV1Argon2Parameters: {\n        description: \"The parameters for Argon2 hashing algorithm.\",\n        properties: {\n          associatedData: {\n            description: \"The additional associated data, if provided, is appended to the hash value to provide an additional layer of security. A base64-encoded string if specified via JSON.\",\n            format: \"byte\",\n            type: \"string\"\n          },\n          hashLengthBytes: {\n            description: \"Required. The desired hash length in bytes. Minimum is 4 and maximum is 1024.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          hashType: {\n            description: \"Required. Must not be HASH_TYPE_UNSPECIFIED.\",\n            enum: [\"HASH_TYPE_UNSPECIFIED\", \"ARGON2_D\", \"ARGON2_ID\", \"ARGON2_I\"],\n            type: \"string\"\n          },\n          iterations: {\n            description: \"Required. The number of iterations to perform. Minimum is 1, maximum is 16.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          memoryCostKib: {\n            description: \"Required. The memory cost in kibibytes. Maximum is 32768.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          parallelism: {\n            description: \"Required. The degree of parallelism, also called threads or lanes. Minimum is 1, maximum is 16.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          version: {\n            description: \"The version of the Argon2 algorithm. This defaults to VERSION_13 if not specified.\",\n            enum: [\"VERSION_UNSPECIFIED\", \"VERSION_10\", \"VERSION_13\"],\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1AutoRetrievalInfo: {\n        description: \"The information required to auto-retrieve an SMS.\",\n        properties: {\n          appSignatureHash: {\n            description: \"The Android app's signature hash for Google Play Service's SMS Retriever API.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest: {\n        description: \"Request message for BatchDeleteAccounts.\",\n        properties: {\n          force: {\n            description: \"Whether to force deleting accounts that are not in disabled state. If false, only disabled accounts will be deleted, and accounts that are not disabled will be added to the `errors`.\",\n            type: \"boolean\"\n          },\n          localIds: {\n            description: \"Required. List of user IDs to be deleted.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          tenantId: {\n            description: \"If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong to an default Identity Platform project, the field is not needed.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse: {\n        description: \"Response message to BatchDeleteAccounts.\",\n        properties: {\n          errors: {\n            description: \"Detailed error info for accounts that cannot be deleted.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo: {\n        description: \"Error info for account failed to be deleted.\",\n        properties: {\n          index: {\n            description: \"The index of the errored item in the original local_ids field.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          localId: {\n            description: \"The corresponding user ID.\",\n            type: \"string\"\n          },\n          message: {\n            description: \"Detailed error message.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1CreateAuthUriRequest: {\n        description: \"Request message for CreateAuthUri.\",\n        properties: {\n          appId: {\n            type: \"string\"\n          },\n          authFlowType: {\n            description: \"Used for the Google provider. The type of the authentication flow to be used. If present, this should be `CODE_FLOW` to specify the authorization code flow. Otherwise, the default ID Token flow will be used.\",\n            type: \"string\"\n          },\n          context: {\n            description: \"An opaque string used to maintain contextual information between the authentication request and the callback from the IdP.\",\n            type: \"string\"\n          },\n          continueUri: {\n            description: \"A valid URL for the IdP to redirect the user back to. The URL cannot contain fragments or the reserved `state` query parameter.\",\n            type: \"string\"\n          },\n          customParameter: {\n            additionalProperties: {\n              type: \"string\"\n            },\n            description: \"Additional customized query parameters to be added to the authorization URI. The following parameters are reserved and cannot be added: `client_id`, `response_type`, `scope`, `redirect_uri`, `state`. For the Microsoft provider, the Azure AD tenant to sign-in to can be specified in the `tenant` custom parameter.\",\n            type: \"object\"\n          },\n          hostedDomain: {\n            description: \"Used for the Google provider. The G Suite hosted domain of the user in order to restrict sign-in to users at that domain.\",\n            type: \"string\"\n          },\n          identifier: {\n            description: \"The email identifier of the user account to fetch associated providers for. At least one of the fields `identifier` and `provider_id` must be set. The length of the email address should be less than 256 characters and in the format of `name@domain.tld`. The email address should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n            type: \"string\"\n          },\n          oauthConsumerKey: {\n            type: \"string\"\n          },\n          oauthScope: {\n            description: \"Additional space-delimited OAuth 2.0 scopes specifying the scope of the authentication request with the IdP. Used for OAuth 2.0 IdPs. For the Google provider, the authorization code flow will be used if this field is set.\",\n            type: \"string\"\n          },\n          openidRealm: {\n            type: \"string\"\n          },\n          otaApp: {\n            type: \"string\"\n          },\n          providerId: {\n            description: \"The provider ID of the IdP for the user to sign in with. This should be a provider ID enabled for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com/identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`. At least one of the fields `identifier` and `provider_id` must be set.\",\n            type: \"string\"\n          },\n          sessionId: {\n            description: \"A session ID that can be verified against in SignInWithIdp to prevent session fixation attacks. If absent, a random string will be generated and returned as the session ID.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant to create an authorization URI or lookup an email identifier for. If not set, the operation will be performed in the default Identity Platform instance in the project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1CreateAuthUriResponse: {\n        description: \"Response message for CreateAuthUri.\",\n        properties: {\n          allProviders: {\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          authUri: {\n            description: \"The authorization URI for the requested provider. Present only when a provider ID is set in the request.\",\n            type: \"string\"\n          },\n          captchaRequired: {\n            description: \"Whether a CAPTCHA is needed because there have been too many failed login attempts by the user. Present only when a registered email identifier is set in the request.\",\n            type: \"boolean\"\n          },\n          forExistingProvider: {\n            description: \"Whether the user has previously signed in with the provider ID in the request. Present only when a registered email identifier is set in the request.\",\n            type: \"boolean\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          providerId: {\n            description: \"The provider ID from the request, if provided.\",\n            type: \"string\"\n          },\n          registered: {\n            description: \"Whether the email identifier represents an existing account. Present only when an email identifier is set in the request.\",\n            type: \"boolean\"\n          },\n          sessionId: {\n            description: \"The session ID from the request, or a random string generated by CreateAuthUri if absent. It is used to prevent session fixation attacks.\",\n            type: \"string\"\n          },\n          signinMethods: {\n            description: \"The list of sign-in methods that the user has previously used. Each element is one of `password`, `emailLink`, or the provider ID of an IdP. Present only when a registered email identifier is set in the request.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest: {\n        description: \"Request message for CreateSessionCookie.\",\n        properties: {\n          idToken: {\n            description: \"Required. A valid Identity Platform ID token.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n            type: \"string\"\n          },\n          validDuration: {\n            description: \"The number of seconds until the session cookie expires. Specify a duration in seconds, between five minutes and fourteen days, inclusively.\",\n            format: \"int64\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse: {\n        description: \"Response message for CreateSessionCookie.\",\n        properties: {\n          sessionCookie: {\n            description: \"The session cookie that has been created from the Identity Platform ID token specified in the request. It is in the form of a JSON Web Token (JWT). Always present.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1DeleteAccountRequest: {\n        description: \"Request message for DeleteAccount.\",\n        properties: {\n          delegatedProjectNumber: {\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"The Identity Platform ID token of the account to delete. Require to be specified for requests from end users that lack Google OAuth 2.0 credential. Authenticated requests bearing a Google OAuth2 credential with proper permissions may pass local_id to specify the account to delete alternatively.\",\n            type: \"string\"\n          },\n          localId: {\n            description: \"The ID of user account to delete. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). Requests from users lacking the credential should pass an ID token instead.\",\n            type: \"string\"\n          },\n          targetProjectId: {\n            description: \"The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the tenant that the account belongs to, if applicable. Only require to be specified for authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an account that belongs to an Identity Platform tenant.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1DeleteAccountResponse: {\n        description: \"Response message for DeleteAccount.\",\n        properties: {\n          kind: {\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1DownloadAccountResponse: {\n        description: \"Response message for DownloadAccount.\",\n        properties: {\n          kind: {\n            type: \"string\"\n          },\n          nextPageToken: {\n            description: \"If there are more accounts to be downloaded, a token that can be passed back to DownloadAccount to get more accounts. Otherwise, this is blank.\",\n            type: \"string\"\n          },\n          users: {\n            description: \"All accounts belonging to the project/tenant limited by max_results in the request.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1EmailTemplate: {\n        description: \"Email template\",\n        properties: {\n          body: {\n            description: \"Email body\",\n            type: \"string\"\n          },\n          customized: {\n            description: \"Whether the body or subject of the email is customized.\",\n            type: \"boolean\"\n          },\n          disabled: {\n            description: \"Whether the template is disabled. If true, a default template will be used.\",\n            type: \"boolean\"\n          },\n          format: {\n            description: \"Email body format\",\n            enum: [\"EMAIL_BODY_FORMAT_UNSPECIFIED\", \"PLAINTEXT\", \"HTML\"],\n            type: \"string\"\n          },\n          from: {\n            description: \"From address of the email\",\n            type: \"string\"\n          },\n          fromDisplayName: {\n            description: \"From display name\",\n            type: \"string\"\n          },\n          fromLocalPart: {\n            description: \"Local part of From address\",\n            type: \"string\"\n          },\n          locale: {\n            description: \"Value is in III language code format (e.g. \\\"zh-CN\\\", \\\"es\\\"). Both '-' and '_' separators are accepted.\",\n            type: \"string\"\n          },\n          replyTo: {\n            description: \"Reply-to address\",\n            type: \"string\"\n          },\n          subject: {\n            description: \"Subject of the email\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1ErrorInfo: {\n        description: \"Error information explaining why an account cannot be uploaded. batch upload.\",\n        properties: {\n          index: {\n            description: \"The index of the item, range is [0, request.size - 1]\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          message: {\n            description: \"Detailed error message\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1FederatedUserIdentifier: {\n        description: \"Federated user identifier at an Identity Provider.\",\n        properties: {\n          providerId: {\n            description: \"The ID of supported identity providers. This should be a provider ID enabled for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com/identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`.\",\n            type: \"string\"\n          },\n          rawId: {\n            description: \"The user ID of the account at the third-party Identity Provider specified by `provider_id`.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1GetAccountInfoRequest: {\n        description: \"Request message for GetAccountInfo.\",\n        properties: {\n          delegatedProjectNumber: {\n            format: \"int64\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The email address of one or more accounts to fetch. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. Should only be specified by authenticated requests from a developer.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          federatedUserId: {\n            description: \"The federated user identifier of one or more accounts to fetch. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1FederatedUserIdentifier\"\n            },\n            type: \"array\"\n          },\n          idToken: {\n            description: \"The Identity Platform ID token of the account to fetch. Require to be specified for requests from end users.\",\n            type: \"string\"\n          },\n          initialEmail: {\n            description: \"The initial email of one or more accounts to fetch. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. Should only be specified by authenticated requests from a developer.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          localId: {\n            description: \"The ID of one or more accounts to fetch. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          phoneNumber: {\n            description: \"The phone number of one or more accounts to fetch. Should only be specified by authenticated requests from a developer and should be in E.164 format, for example, +15555555555.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          targetProjectId: {\n            description: \"The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the tenant that the account belongs to. Should only be specified by authenticated requests from a developer.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1GetAccountInfoResponse: {\n        description: \"Response message for GetAccountInfo.\",\n        properties: {\n          kind: {\n            type: \"string\"\n          },\n          users: {\n            description: \"The information of specific user account(s) matching the parameters in the request.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1GetOobCodeRequest: {\n        description: \"Request message for GetOobCode.\",\n        properties: {\n          androidInstallApp: {\n            description: \"If an associated android app can handle the OOB code, whether or not to install the android app on the device where the link is opened if the app is not already installed.\",\n            type: \"boolean\"\n          },\n          androidMinimumVersion: {\n            description: \"If an associated android app can handle the OOB code, the minimum version of the app. If the version on the device is lower than this version then the user is taken to Google Play Store to upgrade the app.\",\n            type: \"string\"\n          },\n          androidPackageName: {\n            description: \"If an associated android app can handle the OOB code, the Android package name of the android app that will handle the callback when this OOB code is used. This will allow the correct app to open if it is already installed, or allow Google Play Store to open to the correct app if it is not yet installed.\",\n            type: \"string\"\n          },\n          canHandleCodeInApp: {\n            description: \"When set to true, the OOB code link will be be sent as a Universal Link or an Android App Link and will be opened by the corresponding app if installed. If not set, or set to false, the OOB code will be sent to the web widget first and then on continue will redirect to the app if installed.\",\n            type: \"boolean\"\n          },\n          captchaResp: {\n            description: \"For a PASSWORD_RESET request, a reCaptcha response is required when the system detects possible abuse activity. In those cases, this is the response from the reCaptcha challenge used to verify the caller.\",\n            type: \"string\"\n          },\n          challenge: {\n            type: \"string\"\n          },\n          continueUrl: {\n            description: \"The Url to continue after user clicks the link sent in email. This is the url that will allow the web widget to handle the OOB code.\",\n            type: \"string\"\n          },\n          dynamicLinkDomain: {\n            description: \"In order to ensure that the url used can be easily opened up in iOS or android, we create a [Firebase Dynamic Link](https://firebase.google.com/docs/dynamic-links). Most Identity Platform projects will only have one Dynamic Link domain enabled, and can leave this field blank. This field contains a specified Dynamic Link domain for projects that have multiple enabled.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The account's email address to send the OOB code to, and generally the email address of the account that needs to be updated. Required for PASSWORD_RESET, EMAIL_SIGNIN, and VERIFY_EMAIL.\",\n            type: \"string\"\n          },\n          iOSAppStoreId: {\n            description: \"If an associated iOS app can handle the OOB code, the App Store id of this app. This will allow App Store to open to the correct app if the app is not yet installed.\",\n            type: \"string\"\n          },\n          iOSBundleId: {\n            description: \"If an associated iOS app can handle the OOB code, the iOS bundle id of this app. This will allow the correct app to open if it is already installed.\",\n            type: \"string\"\n          },\n          idToken: {\n            type: \"string\"\n          },\n          newEmail: {\n            type: \"string\"\n          },\n          requestType: {\n            description: \"Required. The type of out-of-band (OOB) code to send. Depending on this value, other fields in this request will be required and/or have different meanings. There are 3 different OOB codes that can be sent: * PASSWORD_RESET * EMAIL_SIGNIN * VERIFY_EMAIL\",\n            enum: [\"OOB_REQ_TYPE_UNSPECIFIED\", \"PASSWORD_RESET\", \"OLD_EMAIL_AGREE\", \"NEW_EMAIL_ACCEPT\", \"VERIFY_EMAIL\", \"RECOVER_EMAIL\", \"EMAIL_SIGNIN\", \"VERIFY_AND_CHANGE_EMAIL\", \"REVERT_SECOND_FACTOR_ADDITION\"],\n            type: \"string\"\n          },\n          returnOobLink: {\n            description: \"Whether the confirmation link containing the OOB code should be returned in the response (no email is sent). Used when a developer wants to construct the email template and send it on their own. By default this is false; to specify this field, and to set it to true, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)\",\n            type: \"boolean\"\n          },\n          targetProjectId: {\n            description: \"The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n            type: \"string\"\n          },\n          userIp: {\n            description: \"The IP address of the caller. Required only for PASSWORD_RESET requests.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1GetOobCodeResponse: {\n        description: \"Response message for GetOobCode.\",\n        properties: {\n          email: {\n            description: \"If return_oob_link is false in the request, the email address the verification was sent to.\",\n            type: \"string\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          oobCode: {\n            description: \"If return_oob_link is true in the request, the OOB code to send.\",\n            type: \"string\"\n          },\n          oobLink: {\n            description: \"If return_oob_link is true in the request, the OOB link to be sent to the user. This returns the constructed link including [Firebase Dynamic Link](https://firebase.google.com/docs/dynamic-links) related parameters.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1GetProjectConfigResponse: {\n        description: \"Response message for GetProjectConfig.\",\n        properties: {\n          allowPasswordUser: {\n            description: \"Whether to allow password account sign up. This field is only returned for authenticated calls from a developer.\",\n            type: \"boolean\"\n          },\n          apiKey: {\n            description: \"Google Cloud API key. This field is only returned for authenticated calls from a developer.\",\n            type: \"string\"\n          },\n          authorizedDomains: {\n            description: \"Authorized domains for widget redirect.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          changeEmailTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\"\n          },\n          dynamicLinksDomain: {\n            description: \"The Firebase Dynamic Links domain used to construct links for redirects to native apps.\",\n            type: \"string\"\n          },\n          enableAnonymousUser: {\n            description: \"Whether anonymous user is enabled. This field is only returned for authenticated calls from a developer.\",\n            type: \"boolean\"\n          },\n          idpConfig: {\n            description: \"OAuth2 provider config. This field is only returned for authenticated calls from a developer.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1IdpConfig\"\n            },\n            type: \"array\"\n          },\n          legacyResetPasswordTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\"\n          },\n          projectId: {\n            description: \"The project id of the retrieved configuration.\",\n            type: \"string\"\n          },\n          resetPasswordTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\"\n          },\n          revertSecondFactorAdditionTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\"\n          },\n          useEmailSending: {\n            description: \"Whether to use email sending. This field is only returned for authenticated calls from a developer.\",\n            type: \"boolean\"\n          },\n          verifyEmailTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse: {\n        description: \"Response message for GetRecaptchaParam.\",\n        properties: {\n          kind: {\n            type: \"string\"\n          },\n          recaptchaSiteKey: {\n            description: \"The reCAPTCHA v2 site key used to invoke the reCAPTCHA service. Always present.\",\n            type: \"string\"\n          },\n          recaptchaStoken: {\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse: {\n        description: \"Response message for GetSessionCookiePublicKeys.\",\n        properties: {\n          keys: {\n            description: \"Public keys of the session cookie signer, formatted as [JSON Web Keys (JWK)](https://tools.ietf.org/html/rfc7517).\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1OpenIdConnectKey\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1IdpConfig: {\n        description: \"Config of an identity provider.\",\n        properties: {\n          clientId: {\n            description: \"OAuth2 client ID.\",\n            type: \"string\"\n          },\n          enabled: {\n            description: \"True if allows the user to sign in with the provider.\",\n            type: \"boolean\"\n          },\n          experimentPercent: {\n            description: \"Percent of users who will be prompted/redirected federated login for this IdP\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          provider: {\n            description: \"Name of the identity provider.\",\n            enum: [\"PROVIDER_UNSPECIFIED\", \"MSLIVE\", \"GOOGLE\", \"FACEBOOK\", \"PAYPAL\", \"TWITTER\", \"YAHOO\", \"AOL\", \"GITHUB\", \"GOOGLE_PLAY_GAMES\", \"LINKEDIN\", \"IOS_GAME_CENTER\"],\n            type: \"string\"\n          },\n          secret: {\n            description: \"OAuth2 client secret.\",\n            type: \"string\"\n          },\n          whitelistedAudiences: {\n            description: \"Whitelisted client IDs for audience check.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest: {\n        description: \"Request message for IssueSamlResponse.\",\n        properties: {\n          idToken: {\n            description: \"The Identity Platform ID token. It will be verified and then converted to a new SAMLResponse.\",\n            type: \"string\"\n          },\n          rpId: {\n            description: \"Relying Party identifier, which is the audience of issued SAMLResponse.\",\n            type: \"string\"\n          },\n          samlAppEntityId: {\n            description: \"SAML app entity id specified in Google Admin Console for each app. If developers want to redirect to a third-party app rather than a G Suite app, they'll probably they need this. When it's used, we'll return a RelayState. This includes a SAMLRequest, which can be used to trigger a SP-initiated SAML flow to redirect to the real app.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse: {\n        description: \"Response for IssueSamlResponse request.\",\n        properties: {\n          acsEndpoint: {\n            description: \"The ACS endpoint which consumes the returned SAMLResponse.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"Email of the user.\",\n            type: \"string\"\n          },\n          firstName: {\n            description: \"First name of the user.\",\n            type: \"string\"\n          },\n          isNewUser: {\n            description: \"Whether the logged in user was created by this request.\",\n            type: \"boolean\"\n          },\n          lastName: {\n            description: \"Last name of the user.\",\n            type: \"string\"\n          },\n          relayState: {\n            description: \"Generated RelayState.\",\n            type: \"string\"\n          },\n          samlResponse: {\n            description: \"Signed SAMLResponse created for the Relying Party.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1MfaEnrollment: {\n        description: \"Information on which multi-factor authentication (MFA) providers are enabled for an account.\",\n        properties: {\n          displayName: {\n            description: 'Display name for this mfa option e.g. \"corp cell phone\".',\n            type: \"string\"\n          },\n          enrolledAt: {\n            description: \"Timestamp when the account enrolled this second factor.\",\n            format: \"google-datetime\",\n            type: \"string\"\n          },\n          mfaEnrollmentId: {\n            description: \"ID of this MFA option.\",\n            type: \"string\"\n          },\n          phoneInfo: {\n            description: \"Normally this will show the phone number associated with this enrollment. In some situations, such as after a first factor sign in, it will only show the obfuscated version of the associated phone number.\",\n            type: \"string\"\n          },\n          unobfuscatedPhoneInfo: {\n            description: \"Output only. Unobfuscated phone_info.\",\n            readOnly: true,\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1MfaFactor: {\n        properties: {\n          displayName: {\n            description: 'Display name for this mfa option e.g. \"corp cell phone\".',\n            type: \"string\"\n          },\n          phoneInfo: {\n            description: \"Phone number to receive OTP for MFA.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1MfaInfo: {\n        description: \"Multi-factor authentication related information.\",\n        properties: {\n          enrollments: {\n            description: \"The second factors the user has enrolled.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1OpenIdConnectKey: {\n        description: \"Represents a public key of the session cookie signer, formatted as a [JSON Web Key (JWK)](https://tools.ietf.org/html/rfc7517).\",\n        properties: {\n          alg: {\n            description: \"Signature algorithm.\",\n            type: \"string\"\n          },\n          e: {\n            description: \"Exponent for the RSA public key, it is represented as the base64url encoding of the value's big endian representation.\",\n            type: \"string\"\n          },\n          kid: {\n            description: \"Unique string to identify this key.\",\n            type: \"string\"\n          },\n          kty: {\n            description: \"Key type.\",\n            type: \"string\"\n          },\n          n: {\n            description: \"Modulus for the RSA public key, it is represented as the base64url encoding of the value's big endian representation.\",\n            type: \"string\"\n          },\n          use: {\n            description: \"Key use.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1ProviderUserInfo: {\n        description: \"Information about the user as provided by various Identity Providers.\",\n        properties: {\n          displayName: {\n            description: \"The user's display name at the Identity Provider.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The user's email address at the Identity Provider.\",\n            type: \"string\"\n          },\n          federatedId: {\n            description: \"The user's identifier at the Identity Provider.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"The user's phone number at the Identity Provider.\",\n            type: \"string\"\n          },\n          photoUrl: {\n            description: \"The user's profile photo URL at the Identity Provider.\",\n            type: \"string\"\n          },\n          providerId: {\n            description: \"The ID of the Identity Provider.\",\n            type: \"string\"\n          },\n          rawId: {\n            description: \"The user's raw identifier directly returned from Identity Provider.\",\n            type: \"string\"\n          },\n          screenName: {\n            description: \"The user's screen_name at Twitter or login name at GitHub.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1QueryUserInfoRequest: {\n        description: \"Request message for QueryUserInfo.\",\n        properties: {\n          expression: {\n            description: \"Query conditions used to filter results. If more than one is passed, only the first SqlExpression is evaluated.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SqlExpression\"\n            },\n            type: \"array\"\n          },\n          limit: {\n            description: \"The maximum number of accounts to return with an upper limit of __500__. Defaults to _500_. Only valid when `return_user_info` is set to `true`.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          offset: {\n            description: \"The number of accounts to skip from the beginning of matching records. Only valid when `return_user_info` is set to `true`.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          order: {\n            description: \"The order for sorting query result. Defaults to __ascending__ order. Only valid when `return_user_info` is set to `true`.\",\n            enum: [\"ORDER_UNSPECIFIED\", \"ASC\", \"DESC\"],\n            type: \"string\"\n          },\n          returnUserInfo: {\n            description: \"If `true`, this request will return the accounts matching the query. If `false`, only the __count__ of accounts matching the query will be returned. Defaults to `true`.\",\n            type: \"boolean\"\n          },\n          sortBy: {\n            description: \"The field to use for sorting user accounts. Defaults to `USER_ID`. Note: when `phone_number` is specified in `expression`, the result ignores the sorting. Only valid when `return_user_info` is set to `true`.\",\n            enum: [\"SORT_BY_FIELD_UNSPECIFIED\", \"USER_ID\", \"NAME\", \"CREATED_AT\", \"LAST_LOGIN_AT\", \"USER_EMAIL\"],\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the tenant to which the result is scoped.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1QueryUserInfoResponse: {\n        description: \"Response message for QueryUserInfo.\",\n        properties: {\n          recordsCount: {\n            description: \"If `return_user_info` in the request is true, this is the number of returned accounts in this message. Otherwise, this is the total number of accounts matching the query.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          userInfo: {\n            description: \"If `return_user_info` in the request is true, this is the accounts matching the query.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1ResetPasswordRequest: {\n        description: \"Request message for ResetPassword.\",\n        properties: {\n          email: {\n            description: \"The email of the account to be modified. Specify this and the old password in order to change an account's password without using an out-of-band code.\",\n            type: \"string\"\n          },\n          newPassword: {\n            description: \"The new password to be set for this account. Specifying this field will result in a change to the account and consume the out-of-band code if one was specified and it was of type PASSWORD_RESET.\",\n            type: \"string\"\n          },\n          oldPassword: {\n            description: \"The current password of the account to be modified. Specify this and email to change an account's password without using an out-of-band code.\",\n            type: \"string\"\n          },\n          oobCode: {\n            description: \"An out-of-band (OOB) code generated by GetOobCode request. Specify only this parameter (or only this parameter and a tenant ID) to get the out-of-band code's type in the response without mutating the account's state. Only a PASSWORD_RESET out-of-band code can be consumed via this method.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1ResetPasswordResponse: {\n        description: \"Response message for ResetPassword.\",\n        properties: {\n          email: {\n            description: \"The email associated with the out-of-band code that was used.\",\n            type: \"string\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          mfaInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\"\n          },\n          newEmail: {\n            type: \"string\"\n          },\n          requestType: {\n            enum: [\"OOB_REQ_TYPE_UNSPECIFIED\", \"PASSWORD_RESET\", \"OLD_EMAIL_AGREE\", \"NEW_EMAIL_ACCEPT\", \"VERIFY_EMAIL\", \"RECOVER_EMAIL\", \"EMAIL_SIGNIN\", \"VERIFY_AND_CHANGE_EMAIL\", \"REVERT_SECOND_FACTOR_ADDITION\"],\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest: {\n        description: \"Request message for SendVerificationCode. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator.\",\n        properties: {\n          autoRetrievalInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1AutoRetrievalInfo\"\n          },\n          iosReceipt: {\n            description: \"Receipt of successful iOS app token validation. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. This should come from the response of verifyIosClient. If present, the caller should also provide the `ios_secret`, as well as a bundle ID in the `x-ios-bundle-identifier` header, which must match the bundle ID from the verifyIosClient request.\",\n            type: \"string\"\n          },\n          iosSecret: {\n            description: \"Secret delivered to iOS app as a push notification. Should be passed with an `ios_receipt` as well as the `x-ios-bundle-identifier` header.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"The phone number to send the verification code to in E.164 format.\",\n            type: \"string\"\n          },\n          recaptchaToken: {\n            description: \"Recaptcha token for app verification. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. The recaptcha should be generated by calling getRecaptchaParams and the recaptcha token will be generated on user completion of the recaptcha challenge.\",\n            type: \"string\"\n          },\n          safetyNetToken: {\n            description: \"Android only. Used to assert application identity in place of a recaptcha token. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"Tenant ID of the Identity Platform tenant the user is signing in to.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse: {\n        description: \"Response message for SendVerificationCode.\",\n        properties: {\n          sessionInfo: {\n            description: \"Encrypted session information. This can be used in signInWithPhoneNumber to authenticate the phone number.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SetAccountInfoRequest: {\n        description: \"Request message for SetAccountInfo.\",\n        properties: {\n          captchaChallenge: {\n            type: \"string\"\n          },\n          captchaResponse: {\n            description: \"The response from reCaptcha challenge. This is required when the system detects possible abuse activities.\",\n            type: \"string\"\n          },\n          createdAt: {\n            description: \"The timestamp in milliseconds when the account was created.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          customAttributes: {\n            description: \"JSON formatted custom attributes to be stored in the Identity Platform ID token. Specifying this field requires a Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"string\"\n          },\n          delegatedProjectNumber: {\n            format: \"int64\",\n            type: \"string\"\n          },\n          deleteAttribute: {\n            description: \"The account's attributes to be deleted.\",\n            items: {\n              enum: [\"USER_ATTRIBUTE_NAME_UNSPECIFIED\", \"EMAIL\", \"DISPLAY_NAME\", \"PROVIDER\", \"PHOTO_URL\", \"PASSWORD\", \"RAW_USER_INFO\"],\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          deleteProvider: {\n            description: \"The Identity Providers to unlink from the user's account.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          disableUser: {\n            description: \"If true, marks the account as disabled, meaning the user will no longer be able to sign-in.\",\n            type: \"boolean\"\n          },\n          displayName: {\n            description: \"The user's new display name to be updated in the account's attributes. The length of the display name must be less than or equal to 256 characters.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The user's new email to be updated in the account's attributes. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n            type: \"string\"\n          },\n          emailVerified: {\n            description: \"Whether the user's email has been verified. Specifying this field requires a Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"boolean\"\n          },\n          idToken: {\n            description: \"A valid Identity Platform ID token. Required when attempting to change user-related information.\",\n            type: \"string\"\n          },\n          instanceId: {\n            type: \"string\"\n          },\n          lastLoginAt: {\n            description: \"The timestamp in milliseconds when the account last logged in.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          linkProviderUserInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ProviderUserInfo\"\n          },\n          localId: {\n            description: \"The ID of the user. Specifying this field requires a Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). For requests from end-users, an ID token should be passed instead.\",\n            type: \"string\"\n          },\n          mfa: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaInfo\"\n          },\n          oobCode: {\n            description: \"The out-of-band code to be applied on the user's account. The following out-of-band code types are supported: * VERIFY_EMAIL * RECOVER_EMAIL * REVERT_SECOND_FACTOR_ADDITION * VERIFY_AND_CHANGE_EMAIL\",\n            type: \"string\"\n          },\n          password: {\n            description: \"The user's new password to be updated in the account's attributes. The password must be at least 6 characters long.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"The phone number to be updated in the account's attributes.\",\n            type: \"string\"\n          },\n          photoUrl: {\n            description: \"The user's new photo URL for the account's profile photo to be updated in the account's attributes. The length of the URL must be less than or equal to 2048 characters.\",\n            type: \"string\"\n          },\n          provider: {\n            description: \"The Identity Providers that the account should be associated with.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          returnSecureToken: {\n            description: \"Whether or not to return an ID and refresh token. Should always be true.\",\n            type: \"boolean\"\n          },\n          targetProjectId: {\n            description: \"The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users should pass an Identity Platform ID token rather than setting this field.\",\n            type: \"string\"\n          },\n          upgradeToFederatedLogin: {\n            description: \"Whether the account should be restricted to only using federated login.\",\n            type: \"boolean\"\n          },\n          validSince: {\n            description: \"Specifies the minimum timestamp in seconds for an Identity Platform ID token to be considered valid.\",\n            format: \"int64\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SetAccountInfoResponse: {\n        description: \"Response message for SetAccountInfo\",\n        properties: {\n          displayName: {\n            type: \"string\"\n          },\n          email: {\n            type: \"string\"\n          },\n          emailVerified: {\n            description: \"Whether the account's email has been verified.\",\n            type: \"boolean\"\n          },\n          expiresIn: {\n            description: \"The number of seconds until the Identity Platform ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"An Identity Platform ID token for the account. This is used for legacy user sign up.\",\n            type: \"string\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          localId: {\n            description: \"The ID of the authenticated user.\",\n            type: \"string\"\n          },\n          newEmail: {\n            description: \"The new email that has been set on the user's account attributes.\",\n            type: \"string\"\n          },\n          passwordHash: {\n            type: \"string\"\n          },\n          photoUrl: {\n            type: \"string\"\n          },\n          providerUserInfo: {\n            description: \"The linked Identity Providers on the account.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ProviderUserInfo\"\n            },\n            type: \"array\"\n          },\n          refreshToken: {\n            description: \"A refresh token for the account. This is used for legacy user sign up.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest: {\n        description: \"Request message for SignInWithCustomToken.\",\n        properties: {\n          delegatedProjectNumber: {\n            format: \"int64\",\n            type: \"string\"\n          },\n          instanceId: {\n            type: \"string\"\n          },\n          returnSecureToken: {\n            description: \"Should always be true.\",\n            type: \"boolean\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to. If present, the ID should match the tenant_id in the token.\",\n            type: \"string\"\n          },\n          token: {\n            description: 'Required. The custom Auth token asserted by the developer. The token should be a [JSON Web Token (JWT)](https://tools.ietf.org/html/rfc7519) that includes the claims listed in the [API reference](https://cloud.google.com/identity-platform/docs/reference/rest/client/) under the \"Custom Token Claims\" section.',\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse: {\n        description: \"Response message for SignInWithCustomToken.\",\n        properties: {\n          expiresIn: {\n            description: \"The number of seconds until the ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"An Identity Platform ID token for the authenticated user.\",\n            type: \"string\"\n          },\n          isNewUser: {\n            description: \"Whether the authenticated user was created by this request.\",\n            type: \"boolean\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"An Identity Platform refresh token for the authenticated user.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest: {\n        description: \"Request message for SignInWithEmailLink\",\n        properties: {\n          email: {\n            description: \"Required. The email address the sign-in link was sent to. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"A valid ID token for an Identity Platform account. If passed, this request will link the email address to the user represented by this ID token and enable sign-in with email link on the account for the future.\",\n            type: \"string\"\n          },\n          oobCode: {\n            description: \"Required. The out-of-band code from the email link.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse: {\n        description: \"Response message for SignInWithEmailLink.\",\n        properties: {\n          email: {\n            description: \"The email the user signed in with. Always present in the response.\",\n            type: \"string\"\n          },\n          expiresIn: {\n            description: \"The number of seconds until the ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"An Identity Platform ID token for the authenticated user.\",\n            type: \"string\"\n          },\n          isNewUser: {\n            description: \"Whether the authenticated user was created by this request.\",\n            type: \"boolean\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          localId: {\n            description: \"The ID of the authenticated user. Always present in the response.\",\n            type: \"string\"\n          },\n          mfaInfo: {\n            description: \"Info on which multi-factor authentication providers are enabled. Present if the user needs to complete the sign-in using multi-factor authentication.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\"\n            },\n            type: \"array\"\n          },\n          mfaPendingCredential: {\n            description: \"An opaque string that functions as proof that the user has successfully passed the first factor check.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"Refresh token for the authenticated user.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest: {\n        description: \"Request message for SignInWithGameCenter\",\n        properties: {\n          displayName: {\n            description: \"The user's Game Center display name.\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"A valid ID token for an Identity Platform account. If present, this request will link the Game Center player ID to the account represented by this ID token.\",\n            type: \"string\"\n          },\n          playerId: {\n            description: \"Required. The user's Game Center player ID.\",\n            type: \"string\"\n          },\n          publicKeyUrl: {\n            description: \"Required. The URL to fetch the Apple public key in order to verify the given signature is signed by Apple.\",\n            type: \"string\"\n          },\n          salt: {\n            description: \"Required. A random string used to generate the given signature.\",\n            type: \"string\"\n          },\n          signature: {\n            description: \"Required. The verification signature data generated by Apple.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to.\",\n            type: \"string\"\n          },\n          timestamp: {\n            description: \"Required. The time when the signature was created by Apple, in milliseconds since the epoch.\",\n            format: \"int64\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse: {\n        description: \"Response message for SignInWithGameCenter\",\n        properties: {\n          displayName: {\n            description: \"Display name of the authenticated user.\",\n            type: \"string\"\n          },\n          expiresIn: {\n            description: \"The number of seconds until the ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"An Identity Platform ID token for the authenticated user.\",\n            type: \"string\"\n          },\n          isNewUser: {\n            description: \"Whether the logged in user was created by this request.\",\n            type: \"boolean\"\n          },\n          localId: {\n            description: \"The ID of the authenticated user. Always present in the response.\",\n            type: \"string\"\n          },\n          playerId: {\n            description: \"The user's Game Center player ID.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"An Identity Platform refresh token for the authenticated user.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithIdpRequest: {\n        description: \"Request message for SignInWithIdp.\",\n        properties: {\n          autoCreate: {\n            type: \"boolean\"\n          },\n          delegatedProjectNumber: {\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"A valid Identity Platform ID token. If passed, the user's account at the IdP will be linked to the account represented by this ID token.\",\n            type: \"string\"\n          },\n          pendingIdToken: {\n            type: \"string\"\n          },\n          pendingToken: {\n            description: \"An opaque string from a previous SignInWithIdp response. If set, it can be used to repeat the sign-in operation from the previous SignInWithIdp operation.\",\n            type: \"string\"\n          },\n          postBody: {\n            description: \"If the user is signing in with an authorization response obtained via a previous CreateAuthUri authorization request, this is the body of the HTTP POST callback from the IdP, if present. Otherwise, if the user is signing in with a manually provided IdP credential, this should be a URL-encoded form that contains the credential (e.g. an ID token or access token for OAuth 2.0 IdPs) and the provider ID of the IdP that issued the credential. For example, if the user is signing in to the Google provider using a Google ID token, this should be set to `id_token=[GOOGLE_ID_TOKEN]&providerId=google.com`, where `[GOOGLE_ID_TOKEN]` should be replaced with the Google ID token. If the user is signing in to the Facebook provider using a Facebook authentication token, this should be set to `id_token=[FACEBOOK_AUTHENTICATION_TOKEN]&providerId=facebook.com&nonce= [NONCE]`, where `[FACEBOOK_AUTHENTICATION_TOKEN]` should be replaced with the Facebook authentication token. Nonce is required for validating the token. The request will fail if no nonce is provided. If the user is signing in to the Facebook provider using a Facebook access token, this should be set to `access_token=[FACEBOOK_ACCESS_TOKEN]&providerId=facebook.com`, where `[FACEBOOK_ACCESS_TOKEN]` should be replaced with the Facebook access token. If the user is signing in to the Twitter provider using a Twitter OAuth 1.0 credential, this should be set to `access_token=[TWITTER_ACCESS_TOKEN]&oauth_token_secret=[TWITTER_TOKEN_SECRET]&providerId=twitter.com`, where `[TWITTER_ACCESS_TOKEN]` and `[TWITTER_TOKEN_SECRET]` should be replaced with the Twitter OAuth access token and Twitter OAuth token secret respectively.\",\n            type: \"string\"\n          },\n          requestUri: {\n            description: \"Required. The URL to which the IdP redirects the user back. This can be set to `http://localhost` if the user is signing in with a manually provided IdP credential.\",\n            type: \"string\"\n          },\n          returnIdpCredential: {\n            description: \"Whether or not to return OAuth credentials from the IdP on the following errors: `FEDERATED_USER_ID_ALREADY_LINKED` and `EMAIL_EXISTS`.\",\n            type: \"boolean\"\n          },\n          returnRefreshToken: {\n            description: \"Whether or not to return the OAuth refresh token from the IdP, if available.\",\n            type: \"boolean\"\n          },\n          returnSecureToken: {\n            description: \"Should always be true.\",\n            type: \"boolean\"\n          },\n          sessionId: {\n            description: \"The session ID returned from a previous CreateAuthUri call. This field is verified against that session ID to prevent session fixation attacks. Required if the user is signing in with an authorization response from a previous CreateAuthUri authorization request.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithIdpResponse: {\n        description: \"Response message for SignInWithIdp.\",\n        properties: {\n          context: {\n            description: \"The opaque string set in CreateAuthUri that is used to maintain contextual information between the authentication request and the callback from the IdP.\",\n            type: \"string\"\n          },\n          dateOfBirth: {\n            description: \"The date of birth for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          displayName: {\n            description: \"The display name for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The email address of the user's account at the IdP.\",\n            type: \"string\"\n          },\n          emailRecycled: {\n            description: 'Whether or not there is an existing Identity Platform user account with the same email address but linked to a different account at the same IdP. Only present if the \"One account per email address\" setting is enabled and the email address at the IdP is verified.',\n            type: \"boolean\"\n          },\n          emailVerified: {\n            description: \"Whether the user account's email address is verified.\",\n            type: \"boolean\"\n          },\n          errorMessage: {\n            description: \"The error message returned if `return_idp_credential` is set to `true` and either the `FEDERATED_USER_ID_ALREADY_LINKED` or `EMAIL_EXISTS` error is encountered. This field's value is either `FEDERATED_USER_ID_ALREADY_LINKED` or `EMAIL_EXISTS`.\",\n            type: \"string\"\n          },\n          expiresIn: {\n            description: \"The number of seconds until the Identity Platform ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          federatedId: {\n            description: \"The user's account ID at the IdP. Always present in the response.\",\n            type: \"string\"\n          },\n          firstName: {\n            description: \"The first name for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          fullName: {\n            description: \"The full name for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"An Identity Platform ID token for the authenticated user.\",\n            type: \"string\"\n          },\n          inputEmail: {\n            type: \"string\"\n          },\n          isNewUser: {\n            description: \"Whether or not a new Identity Platform account was created for the authenticated user.\",\n            type: \"boolean\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          language: {\n            description: \"The language preference for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          lastName: {\n            description: \"The last name for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          localId: {\n            description: \"The ID of the authenticated Identity Platform user. Always present in the response.\",\n            type: \"string\"\n          },\n          mfaInfo: {\n            description: \"Info on which multi-factor authentication providers are enabled for the account. Present if the user needs to complete the sign-in using multi-factor authentication.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\"\n            },\n            type: \"array\"\n          },\n          mfaPendingCredential: {\n            description: \"An opaque string that functions as proof that the user has successfully passed the first factor authentication.\",\n            type: \"string\"\n          },\n          needConfirmation: {\n            description: 'Whether or not there is an existing Identity Platform user account with the same email address as the current account signed in at the IdP, and the account\\'s email addresss is not verified at the IdP. The user will need to sign in to the existing Identity Platform account and then link the current credential from the IdP to it. Only present if the \"One account per email address\" setting is enabled.',\n            type: \"boolean\"\n          },\n          needEmail: {\n            type: \"boolean\"\n          },\n          nickName: {\n            description: \"The nickname for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          oauthAccessToken: {\n            description: \"The OAuth access token from the IdP, if available.\",\n            type: \"string\"\n          },\n          oauthAuthorizationCode: {\n            description: \"The OAuth 2.0 authorization code, if available. Only present for the Google provider.\",\n            type: \"string\"\n          },\n          oauthExpireIn: {\n            description: \"The number of seconds until the OAuth access token from the IdP expires.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          oauthIdToken: {\n            description: \"The OpenID Connect ID token from the IdP, if available.\",\n            type: \"string\"\n          },\n          oauthRefreshToken: {\n            description: \"The OAuth 2.0 refresh token from the IdP, if available and `return_refresh_token` is set to `true`.\",\n            type: \"string\"\n          },\n          oauthTokenSecret: {\n            description: \"The OAuth 1.0 token secret from the IdP, if available. Only present for the Twitter provider.\",\n            type: \"string\"\n          },\n          originalEmail: {\n            description: 'The main (top-level) email address of the user\\'s Identity Platform account, if different from the email address at the IdP. Only present if the \"One account per email address\" setting is enabled.',\n            type: \"string\"\n          },\n          pendingToken: {\n            description: \"An opaque string that can be used as a credential from the IdP the user is signing into. The pending token obtained here can be set in a future SignInWithIdp request to sign the same user in with the IdP again.\",\n            type: \"string\"\n          },\n          photoUrl: {\n            description: \"The URL of the user's profile picture at the IdP.\",\n            type: \"string\"\n          },\n          providerId: {\n            description: \"The provider ID of the IdP that the user is signing in to. Always present in the response.\",\n            type: \"string\"\n          },\n          rawUserInfo: {\n            description: \"The stringified JSON response containing all the data corresponding to the user's account at the IdP.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"An Identity Platform refresh token for the authenticated user.\",\n            type: \"string\"\n          },\n          screenName: {\n            description: \"The screen name for the user's account at the Twitter IdP or the login name for the user's account at the GitHub IdP.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The value of the `tenant_id` field in the request.\",\n            type: \"string\"\n          },\n          timeZone: {\n            description: \"The time zone for the user's account at the IdP.\",\n            type: \"string\"\n          },\n          verifiedProvider: {\n            description: \"A list of provider IDs that the user can sign in to in order to resolve a `need_confirmation` error. Only present if `need_confirmation` is set to `true`.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest: {\n        description: \"Request message for SignInWithPassword.\",\n        properties: {\n          captchaChallenge: {\n            type: \"string\"\n          },\n          captchaResponse: {\n            description: \"The response from a reCaptcha challenge. A recaptcha response is required when the service detects possible abuse activity.\",\n            type: \"string\"\n          },\n          delegatedProjectNumber: {\n            format: \"int64\",\n            type: \"string\"\n          },\n          email: {\n            description: \"Required. The email the user is signing in with. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n            type: \"string\"\n          },\n          idToken: {\n            type: \"string\"\n          },\n          instanceId: {\n            type: \"string\"\n          },\n          password: {\n            description: \"Required. The password the user provides to sign in to the account.\",\n            type: \"string\"\n          },\n          pendingIdToken: {\n            type: \"string\"\n          },\n          returnSecureToken: {\n            description: \"Should always be true.\",\n            type: \"boolean\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform instance in the project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse: {\n        description: \"Response message for SignInWithPassword.\",\n        properties: {\n          displayName: {\n            description: \"The user's display name stored in the account's attributes.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The email of the authenticated user. Always present in the response.\",\n            type: \"string\"\n          },\n          expiresIn: {\n            description: \"The number of seconds until the Identity Platform ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"An Identity Platform ID token for the authenticated user.\",\n            type: \"string\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          localId: {\n            description: \"The ID of the authenticated user. Always present in the response.\",\n            type: \"string\"\n          },\n          mfaInfo: {\n            description: \"Info on which multi-factor authentication providers are enabled for the account. Present if the user needs to complete the sign-in using multi-factor authentication.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\"\n            },\n            type: \"array\"\n          },\n          mfaPendingCredential: {\n            description: \"An opaque string that functions as proof that the user has successfully passed the first factor authentication.\",\n            type: \"string\"\n          },\n          oauthAccessToken: {\n            description: \"The OAuth2 access token.\",\n            type: \"string\"\n          },\n          oauthAuthorizationCode: {\n            type: \"string\"\n          },\n          oauthExpireIn: {\n            description: \"The access token expiration time in seconds.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          profilePicture: {\n            description: \"The user's profile picture stored in the account's attributes.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"An Identity Platform refresh token for the authenticated user.\",\n            type: \"string\"\n          },\n          registered: {\n            description: \"Whether the email is for an existing account. Always true.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest: {\n        description: \"Request message for SignInWithPhoneNumber.\",\n        properties: {\n          code: {\n            description: \"User-entered verification code from an SMS sent to the user's phone.\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"A valid ID token for an Identity Platform account. If passed, this request will link the phone number to the user represented by this ID token if the phone number is not in use, or will reauthenticate the user if the phone number is already linked to the user.\",\n            type: \"string\"\n          },\n          operation: {\n            enum: [\"VERIFY_OP_UNSPECIFIED\", \"SIGN_UP_OR_IN\", \"REAUTH\", \"UPDATE\", \"LINK\"],\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"The user's phone number to sign in with. This is necessary in the case of uing a temporary proof, in which case it must match the phone number that was authenticated in the request that generated the temporary proof. This field is ignored if a session info is passed.\",\n            type: \"string\"\n          },\n          sessionInfo: {\n            description: \"Encrypted session information from the response of sendVerificationCode. In the case of authenticating with an SMS code this must be specified, but in the case of using a temporary proof it can be unspecified.\",\n            type: \"string\"\n          },\n          temporaryProof: {\n            description: \"A proof of the phone number verification, provided from a previous signInWithPhoneNumber request. If this is passed, the caller must also pass in the phone_number field the phone number that was verified in the previous request.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n            type: \"string\"\n          },\n          verificationProof: {\n            description: \"Do not use.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse: {\n        description: \"Response message for SignInWithPhoneNumber.\",\n        properties: {\n          expiresIn: {\n            description: \"The number of seconds until the ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"Identity Platform ID token for the authenticated user.\",\n            type: \"string\"\n          },\n          isNewUser: {\n            description: \"Whether the authenticated user was created by this request.\",\n            type: \"boolean\"\n          },\n          localId: {\n            description: \"The id of the authenticated user. Present in the case of a successful authentication. In the case when the phone could be verified but the account operation could not be performed, a temporary proof will be returned instead.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"Phone number of the authenticated user. Always present in the response.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"Refresh token for the authenticated user.\",\n            type: \"string\"\n          },\n          temporaryProof: {\n            description: \"A proof of the phone number verification, provided if a phone authentication is successful but the user operation fails. This happens when the request tries to link a phone number to a user with an ID token or reauthenticate with an ID token but the phone number is linked to a different user.\",\n            type: \"string\"\n          },\n          temporaryProofExpiresIn: {\n            description: \"The number of seconds until the temporary proof expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          verificationProof: {\n            description: \"Do not use.\",\n            type: \"string\"\n          },\n          verificationProofExpiresIn: {\n            description: \"Do not use.\",\n            format: \"int64\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignUpRequest: {\n        description: \"Request message for SignUp.\",\n        properties: {\n          captchaChallenge: {\n            type: \"string\"\n          },\n          captchaResponse: {\n            description: \"The response from a reCaptcha challenge. A reCaptcha response is required when the service detects potential abuse activity.\",\n            type: \"string\"\n          },\n          disabled: {\n            description: \"Whether the user will be disabled upon creation. Disabled accounts are inaccessible except for requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"boolean\"\n          },\n          displayName: {\n            description: \"The display name of the user to be created.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The email to assign to the created user. The length of the email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. An anonymous user will be created if not provided.\",\n            type: \"string\"\n          },\n          emailVerified: {\n            description: \"Whether the user's email is verified. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"boolean\"\n          },\n          idToken: {\n            description: \"A valid ID token for an Identity Platform user. If set, this request will link the authentication credential to the user represented by this ID token. For a non-admin request, both the `email` and `password` fields must be set. For an admin request, `local_id` must not be set.\",\n            type: \"string\"\n          },\n          instanceId: {\n            type: \"string\"\n          },\n          localId: {\n            description: \"The ID of the user to create. The ID must be unique within the project that the user is being created under. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"string\"\n          },\n          mfaInfo: {\n            description: \"The multi-factor authentication providers for the user to create.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaFactor\"\n            },\n            type: \"array\"\n          },\n          password: {\n            description: \"The password to assign to the created user. The password must be be at least 6 characters long. If set, the `email` field must also be set.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"The phone number of the user to create. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            type: \"string\"\n          },\n          photoUrl: {\n            description: \"The profile photo url of the user to create.\",\n            type: \"string\"\n          },\n          targetProjectId: {\n            description: \"The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant to create a user under. If not set, the user will be created under the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SignUpResponse: {\n        description: \"Response message for SignUp.\",\n        properties: {\n          displayName: {\n            description: \"The created user's display name.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The created user's email.\",\n            type: \"string\"\n          },\n          expiresIn: {\n            description: \"The number of seconds until the ID token expires.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"An Identity Platform ID token for the created user. This field is only set for non-admin requests.\",\n            type: \"string\"\n          },\n          kind: {\n            type: \"string\"\n          },\n          localId: {\n            description: \"The ID of the created user. Always present in the response.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"An Identity Platform refresh token for the created user. This field is only set for non-admin requests.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1SqlExpression: {\n        description: \"Query conditions used to filter results.\",\n        properties: {\n          email: {\n            description: \"A case insensitive string that the account's email should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression. If more than one is specified, only the first (in that order) will be applied.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"A string that the account's phone number should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression. If more than one is specified, only the first (in that order) will be applied.\",\n            type: \"string\"\n          },\n          userId: {\n            description: \"A string that the account's local ID should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression If more than one is specified, only the first (in that order) will be applied.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1UploadAccountRequest: {\n        description: \"Request message for UploadAccount.\",\n        properties: {\n          allowOverwrite: {\n            description: \"Whether to overwrite an existing account in Identity Platform with a matching `local_id` in the request. If true, the existing account will be overwritten. If false, an error will be returned.\",\n            type: \"boolean\"\n          },\n          argon2Parameters: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1Argon2Parameters\"\n          },\n          blockSize: {\n            description: \"The block size parameter used by the STANDARD_SCRYPT hashing function. This parameter, along with parallelization and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          cpuMemCost: {\n            description: \"The CPU memory cost parameter to be used by the STANDARD_SCRYPT hashing function. This parameter, along with block_size and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          delegatedProjectNumber: {\n            description: \"If true, the service will do the following list of checks before an account is uploaded: * Duplicate emails * Duplicate federated IDs * Federated ID provider validation If the duplication exists within the list of accounts to be uploaded, it will prevent the entire list from being uploaded. If the email or federated ID is a duplicate of a user already within the project/tenant, the account will not be uploaded, but the rest of the accounts will be unaffected. If false, these checks will be skipped.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          dkLen: {\n            description: \"The desired key length for the STANDARD_SCRYPT hashing function. Must be at least 1.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          hashAlgorithm: {\n            description: \"Required. The hashing function used to hash the account passwords. Must be one of the following: * HMAC_SHA256 * HMAC_SHA1 * HMAC_MD5 * SCRYPT * PBKDF_SHA1 * MD5 * HMAC_SHA512 * SHA1 * BCRYPT * PBKDF2_SHA256 * SHA256 * SHA512 * STANDARD_SCRYPT * ARGON2\",\n            type: \"string\"\n          },\n          memoryCost: {\n            description: \"Memory cost for hash calculation. Only required when the hashing function is SCRYPT.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          parallelization: {\n            description: \"The parallelization cost parameter to be used by the STANDARD_SCRYPT hashing function. This parameter, along with block_size and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          passwordHashOrder: {\n            description: \"Password and salt order when verify password.\",\n            enum: [\"UNSPECIFIED_ORDER\", \"SALT_AND_PASSWORD\", \"PASSWORD_AND_SALT\"],\n            type: \"string\"\n          },\n          rounds: {\n            description: \"The number of rounds used for hash calculation. Only required for the following hashing functions: * MD5 * SHA1 * SHA256 * SHA512 * PBKDF_SHA1 * PBKDF2_SHA256 * SCRYPT\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          saltSeparator: {\n            description: \"One or more bytes to be inserted between the salt and plain text password. For stronger security, this should be a single non-printable character.\",\n            format: \"byte\",\n            type: \"string\"\n          },\n          sanityCheck: {\n            type: \"boolean\"\n          },\n          signerKey: {\n            description: \"The signer key used to hash the password. Required for the following hashing functions: * SCRYPT, * HMAC_MD5, * HMAC_SHA1, * HMAC_SHA256, * HMAC_SHA512\",\n            format: \"byte\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the account belongs to.\",\n            type: \"string\"\n          },\n          users: {\n            description: \"A list of accounts to upload.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1UploadAccountResponse: {\n        description: \"Response message for UploadAccount.\",\n        properties: {\n          error: {\n            description: \"Detailed error info for accounts that cannot be uploaded.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ErrorInfo\"\n            },\n            type: \"array\"\n          },\n          kind: {\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1UserInfo: {\n        description: \"An Identity Platform account's information.\",\n        properties: {\n          createdAt: {\n            description: \"The time, in milliseconds from epoch, when the account was created.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          customAttributes: {\n            description: \"Custom claims to be added to any ID tokens minted for the account. Should be at most 1,000 characters in length and in valid JSON format.\",\n            type: \"string\"\n          },\n          customAuth: {\n            description: \"Output only. Whether this account has been authenticated using SignInWithCustomToken.\",\n            readOnly: true,\n            type: \"boolean\"\n          },\n          dateOfBirth: {\n            description: \"Output only. The date of birth set for the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          disabled: {\n            description: \"Whether the account is disabled. Disabled accounts are inaccessible except for requests bearing a Google OAuth2 credential with proper permissions.\",\n            type: \"boolean\"\n          },\n          displayName: {\n            description: \"The display name of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n            type: \"string\"\n          },\n          email: {\n            description: \"The account's email address. The length of the email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec.\",\n            type: \"string\"\n          },\n          emailLinkSignin: {\n            description: \"Output only. Whether the account can authenticate with email link.\",\n            readOnly: true,\n            type: \"boolean\"\n          },\n          emailVerified: {\n            description: \"Whether the account's email address has been verified.\",\n            type: \"boolean\"\n          },\n          initialEmail: {\n            description: \"The first email address associated with this account. The account's initial email cannot be changed once set and is used to recover access to this account if lost via the RECOVER_EMAIL flow in GetOobCode. Should match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec.\",\n            type: \"string\"\n          },\n          language: {\n            description: \"Output only. The language preference of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          lastLoginAt: {\n            description: \"The last time, in milliseconds from epoch, this account was logged into.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          lastRefreshAt: {\n            description: \"Timestamp when an ID token was last minted for this account.\",\n            format: \"google-datetime\",\n            type: \"string\"\n          },\n          localId: {\n            description: \"Immutable. The unique ID of the account.\",\n            type: \"string\"\n          },\n          mfaInfo: {\n            description: \"Information on which multi-factor authentication providers are enabled for this account.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\"\n            },\n            type: \"array\"\n          },\n          passwordHash: {\n            description: \"The account's hashed password. Only accessible by requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n            format: \"byte\",\n            type: \"string\"\n          },\n          passwordUpdatedAt: {\n            description: \"The timestamp, in milliseconds from the epoch of 1970-01-01T00:00:00Z, when the account's password was last updated.\",\n            format: \"double\",\n            type: \"number\"\n          },\n          phoneNumber: {\n            description: \"The account's phone number.\",\n            type: \"string\"\n          },\n          photoUrl: {\n            description: \"The URL of the account's profile photo. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n            type: \"string\"\n          },\n          providerUserInfo: {\n            description: \"Information about the user as provided by various Identity Providers.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ProviderUserInfo\"\n            },\n            type: \"array\"\n          },\n          rawPassword: {\n            description: \"Input only. Plain text password used to update a account's password. This field is only ever used as input in a request. Identity Platform uses cryptographically secure hashing when managing passwords and will never store or transmit a user's password in plain text.\",\n            type: \"string\"\n          },\n          salt: {\n            description: \"The account's password salt. Only accessible by requests bearing a Google OAuth2 credential with proper permissions.\",\n            format: \"byte\",\n            type: \"string\"\n          },\n          screenName: {\n            description: \"Output only. This account's screen name at Twitter or login name at GitHub.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"ID of the tenant this account belongs to. Only set if this account belongs to a tenant.\",\n            type: \"string\"\n          },\n          timeZone: {\n            description: \"Output only. The time zone preference of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          validSince: {\n            description: \"Oldest timestamp, in seconds since epoch, that an ID token should be considered valid. All ID tokens issued before this time are considered invalid.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          version: {\n            description: \"The version of the account's password. Only accessible by requests bearing a Google OAuth2 credential with proper permissions.\",\n            format: \"int32\",\n            type: \"integer\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1VerifyIosClientRequest: {\n        description: \"Request message for VerifyIosClient\",\n        properties: {\n          appToken: {\n            description: \"A device token that the iOS client gets after registering to APNs (Apple Push Notification service).\",\n            type: \"string\"\n          },\n          isSandbox: {\n            description: \"Whether the app token is in the iOS sandbox. If false, the app token is in the production environment.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV1VerifyIosClientResponse: {\n        description: \"Response message for VerifyIosClient.\",\n        properties: {\n          receipt: {\n            description: \"Receipt of successful app token validation.\",\n            type: \"string\"\n          },\n          suggestedTimeout: {\n            description: \"Suggested time that the client should wait in seconds for delivery of the push notification.\",\n            format: \"int64\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Anonymous: {\n        description: \"Configuration options related to authenticating an anonymous user.\",\n        properties: {\n          enabled: {\n            description: \"Whether anonymous user auth is enabled for the project or not.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig: {\n        description: \"Additional config for SignInWithApple.\",\n        properties: {\n          bundleIds: {\n            description: \"A list of Bundle ID's usable by this project\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          codeFlowConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig: {\n        description: \"Configuration related to Blocking Functions.\",\n        properties: {\n          forwardInboundCredentials: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials\"\n          },\n          triggers: {\n            additionalProperties: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Trigger\"\n            },\n            description: 'Map of Trigger to event type. Key should be one of the supported event types: \"beforeCreate\", \"beforeSignIn\"',\n            type: \"object\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2ClientConfig: {\n        description: \"Options related to how clients making requests on behalf of a project should be configured.\",\n        properties: {\n          apiKey: {\n            description: \"Output only. API key that can be used when making requests for this project.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          firebaseSubdomain: {\n            description: \"Output only. Firebase subdomain.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          permissions: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Permissions\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig: {\n        description: \"Additional config for Apple for code flow.\",\n        properties: {\n          keyId: {\n            description: \"Key ID for the private key.\",\n            type: \"string\"\n          },\n          privateKey: {\n            description: \"Private key used for signing the client secret JWT.\",\n            type: \"string\"\n          },\n          teamId: {\n            description: \"Apple Developer Team ID.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Config: {\n        description: \"Represents an Identity Toolkit project.\",\n        properties: {\n          authorizedDomains: {\n            description: \"List of domains authorized for OAuth redirects\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          blockingFunctions: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig\"\n          },\n          client: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ClientConfig\"\n          },\n          mfa: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig\"\n          },\n          monitoring: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MonitoringConfig\"\n          },\n          multiTenant: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig\"\n          },\n          name: {\n            description: 'Output only. The name of the Config resource. Example: \"projects/my-awesome-project/config\"',\n            readOnly: true,\n            type: \"string\"\n          },\n          notification: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2NotificationConfig\"\n          },\n          quota: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2QuotaConfig\"\n          },\n          signIn: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SignInConfig\"\n          },\n          subtype: {\n            description: \"Output only. The subtype of this config.\",\n            enum: [\"SUBTYPE_UNSPECIFIED\", \"IDENTITY_PLATFORM\", \"FIREBASE_AUTH\"],\n            readOnly: true,\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp: {\n        description: \"Standard Identity Toolkit-trusted IDPs.\",\n        properties: {\n          description: {\n            description: \"Description of the Idp\",\n            type: \"string\"\n          },\n          idpId: {\n            description: \"Id the of Idp\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig: {\n        description: \"Configurations options for authenticating with a the standard set of Identity Toolkit-trusted IDPs.\",\n        properties: {\n          appleSignInConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig\"\n          },\n          clientId: {\n            description: \"OAuth client ID.\",\n            type: \"string\"\n          },\n          clientSecret: {\n            description: \"OAuth client secret.\",\n            type: \"string\"\n          },\n          enabled: {\n            description: \"True if allows the user to sign in with the provider.\",\n            type: \"boolean\"\n          },\n          name: {\n            description: 'The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"',\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2DnsInfo: {\n        description: \"Information of custom domain DNS verification. By default, default_domain will be used. A custom domain can be configured using VerifyCustomDomain.\",\n        properties: {\n          customDomain: {\n            description: \"Output only. The applied verified custom domain.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          customDomainState: {\n            description: \"Output only. The current verification state of the custom domain. The custom domain will only be used once the domain verification is successful.\",\n            enum: [\"VERIFICATION_STATE_UNSPECIFIED\", \"NOT_STARTED\", \"IN_PROGRESS\", \"FAILED\", \"SUCCEEDED\"],\n            readOnly: true,\n            type: \"string\"\n          },\n          domainVerificationRequestTime: {\n            description: \"Output only. The timestamp of initial request for the current domain verification.\",\n            format: \"google-datetime\",\n            readOnly: true,\n            type: \"string\"\n          },\n          pendingCustomDomain: {\n            description: \"Output only. The custom domain that's to be verified.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          useCustomDomain: {\n            description: \"Whether to use custom domain.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Email: {\n        description: \"Configuration options related to authenticating a user by their email address.\",\n        properties: {\n          enabled: {\n            description: \"Whether email auth is enabled for the project or not.\",\n            type: \"boolean\"\n          },\n          passwordRequired: {\n            description: \"Whether a password is required for email auth or not. If true, both an email and password must be provided to sign in. If false, a user may sign in via either email/password or email link.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2EmailTemplate: {\n        description: \"Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.\",\n        properties: {\n          body: {\n            description: \"Email body\",\n            type: \"string\"\n          },\n          bodyFormat: {\n            description: \"Email body format\",\n            enum: [\"BODY_FORMAT_UNSPECIFIED\", \"PLAIN_TEXT\", \"HTML\"],\n            type: \"string\"\n          },\n          customized: {\n            description: \"Output only. Whether the body or subject of the email is customized.\",\n            readOnly: true,\n            type: \"boolean\"\n          },\n          replyTo: {\n            description: \"Reply-to address\",\n            type: \"string\"\n          },\n          senderDisplayName: {\n            description: \"Sender display name\",\n            type: \"string\"\n          },\n          senderLocalPart: {\n            description: \"Local part of From address\",\n            type: \"string\"\n          },\n          subject: {\n            description: \"Subject of the email\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials: {\n        description: \"Indicates which credentials to pass to the registered Blocking Functions.\",\n        properties: {\n          accessToken: {\n            description: \"Whether to pass the user's OAuth identity provider's access token.\",\n            type: \"boolean\"\n          },\n          idToken: {\n            description: \"Whether to pass the user's OIDC identity provider's ID token.\",\n            type: \"boolean\"\n          },\n          refreshToken: {\n            description: \"Whether to pass the user's OAuth identity provider's refresh token.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2HashConfig: {\n        description: \"History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.\",\n        properties: {\n          algorithm: {\n            description: \"Output only. Different password hash algorithms used in Identity Toolkit.\",\n            enum: [\"HASH_ALGORITHM_UNSPECIFIED\", \"HMAC_SHA256\", \"HMAC_SHA1\", \"HMAC_MD5\", \"SCRYPT\", \"PBKDF_SHA1\", \"MD5\", \"HMAC_SHA512\", \"SHA1\", \"BCRYPT\", \"PBKDF2_SHA256\", \"SHA256\", \"SHA512\", \"STANDARD_SCRYPT\"],\n            readOnly: true,\n            type: \"string\"\n          },\n          memoryCost: {\n            description: \"Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.\",\n            format: \"int32\",\n            readOnly: true,\n            type: \"integer\"\n          },\n          rounds: {\n            description: \"Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.\",\n            format: \"int32\",\n            readOnly: true,\n            type: \"integer\"\n          },\n          saltSeparator: {\n            description: \"Output only. Non-printable character to be inserted between the salt and plain text password in base64.\",\n            readOnly: true,\n            type: \"string\"\n          },\n          signerKey: {\n            description: \"Output only. Signer key in base64.\",\n            readOnly: true,\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2IdpCertificate: {\n        description: \"The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.\",\n        properties: {\n          x509Certificate: {\n            description: \"The x509 certificate\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2IdpConfig: {\n        description: \"The SAML IdP (Identity Provider) configuration when the project acts as the relying party.\",\n        properties: {\n          idpCertificates: {\n            description: \"IDP's public keys for verifying signature in the assertions.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2IdpCertificate\"\n            },\n            type: \"array\"\n          },\n          idpEntityId: {\n            description: \"Unique identifier for all SAML entities.\",\n            type: \"string\"\n          },\n          signRequest: {\n            description: \"Indicates if outbounding SAMLRequest should be signed.\",\n            type: \"boolean\"\n          },\n          ssoUrl: {\n            description: \"URL to send Authentication request to.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig: {\n        description: \"A pair of SAML RP-IDP configurations when the project acts as the relying party.\",\n        properties: {\n          displayName: {\n            description: \"The config's display name set by developers.\",\n            type: \"string\"\n          },\n          enabled: {\n            description: \"True if allows the user to sign in with the provider.\",\n            type: \"boolean\"\n          },\n          idpConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2IdpConfig\"\n          },\n          name: {\n            description: \"The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.\",\n            type: \"string\"\n          },\n          spConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SpConfig\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Inheritance: {\n        description: \"Settings that the tenants will inherit from project level.\",\n        properties: {\n          emailSendingConfig: {\n            description: \"Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse: {\n        description: \"Response for DefaultSupportedIdpConfigs\",\n        properties: {\n          defaultSupportedIdpConfigs: {\n            description: \"The set of configs.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n            },\n            type: \"array\"\n          },\n          nextPageToken: {\n            description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse: {\n        description: \"Response for ListDefaultSupportedIdps\",\n        properties: {\n          defaultSupportedIdps: {\n            description: \"The set of configs.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp\"\n            },\n            type: \"array\"\n          },\n          nextPageToken: {\n            description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse: {\n        description: \"Response for ListInboundSamlConfigs\",\n        properties: {\n          inboundSamlConfigs: {\n            description: \"The set of configs.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n            },\n            type: \"array\"\n          },\n          nextPageToken: {\n            description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse: {\n        description: \"Response for ListOAuthIdpConfigs\",\n        properties: {\n          nextPageToken: {\n            description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n            type: \"string\"\n          },\n          oauthIdpConfigs: {\n            description: \"The set of configs.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse: {\n        description: \"Response message for ListTenants.\",\n        properties: {\n          nextPageToken: {\n            description: \"The token to get the next page of results.\",\n            type: \"string\"\n          },\n          tenants: {\n            description: \"A list of tenants under the given agent project.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2MonitoringConfig: {\n        description: \"Configuration related to monitoring project activity.\",\n        properties: {\n          requestLogging: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2RequestLogging\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig: {\n        description: \"Options related to MultiFactor Authentication for the project.\",\n        properties: {\n          enabledProviders: {\n            description: \"A list of usable second factors for this project.\",\n            items: {\n              enum: [\"PROVIDER_UNSPECIFIED\", \"PHONE_SMS\"],\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          state: {\n            description: \"Whether MultiFactor Authentication has been enabled for this project.\",\n            enum: [\"STATE_UNSPECIFIED\", \"DISABLED\", \"ENABLED\", \"MANDATORY\"],\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig: {\n        description: \"Configuration related to multi-tenant functionality.\",\n        properties: {\n          allowTenants: {\n            description: \"Whether this project can have tenants or not.\",\n            type: \"boolean\"\n          },\n          defaultTenantLocation: {\n            description: 'The default cloud parent org or folder that the tenant project should be created under. The parent resource name should be in the format of \"/\", such as \"folders/123\" or \"organizations/456\". If the value is not set, the tenant will be created under the same organization or folder as the agent project.',\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2NotificationConfig: {\n        description: \"Configuration related to sending notifications to users.\",\n        properties: {\n          defaultLocale: {\n            description: \"Default locale used for email and SMS in IETF BCP 47 format.\",\n            type: \"string\"\n          },\n          sendEmail: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SendEmail\"\n          },\n          sendSms: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SendSms\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig: {\n        description: \"Configuration options for authenticating with an OAuth IDP.\",\n        properties: {\n          clientId: {\n            description: \"The client id of an OAuth client.\",\n            type: \"string\"\n          },\n          clientSecret: {\n            description: \"The client secret of the OAuth client, to enable OIDC code flow.\",\n            type: \"string\"\n          },\n          displayName: {\n            description: \"The config's display name set by developers.\",\n            type: \"string\"\n          },\n          enabled: {\n            description: \"True if allows the user to sign in with the provider.\",\n            type: \"boolean\"\n          },\n          issuer: {\n            description: \"For OIDC Idps, the issuer identifier.\",\n            type: \"string\"\n          },\n          name: {\n            description: \"The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.\",\n            type: \"string\"\n          },\n          responseType: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthResponseType\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2OAuthResponseType: {\n        description: \"The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.\",\n        properties: {\n          code: {\n            description: \"If true, authorization code is returned from IdP's authorization endpoint.\",\n            type: \"boolean\"\n          },\n          idToken: {\n            description: \"If true, ID token is returned from IdP's authorization endpoint.\",\n            type: \"boolean\"\n          },\n          token: {\n            description: \"Do not use. The `token` response type is not supported at the moment.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Permissions: {\n        description: \"Configuration related to restricting a user's ability to affect their account.\",\n        properties: {\n          disabledUserDeletion: {\n            description: \"When true, end users cannot delete their account on the associated project through any of our API methods\",\n            type: \"boolean\"\n          },\n          disabledUserSignup: {\n            description: \"When true, end users cannot sign up for a new account on the associated project through any of our API methods\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2PhoneNumber: {\n        description: \"Configuration options related to authenticated a user by their phone number.\",\n        properties: {\n          enabled: {\n            description: \"Whether phone number auth is enabled for the project or not.\",\n            type: \"boolean\"\n          },\n          testPhoneNumbers: {\n            additionalProperties: {\n              type: \"string\"\n            },\n            description: \"A map of that can be used for phone auth testing.\",\n            type: \"object\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2QuotaConfig: {\n        description: \"Configuration related to quotas.\",\n        properties: {\n          signUpQuotaConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2TemporaryQuota\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2RequestLogging: {\n        description: \"Configuration for logging requests made to this project to Stackdriver Logging\",\n        properties: {\n          enabled: {\n            description: \"Whether logging is enabled for this project or not.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2SendEmail: {\n        description: \"Options for email sending.\",\n        properties: {\n          callbackUri: {\n            description: \"action url in email template.\",\n            type: \"string\"\n          },\n          changeEmailTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\"\n          },\n          dnsInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DnsInfo\"\n          },\n          legacyResetPasswordTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\"\n          },\n          method: {\n            description: \"The method used for sending an email.\",\n            enum: [\"METHOD_UNSPECIFIED\", \"DEFAULT\", \"CUSTOM_SMTP\"],\n            type: \"string\"\n          },\n          resetPasswordTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\"\n          },\n          revertSecondFactorAdditionTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\"\n          },\n          smtp: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Smtp\"\n          },\n          verifyEmailTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2SendSms: {\n        description: \"Options for SMS sending.\",\n        properties: {\n          smsTemplate: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SmsTemplate\"\n          },\n          useDeviceLocale: {\n            description: \"Whether to use the accept_language header for SMS.\",\n            type: \"boolean\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2SignInConfig: {\n        description: \"Configuration related to local sign in methods.\",\n        properties: {\n          allowDuplicateEmails: {\n            description: \"Whether to allow more than one account to have the same email.\",\n            type: \"boolean\"\n          },\n          anonymous: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Anonymous\"\n          },\n          email: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Email\"\n          },\n          hashConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2HashConfig\"\n          },\n          phoneNumber: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2PhoneNumber\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2SmsTemplate: {\n        description: \"The template to use when sending an SMS.\",\n        properties: {\n          content: {\n            description: \"Output only. The SMS's content. Can contain the following placeholders which will be replaced with the appropriate values: %APP_NAME% - For Android or iOS apps, the app's display name. For web apps, the domain hosting the application. %LOGIN_CODE% - The OOB code being sent in the SMS.\",\n            readOnly: true,\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Smtp: {\n        description: \"Configuration for SMTP relay\",\n        properties: {\n          host: {\n            description: \"SMTP relay host\",\n            type: \"string\"\n          },\n          password: {\n            description: \"SMTP relay password\",\n            type: \"string\"\n          },\n          port: {\n            description: \"SMTP relay port\",\n            format: \"int32\",\n            type: \"integer\"\n          },\n          securityMode: {\n            description: \"SMTP security mode.\",\n            enum: [\"SECURITY_MODE_UNSPECIFIED\", \"SSL\", \"START_TLS\"],\n            type: \"string\"\n          },\n          senderEmail: {\n            description: \"Sender email for the SMTP relay\",\n            type: \"string\"\n          },\n          username: {\n            description: \"SMTP relay username\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2SpCertificate: {\n        description: \"The SP's certificate data for IDP to verify the SAMLRequest generated by the SP.\",\n        properties: {\n          expiresAt: {\n            description: \"Timestamp of the cert expiration instance.\",\n            format: \"google-datetime\",\n            type: \"string\"\n          },\n          x509Certificate: {\n            description: \"Self-signed public certificate.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2SpConfig: {\n        description: \"The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.\",\n        properties: {\n          callbackUri: {\n            description: \"Callback URI where responses from IDP are handled.\",\n            type: \"string\"\n          },\n          spCertificates: {\n            description: \"Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SpCertificate\"\n            },\n            readOnly: true,\n            type: \"array\"\n          },\n          spEntityId: {\n            description: \"Unique identifier for all SAML entities.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2TemporaryQuota: {\n        description: \"Temporary quota increase / decrease\",\n        properties: {\n          quota: {\n            description: \"Corresponds to the 'refill_token_count' field in QuotaServer config\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          quotaDuration: {\n            description: \"How long this quota will be active for\",\n            format: \"google-duration\",\n            type: \"string\"\n          },\n          startTime: {\n            description: \"When this quota will take affect\",\n            format: \"google-datetime\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Tenant: {\n        description: \"A Tenant contains configuration for the tenant in a multi-tenant project.\",\n        properties: {\n          allowPasswordSignup: {\n            description: \"Whether to allow email/password user authentication.\",\n            type: \"boolean\"\n          },\n          disableAuth: {\n            description: \"Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.\",\n            type: \"boolean\"\n          },\n          displayName: {\n            description: \"Display name of the tenant.\",\n            type: \"string\"\n          },\n          enableAnonymousUser: {\n            description: \"Whether to enable anonymous user authentication.\",\n            type: \"boolean\"\n          },\n          enableEmailLinkSignin: {\n            description: \"Whether to enable email link user authentication.\",\n            type: \"boolean\"\n          },\n          hashConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2HashConfig\"\n          },\n          inheritance: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Inheritance\"\n          },\n          mfaConfig: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig\"\n          },\n          name: {\n            description: 'Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"',\n            readOnly: true,\n            type: \"string\"\n          },\n          testPhoneNumbers: {\n            additionalProperties: {\n              type: \"string\"\n            },\n            description: \"A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).\",\n            type: \"object\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitAdminV2Trigger: {\n        description: \"Synchronous Cloud Function with HTTP Trigger\",\n        properties: {\n          functionUri: {\n            description: \"HTTP URI trigger for the Cloud Function.\",\n            type: \"string\"\n          },\n          updateTime: {\n            description: \"When the trigger was changed.\",\n            format: \"google-datetime\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2AutoRetrievalInfo: {\n        description: \"The information required to auto-retrieve an SMS.\",\n        properties: {\n          appSignatureHash: {\n            description: \"The Android app's signature hash for Google Play Service's SMS Retriever API.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest: {\n        description: \"Finishes enrolling a second factor for the user.\",\n        properties: {\n          displayName: {\n            description: \"Display name which is entered by users to distinguish between different second factors with same type or different type.\",\n            type: \"string\"\n          },\n          idToken: {\n            description: \"Required. ID token.\",\n            type: \"string\"\n          },\n          phoneVerificationInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse: {\n        description: \"FinalizeMfaEnrollment response.\",\n        properties: {\n          idToken: {\n            description: \"ID token updated to reflect MFA enrollment.\",\n            type: \"string\"\n          },\n          phoneAuthInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo\"\n          },\n          refreshToken: {\n            description: \"Refresh token updated to reflect MFA enrollment.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo: {\n        description: \"Phone Verification info for a FinalizeMfa request.\",\n        properties: {\n          androidVerificationProof: {\n            description: 'Android only. Uses for \"instant\" phone number verification though GmsCore.',\n            type: \"string\"\n          },\n          code: {\n            description: \"User-entered verification code.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"Required if Android verification proof is presented.\",\n            type: \"string\"\n          },\n          sessionInfo: {\n            description: \"An opaque string that represents the enrollment session.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo: {\n        description: \"Phone Verification info for a FinalizeMfa response.\",\n        properties: {\n          androidVerificationProof: {\n            description: \"Android only. Long-lived replacement for valid code tied to android device.\",\n            type: \"string\"\n          },\n          androidVerificationProofExpireTime: {\n            description: \"Android only. Expiration time of verification proof in seconds.\",\n            format: \"google-datetime\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"For Android verification proof.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest: {\n        description: \"Finalizes sign-in by verifying MFA challenge.\",\n        properties: {\n          mfaPendingCredential: {\n            description: \"Required. Pending credential from first factor sign-in.\",\n            type: \"string\"\n          },\n          phoneVerificationInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse: {\n        description: \"FinalizeMfaSignIn response.\",\n        properties: {\n          idToken: {\n            description: \"ID token for the authenticated user.\",\n            type: \"string\"\n          },\n          phoneAuthInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo\"\n          },\n          refreshToken: {\n            description: \"Refresh token for the authenticated user.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest: {\n        description: \"Sends MFA enrollment verification SMS for a user.\",\n        properties: {\n          idToken: {\n            description: \"Required. User's ID token.\",\n            type: \"string\"\n          },\n          phoneEnrollmentInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse: {\n        description: \"StartMfaEnrollment response.\",\n        properties: {\n          phoneSessionInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo: {\n        description: \"App Verification info for a StartMfa request.\",\n        properties: {\n          autoRetrievalInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2AutoRetrievalInfo\"\n          },\n          iosReceipt: {\n            description: \"iOS only. Receipt of successful app token validation with APNS.\",\n            type: \"string\"\n          },\n          iosSecret: {\n            description: \"iOS only. Secret delivered to iOS app via APNS.\",\n            type: \"string\"\n          },\n          phoneNumber: {\n            description: \"Required for enrollment. Phone number to be enrolled as MFA.\",\n            type: \"string\"\n          },\n          recaptchaToken: {\n            description: \"Web only. Recaptcha solution.\",\n            type: \"string\"\n          },\n          safetyNetToken: {\n            description: \"Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo: {\n        description: \"Phone Verification info for a StartMfa response.\",\n        properties: {\n          sessionInfo: {\n            description: \"An opaque string that represents the enrollment session.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2StartMfaSignInRequest: {\n        description: \"Starts multi-factor sign-in by sending the multi-factor auth challenge.\",\n        properties: {\n          mfaEnrollmentId: {\n            description: \"Required. MFA enrollment id from the user's list of current MFA enrollments.\",\n            type: \"string\"\n          },\n          mfaPendingCredential: {\n            description: \"Required. Pending credential from first factor sign-in.\",\n            type: \"string\"\n          },\n          phoneSignInInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2StartMfaSignInResponse: {\n        description: \"StartMfaSignIn response.\",\n        properties: {\n          phoneResponseInfo: {\n            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2WithdrawMfaRequest: {\n        description: \"Withdraws MFA.\",\n        properties: {\n          idToken: {\n            description: \"Required. User's ID token.\",\n            type: \"string\"\n          },\n          mfaEnrollmentId: {\n            description: \"Required. MFA enrollment id from a current MFA enrollment.\",\n            type: \"string\"\n          },\n          tenantId: {\n            description: \"The ID of the Identity Platform tenant that the user unenrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleCloudIdentitytoolkitV2WithdrawMfaResponse: {\n        description: \"Withdraws MultiFactorAuth response.\",\n        properties: {\n          idToken: {\n            description: \"ID token updated to reflect removal of the second factor.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"Refresh token updated to reflect removal of the second factor.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1AuditConfig: {\n        description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.',\n        properties: {\n          auditLogConfigs: {\n            description: \"The configuration for logging of each type of permission.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleIamV1AuditLogConfig\"\n            },\n            type: \"array\"\n          },\n          service: {\n            description: \"Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1AuditLogConfig: {\n        description: 'Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables \\'DATA_READ\\' and \\'DATA_WRITE\\' logging, while exempting jose@example.com from DATA_READ logging.',\n        properties: {\n          exemptedMembers: {\n            description: \"Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          logType: {\n            description: \"The log type that this config enables.\",\n            enum: [\"LOG_TYPE_UNSPECIFIED\", \"ADMIN_READ\", \"DATA_WRITE\", \"DATA_READ\"],\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1Binding: {\n        description: \"Associates `members`, or principals, with a `role`.\",\n        properties: {\n          condition: {\n            $ref: \"#/components/schemas/GoogleTypeExpr\"\n          },\n          members: {\n            description: \"Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. \",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          },\n          role: {\n            description: \"Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1GetIamPolicyRequest: {\n        description: \"Request message for `GetIamPolicy` method.\",\n        properties: {\n          options: {\n            $ref: \"#/components/schemas/GoogleIamV1GetPolicyOptions\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1GetPolicyOptions: {\n        description: \"Encapsulates settings provided to GetIamPolicy.\",\n        properties: {\n          requestedPolicyVersion: {\n            description: \"Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\",\n            format: \"int32\",\n            type: \"integer\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1Policy: {\n        description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp(\\'2020-10-01T00:00:00.000Z\\')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(\\'2020-10-01T00:00:00.000Z\\') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).',\n        properties: {\n          auditConfigs: {\n            description: \"Specifies cloud audit logging configuration for this policy.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleIamV1AuditConfig\"\n            },\n            type: \"array\"\n          },\n          bindings: {\n            description: \"Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.\",\n            items: {\n              $ref: \"#/components/schemas/GoogleIamV1Binding\"\n            },\n            type: \"array\"\n          },\n          etag: {\n            description: \"`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.\",\n            format: \"byte\",\n            type: \"string\"\n          },\n          version: {\n            description: \"Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\",\n            format: \"int32\",\n            type: \"integer\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1SetIamPolicyRequest: {\n        description: \"Request message for `SetIamPolicy` method.\",\n        properties: {\n          policy: {\n            $ref: \"#/components/schemas/GoogleIamV1Policy\"\n          },\n          updateMask: {\n            description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`',\n            format: \"google-fieldmask\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1TestIamPermissionsRequest: {\n        description: \"Request message for `TestIamPermissions` method.\",\n        properties: {\n          permissions: {\n            description: \"The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleIamV1TestIamPermissionsResponse: {\n        description: \"Response message for `TestIamPermissions` method.\",\n        properties: {\n          permissions: {\n            description: \"A subset of `TestPermissionsRequest.permissions` that the caller is allowed.\",\n            items: {\n              type: \"string\"\n            },\n            type: \"array\"\n          }\n        },\n        type: \"object\"\n      },\n      GoogleProtobufEmpty: {\n        description: \"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.\",\n        properties: {},\n        type: \"object\"\n      },\n      GoogleTypeExpr: {\n        description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != \\'private\\' && document.type != \\'internal\\'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"\\'New message received at \\' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.',\n        properties: {\n          description: {\n            description: \"Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.\",\n            type: \"string\"\n          },\n          expression: {\n            description: \"Textual representation of an expression in Common Expression Language syntax.\",\n            type: \"string\"\n          },\n          location: {\n            description: \"Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.\",\n            type: \"string\"\n          },\n          title: {\n            description: \"Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GrantTokenRequest: {\n        properties: {\n          code: {\n            description: \"ID token to exchange for an access token and a refresh token. This field is called `code` to conform with the OAuth 2.0 specification. This field is deprecated and is ignored.\",\n            type: \"string\"\n          },\n          grantType: {\n            description: \"The grant_types that are supported: - `refresh_token` to exchange a Identity Platform refresh_token for Identity Platform id_token/access_token and possibly a new Identity Platform refresh_token.\",\n            type: \"string\"\n          },\n          refreshToken: {\n            description: \"Identity Platform refresh_token. This field is ignored if `grantType` isn't `refresh_token`.\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      GrantTokenResponse: {\n        properties: {\n          access_token: {\n            description: \"DEPRECATED The granted access token.\",\n            type: \"string\"\n          },\n          expires_in: {\n            description: \"Expiration time of `access_token` in seconds.\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          id_token: {\n            description: \"The granted ID token\",\n            type: \"string\"\n          },\n          project_id: {\n            description: \"The client's project number\",\n            format: \"int64\",\n            type: \"string\"\n          },\n          refresh_token: {\n            description: \"The granted refresh token; might be the same as `refreshToken` in the request.\",\n            type: \"string\"\n          },\n          token_type: {\n            description: \"The type of `access_token`. Included to conform with the OAuth 2.0 specification; always `Bearer`.\",\n            type: \"string\"\n          },\n          user_id: {\n            description: \"The local user ID\",\n            type: \"string\"\n          }\n        },\n        type: \"object\"\n      },\n      EmulatorV1ProjectsConfig: {\n        type: \"object\",\n        description: \"Emulator-specific configuration.\",\n        properties: {\n          signIn: {\n            properties: {\n              allowDuplicateEmails: {\n                type: \"boolean\"\n              }\n            },\n            type: \"object\"\n          },\n          usageMode: {\n            enum: [\"USAGE_MODE_UNSPECIFIED\", \"DEFAULT\", \"PASSTHROUGH\"],\n            type: \"string\"\n          }\n        }\n      },\n      EmulatorV1ProjectsOobCodes: {\n        type: \"object\",\n        description: \"Details of all pending confirmation codes.\",\n        properties: {\n          oobCodes: {\n            type: \"array\",\n            items: {\n              type: \"object\",\n              properties: {\n                email: {\n                  type: \"string\"\n                },\n                oobCode: {\n                  type: \"string\"\n                },\n                oobLink: {\n                  type: \"string\"\n                },\n                requestType: {\n                  type: \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      EmulatorV1ProjectsVerificationCodes: {\n        type: \"object\",\n        description: \"Details of all pending verification codes.\",\n        properties: {\n          verificationCodes: {\n            type: \"array\",\n            items: {\n              type: \"object\",\n              properties: {\n                code: {\n                  type: \"string\"\n                },\n                phoneNumber: {\n                  type: \"string\"\n                },\n                sessionInfo: {\n                  type: \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    parameters: {\n      access_token: {\n        name: \"access_token\",\n        in: \"query\",\n        description: \"OAuth access token.\",\n        schema: {\n          type: \"string\"\n        }\n      },\n      alt: {\n        name: \"alt\",\n        in: \"query\",\n        description: \"Data format for response.\",\n        schema: {\n          type: \"string\",\n          enum: [\"json\", \"media\", \"proto\"],\n          default: \"json\"\n        }\n      },\n      callback: {\n        name: \"callback\",\n        in: \"query\",\n        description: \"JSONP\",\n        schema: {\n          type: \"string\"\n        }\n      },\n      fields: {\n        name: \"fields\",\n        in: \"query\",\n        description: \"Selector specifying which fields to include in a partial response.\",\n        schema: {\n          type: \"string\"\n        }\n      },\n      oauth_token: {\n        name: \"oauth_token\",\n        in: \"query\",\n        description: \"OAuth 2.0 token for the current user.\",\n        schema: {\n          type: \"string\"\n        }\n      },\n      prettyPrint: {\n        name: \"prettyPrint\",\n        in: \"query\",\n        description: \"Returns response with indentations and line breaks.\",\n        schema: {\n          type: \"boolean\",\n          default: true\n        }\n      },\n      quotaUser: {\n        name: \"quotaUser\",\n        in: \"query\",\n        description: \"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\",\n        schema: {\n          type: \"string\"\n        }\n      },\n      uploadType: {\n        name: \"uploadType\",\n        in: \"query\",\n        description: 'Legacy upload protocol for media (e.g. \"media\", \"multipart\").',\n        schema: {\n          type: \"string\"\n        }\n      },\n      upload_protocol: {\n        name: \"upload_protocol\",\n        in: \"query\",\n        description: 'Upload protocol for media (e.g. \"raw\", \"multipart\").',\n        schema: {\n          type: \"string\"\n        }\n      }\n    },\n    requestBodies: {\n      GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1SignUpRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1DeleteAccountRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1UploadAccountRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UploadAccountRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1GetAccountInfoRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1GetOobCodeRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1SetAccountInfoRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitV1QueryUserInfoRequest: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitAdminV2Tenant: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\"\n            }\n          }\n        }\n      },\n      GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig: {\n        content: {\n          \"application/json\": {\n            schema: {\n              $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\"\n            }\n          }\n        }\n      }\n    },\n    securitySchemes: {\n      Oauth2: {\n        type: \"oauth2\",\n        description: \"Oauth 2.0 implicit authentication\",\n        flows: {\n          implicit: {\n            authorizationUrl: \"https://accounts.google.com/o/oauth2/auth\",\n            scopes: {\n              \"https://www.googleapis.com/auth/cloud-platform\": \"See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\",\n              \"https://www.googleapis.com/auth/firebase\": \"View and administer all your Firebase data and settings\"\n            }\n          },\n          authorizationCode: {\n            authorizationUrl: \"https://accounts.google.com/o/oauth2/auth\",\n            tokenUrl: \"https://accounts.google.com/o/oauth2/token\",\n            scopes: {\n              \"https://www.googleapis.com/auth/cloud-platform\": \"See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\",\n              \"https://www.googleapis.com/auth/firebase\": \"View and administer all your Firebase data and settings\"\n            }\n          }\n        }\n      },\n      apiKey: {\n        type: \"apiKey\",\n        name: \"key\",\n        in: \"query\",\n        description: \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\"\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/emulator/auth/apiSpec.js"],"names":["Object","defineProperty","exports","value","default","openapi","info","title","description","contact","name","url","version","license","termsOfService","servers","externalDocs","tags","paths","post","operationId","responses","content","schema","$ref","requestBody","security","Oauth2","apiKey","parameters","in","required","type","get","patch","delete","components","schemas","GoogleCloudIdentitytoolkitV1Argon2Parameters","properties","associatedData","format","hashLengthBytes","hashType","enum","iterations","memoryCostKib","parallelism","GoogleCloudIdentitytoolkitV1AutoRetrievalInfo","appSignatureHash","GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest","force","localIds","items","tenantId","GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse","errors","GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo","index","localId","message","GoogleCloudIdentitytoolkitV1CreateAuthUriRequest","appId","authFlowType","context","continueUri","customParameter","additionalProperties","hostedDomain","identifier","oauthConsumerKey","oauthScope","openidRealm","otaApp","providerId","sessionId","GoogleCloudIdentitytoolkitV1CreateAuthUriResponse","allProviders","authUri","captchaRequired","forExistingProvider","kind","registered","signinMethods","GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest","idToken","validDuration","GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse","sessionCookie","GoogleCloudIdentitytoolkitV1DeleteAccountRequest","delegatedProjectNumber","targetProjectId","GoogleCloudIdentitytoolkitV1DeleteAccountResponse","GoogleCloudIdentitytoolkitV1DownloadAccountResponse","nextPageToken","users","GoogleCloudIdentitytoolkitV1EmailTemplate","body","customized","disabled","from","fromDisplayName","fromLocalPart","locale","replyTo","subject","GoogleCloudIdentitytoolkitV1ErrorInfo","GoogleCloudIdentitytoolkitV1FederatedUserIdentifier","rawId","GoogleCloudIdentitytoolkitV1GetAccountInfoRequest","email","federatedUserId","initialEmail","phoneNumber","GoogleCloudIdentitytoolkitV1GetAccountInfoResponse","GoogleCloudIdentitytoolkitV1GetOobCodeRequest","androidInstallApp","androidMinimumVersion","androidPackageName","canHandleCodeInApp","captchaResp","challenge","continueUrl","dynamicLinkDomain","iOSAppStoreId","iOSBundleId","newEmail","requestType","returnOobLink","userIp","GoogleCloudIdentitytoolkitV1GetOobCodeResponse","oobCode","oobLink","GoogleCloudIdentitytoolkitV1GetProjectConfigResponse","allowPasswordUser","authorizedDomains","changeEmailTemplate","dynamicLinksDomain","enableAnonymousUser","idpConfig","legacyResetPasswordTemplate","projectId","resetPasswordTemplate","revertSecondFactorAdditionTemplate","useEmailSending","verifyEmailTemplate","GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse","recaptchaSiteKey","recaptchaStoken","GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse","keys","GoogleCloudIdentitytoolkitV1IdpConfig","clientId","enabled","experimentPercent","provider","secret","whitelistedAudiences","GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest","rpId","samlAppEntityId","GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse","acsEndpoint","firstName","isNewUser","lastName","relayState","samlResponse","GoogleCloudIdentitytoolkitV1MfaEnrollment","displayName","enrolledAt","mfaEnrollmentId","phoneInfo","unobfuscatedPhoneInfo","readOnly","GoogleCloudIdentitytoolkitV1MfaFactor","GoogleCloudIdentitytoolkitV1MfaInfo","enrollments","GoogleCloudIdentitytoolkitV1OpenIdConnectKey","alg","e","kid","kty","n","use","GoogleCloudIdentitytoolkitV1ProviderUserInfo","federatedId","photoUrl","screenName","GoogleCloudIdentitytoolkitV1QueryUserInfoRequest","expression","limit","offset","order","returnUserInfo","sortBy","GoogleCloudIdentitytoolkitV1QueryUserInfoResponse","recordsCount","userInfo","GoogleCloudIdentitytoolkitV1ResetPasswordRequest","newPassword","oldPassword","GoogleCloudIdentitytoolkitV1ResetPasswordResponse","mfaInfo","GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest","autoRetrievalInfo","iosReceipt","iosSecret","recaptchaToken","safetyNetToken","GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse","sessionInfo","GoogleCloudIdentitytoolkitV1SetAccountInfoRequest","captchaChallenge","captchaResponse","createdAt","customAttributes","deleteAttribute","deleteProvider","disableUser","emailVerified","instanceId","lastLoginAt","linkProviderUserInfo","mfa","password","returnSecureToken","upgradeToFederatedLogin","validSince","GoogleCloudIdentitytoolkitV1SetAccountInfoResponse","expiresIn","passwordHash","providerUserInfo","refreshToken","GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest","token","GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse","GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest","GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse","mfaPendingCredential","GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest","playerId","publicKeyUrl","salt","signature","timestamp","GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse","GoogleCloudIdentitytoolkitV1SignInWithIdpRequest","autoCreate","pendingIdToken","pendingToken","postBody","requestUri","returnIdpCredential","returnRefreshToken","GoogleCloudIdentitytoolkitV1SignInWithIdpResponse","dateOfBirth","emailRecycled","errorMessage","fullName","inputEmail","language","needConfirmation","needEmail","nickName","oauthAccessToken","oauthAuthorizationCode","oauthExpireIn","oauthIdToken","oauthRefreshToken","oauthTokenSecret","originalEmail","rawUserInfo","timeZone","verifiedProvider","GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest","GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse","profilePicture","GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest","code","operation","temporaryProof","verificationProof","GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse","temporaryProofExpiresIn","verificationProofExpiresIn","GoogleCloudIdentitytoolkitV1SignUpRequest","GoogleCloudIdentitytoolkitV1SignUpResponse","GoogleCloudIdentitytoolkitV1SqlExpression","userId","GoogleCloudIdentitytoolkitV1UploadAccountRequest","allowOverwrite","argon2Parameters","blockSize","cpuMemCost","dkLen","hashAlgorithm","memoryCost","parallelization","passwordHashOrder","rounds","saltSeparator","sanityCheck","signerKey","GoogleCloudIdentitytoolkitV1UploadAccountResponse","error","GoogleCloudIdentitytoolkitV1UserInfo","customAuth","emailLinkSignin","lastRefreshAt","passwordUpdatedAt","rawPassword","GoogleCloudIdentitytoolkitV1VerifyIosClientRequest","appToken","isSandbox","GoogleCloudIdentitytoolkitV1VerifyIosClientResponse","receipt","suggestedTimeout","GoogleCloudIdentitytoolkitAdminV2Anonymous","GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig","bundleIds","codeFlowConfig","GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig","forwardInboundCredentials","triggers","GoogleCloudIdentitytoolkitAdminV2ClientConfig","firebaseSubdomain","permissions","GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig","keyId","privateKey","teamId","GoogleCloudIdentitytoolkitAdminV2Config","blockingFunctions","client","monitoring","multiTenant","notification","quota","signIn","subtype","GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp","idpId","GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig","appleSignInConfig","clientSecret","GoogleCloudIdentitytoolkitAdminV2DnsInfo","customDomain","customDomainState","domainVerificationRequestTime","pendingCustomDomain","useCustomDomain","GoogleCloudIdentitytoolkitAdminV2Email","passwordRequired","GoogleCloudIdentitytoolkitAdminV2EmailTemplate","bodyFormat","senderDisplayName","senderLocalPart","GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials","accessToken","GoogleCloudIdentitytoolkitAdminV2HashConfig","algorithm","GoogleCloudIdentitytoolkitAdminV2IdpCertificate","x509Certificate","GoogleCloudIdentitytoolkitAdminV2IdpConfig","idpCertificates","idpEntityId","signRequest","ssoUrl","GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig","spConfig","GoogleCloudIdentitytoolkitAdminV2Inheritance","emailSendingConfig","GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse","defaultSupportedIdpConfigs","GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse","defaultSupportedIdps","GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse","inboundSamlConfigs","GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse","oauthIdpConfigs","GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse","tenants","GoogleCloudIdentitytoolkitAdminV2MonitoringConfig","requestLogging","GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig","enabledProviders","state","GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig","allowTenants","defaultTenantLocation","GoogleCloudIdentitytoolkitAdminV2NotificationConfig","defaultLocale","sendEmail","sendSms","GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig","issuer","responseType","GoogleCloudIdentitytoolkitAdminV2OAuthResponseType","GoogleCloudIdentitytoolkitAdminV2Permissions","disabledUserDeletion","disabledUserSignup","GoogleCloudIdentitytoolkitAdminV2PhoneNumber","testPhoneNumbers","GoogleCloudIdentitytoolkitAdminV2QuotaConfig","signUpQuotaConfig","GoogleCloudIdentitytoolkitAdminV2RequestLogging","GoogleCloudIdentitytoolkitAdminV2SendEmail","callbackUri","dnsInfo","method","smtp","GoogleCloudIdentitytoolkitAdminV2SendSms","smsTemplate","useDeviceLocale","GoogleCloudIdentitytoolkitAdminV2SignInConfig","allowDuplicateEmails","anonymous","hashConfig","GoogleCloudIdentitytoolkitAdminV2SmsTemplate","GoogleCloudIdentitytoolkitAdminV2Smtp","host","port","securityMode","senderEmail","username","GoogleCloudIdentitytoolkitAdminV2SpCertificate","expiresAt","GoogleCloudIdentitytoolkitAdminV2SpConfig","spCertificates","spEntityId","GoogleCloudIdentitytoolkitAdminV2TemporaryQuota","quotaDuration","startTime","GoogleCloudIdentitytoolkitAdminV2Tenant","allowPasswordSignup","disableAuth","enableEmailLinkSignin","inheritance","mfaConfig","GoogleCloudIdentitytoolkitAdminV2Trigger","functionUri","updateTime","GoogleCloudIdentitytoolkitV2AutoRetrievalInfo","GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest","phoneVerificationInfo","GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse","phoneAuthInfo","GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo","androidVerificationProof","GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo","androidVerificationProofExpireTime","GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest","GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse","GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest","phoneEnrollmentInfo","GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse","phoneSessionInfo","GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo","GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo","GoogleCloudIdentitytoolkitV2StartMfaSignInRequest","phoneSignInInfo","GoogleCloudIdentitytoolkitV2StartMfaSignInResponse","phoneResponseInfo","GoogleCloudIdentitytoolkitV2WithdrawMfaRequest","GoogleCloudIdentitytoolkitV2WithdrawMfaResponse","GoogleIamV1AuditConfig","auditLogConfigs","service","GoogleIamV1AuditLogConfig","exemptedMembers","logType","GoogleIamV1Binding","condition","members","role","GoogleIamV1GetIamPolicyRequest","options","GoogleIamV1GetPolicyOptions","requestedPolicyVersion","GoogleIamV1Policy","auditConfigs","bindings","etag","GoogleIamV1SetIamPolicyRequest","policy","updateMask","GoogleIamV1TestIamPermissionsRequest","GoogleIamV1TestIamPermissionsResponse","GoogleProtobufEmpty","GoogleTypeExpr","location","GrantTokenRequest","grantType","GrantTokenResponse","access_token","expires_in","id_token","project_id","refresh_token","token_type","user_id","EmulatorV1ProjectsConfig","usageMode","EmulatorV1ProjectsOobCodes","oobCodes","EmulatorV1ProjectsVerificationCodes","verificationCodes","alt","callback","fields","oauth_token","prettyPrint","quotaUser","uploadType","upload_protocol","requestBodies","securitySchemes","flows","implicit","authorizationUrl","scopes","authorizationCode","tokenUrl"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB;AACdC,EAAAA,OAAO,EAAE,OADK;AAEdC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,sBADL;AAEFC,IAAAA,WAAW,EAAE,0FAFX;AAGFC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KAHP;AAIFC,IAAAA,OAAO,EAAE,IAJP;AAKFC,IAAAA,OAAO,EAAE;AACLH,MAAAA,IAAI,EAAE,kCADD;AAELC,MAAAA,GAAG,EAAE;AAFA,KALP;AASFG,IAAAA,cAAc,EAAE;AATd,GAFQ;AAadC,EAAAA,OAAO,EAAE,CAAC;AAAEJ,IAAAA,GAAG,EAAE;AAAP,GAAD,CAbK;AAcdK,EAAAA,YAAY,EAAE;AAAEL,IAAAA,GAAG,EAAE;AAAP,GAdA;AAedM,EAAAA,IAAI,EAAE,CACF;AAAEP,IAAAA,IAAI,EAAE;AAAR,GADE,EAEF;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAFE,EAGF;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAHE,EAIF;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAJE,EAKF;AAAEA,IAAAA,IAAI,EAAE;AAAR,GALE,EAMF;AAAEA,IAAAA,IAAI,EAAE;AAAR,GANE,CAfQ;AAuBdQ,EAAAA,KAAK,EAAE;AACH,kCAA8B;AAC1BC,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,6fADX;AAEFY,QAAAA,WAAW,EAAE,wCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADoB;AA4B1BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5Bc,KAD3B;AAyCH,2BAAuB;AACnBL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2BADX;AAEFY,QAAAA,WAAW,EAAE,iCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAfX;AAkBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlBR;AAmBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnBJ,OADa;AAsBnBY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtBO,KAzCpB;AA2EH,sCAAkC;AAC9BL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,cADX;AAEFY,QAAAA,WAAW,EAAE,4CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADwB;AA4B9BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BkB,KA3E/B;AAmHH,2BAAuB;AACnBL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wOADX;AAEFY,QAAAA,WAAW,EAAE,iCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAfX;AAkBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlBR;AAmBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnBJ,OADa;AAsBnBY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtBO,KAnHpB;AAqJH,kCAA8B;AAC1BL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,4OADX;AAEFY,QAAAA,WAAW,EAAE,wCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADoB;AA4B1BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5Bc,KArJ3B;AA6LH,gCAA4B;AACxBL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,yKADX;AAEFY,QAAAA,WAAW,EAAE,sCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAfX;AAkBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlBR;AAmBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnBJ,OADkB;AAsBxBY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtBY,KA7LzB;AA+NH,yCAAqC;AACjCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,uMADX;AAEFY,QAAAA,WAAW,EAAE,+CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD2B;AA4BjCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BqB,KA/NlC;AAuQH,0CAAsC;AAClCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,gUADX;AAEFY,QAAAA,WAAW,EAAE,gDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD4B;AA4BlCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BsB,KAvQnC;AA+SH,wCAAoC;AAChCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,uZADX;AAEFY,QAAAA,WAAW,EAAE,8CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD0B;AA4BhCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BoB,KA/SjC;AAuVH,yCAAqC;AACjCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,8YADX;AAEFY,QAAAA,WAAW,EAAE,+CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD2B;AA4BjCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BqB,KAvVlC;AA+XH,kCAA8B;AAC1BL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wzBADX;AAEFY,QAAAA,WAAW,EAAE,wCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADoB;AA4B1BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5Bc,KA/X3B;AAuaH,uCAAmC;AAC/BL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2SADX;AAEFY,QAAAA,WAAW,EAAE,6CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADyB;AA4B/BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BmB,KAvahC;AA+cH,0CAAsC;AAClCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2aADX;AAEFY,QAAAA,WAAW,EAAE,gDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD4B;AA4BlCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BsB,KA/cnC;AAufH,2BAAuB;AACnBL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wdADX;AAEFY,QAAAA,WAAW,EAAE,iCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHT;AAaFC,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAbX;AAgBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAhBR;AAiBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjBJ,OADa;AAoBnBY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AApBO,KAvfpB;AAuhBH,2BAAuB;AACnBL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2KADX;AAEFY,QAAAA,WAAW,EAAE,iCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAfX;AAkBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlBR;AAmBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnBJ,OADa;AAsBnBY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtBO,KAvhBpB;AAyjBH,oCAAgC;AAC5BL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,kjBADX;AAEFY,QAAAA,WAAW,EAAE,0CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADsB;AA4B5BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BgB,KAzjB7B;AAimBH,+CAA2C;AACvCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wdADX;AAEFY,QAAAA,WAAW,EAAE,mCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHT;AAaFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,qUAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAbV;AAsBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAtBX;AAyBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAzBR;AA0BFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA1BJ,OADiC;AA6BvCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA7B2B,KAjmBxC;AA0oBH,0DAAsD;AAClDL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,iJADX;AAEFY,QAAAA,WAAW,EAAE,8CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,oDAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CA3BR;AA4BFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA5BJ,OAD4C;AA+BlDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA/BsC,KA1oBnD;AAqrBH,oDAAgD;AAC5CL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,yFADX;AAEFY,QAAAA,WAAW,EAAE,wCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,sDAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3BR;AAgCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhCJ,OADsC;AAmC5CY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAnCgC,KArrB7C;AAouBH,2DAAuD;AACnDL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,kVADX;AAEFY,QAAAA,WAAW,EAAE,+CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,+EAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3BR;AAgCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhCJ,OAD6C;AAmCnDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAnCuC,KApuBpD;AAmxBH,2DAAuD;AACnDL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,8UADX;AAEFY,QAAAA,WAAW,EAAE,+CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,sLAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3BR;AAgCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhCJ,OAD6C;AAmCnDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAnCuC,KAnxBpD;AAk0BH,wDAAoD;AAChDS,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,wYADZ;AAEDY,QAAAA,WAAW,EAAE,4CAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,0LAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AAAEtB,UAAAA,IAAI,EAAE,wBAAR;AAAkCoB,UAAAA,EAAE,EAAE,OAAtC;AAA+CP,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAvD,SARQ,EASR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,6GAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SATQ,EAeR;AACItB,UAAAA,IAAI,EAAE,eADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,+DAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAfQ,EAqBR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,2IAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SArBQ,CAfX;AA2CDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3CT;AAgDDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhDL,OAD2C;AAmDhDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAnDoC,KAl0BjD;AAi4BH,sDAAkD;AAC9CL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2BADX;AAEFY,QAAAA,WAAW,EAAE,0CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,6IAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CA3BR;AA4BFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA5BJ,OADwC;AA+B9CY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA/BkC,KAj4B/C;AA46BH,sDAAkD;AAC9CL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wOADX;AAEFY,QAAAA,WAAW,EAAE,0CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,8SAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CA3BR;AA4BFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA5BJ,OADwC;AA+B9CY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA/BkC,KA56B/C;AAu9BH,qDAAiD;AAC7CL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,yFADX;AAEFY,QAAAA,WAAW,EAAE,yCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,sDAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3BR;AAgCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhCJ,OADuC;AAmC7CY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAnCiC,KAv9B9C;AAsgCH,2DAAuD;AACnDL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,yKADX;AAEFY,QAAAA,WAAW,EAAE,+CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,2OAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CA3BR;AA4BFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA5BJ,OAD6C;AA+BnDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA/BuC,KAtgCpD;AAijCH,sDAAkD;AAC9CL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2KADX;AAEFY,QAAAA,WAAW,EAAE,0CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,6RAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CA3BR;AA4BFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA5BJ,OADwC;AA+B9CY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA/BkC,KAjjC/C;AA4lCH,kEAA8D;AAC1DL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wdADX;AAEFY,QAAAA,WAAW,EAAE,2CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHT;AAaFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,qUAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,kJAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAbV;AA6BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA7BX;AAgCFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAhCR;AAiCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjCJ,OADoD;AAoC1DY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AApC8C,KA5lC3D;AA4oCH,6EAAyE;AACrEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,iJADX;AAEFY,QAAAA,WAAW,EAAE,sDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,oDAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,uEAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlCR;AAmCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCJ,OAD+D;AAsCrEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtCyD,KA5oCtE;AA8rCH,8EAA0E;AACtEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,kVADX;AAEFY,QAAAA,WAAW,EAAE,uDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,+EAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,gEAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAlCR;AAuCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAvCJ,OADgE;AA0CtEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA1C0D,KA9rCvE;AAovCH,8EAA0E;AACtEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,8UADX;AAEFY,QAAAA,WAAW,EAAE,uDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,sLAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,uKAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAlCR;AAuCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAvCJ,OADgE;AA0CtEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA1C0D,KApvCvE;AA0yCH,2EAAuE;AACnES,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,wYADZ;AAEDY,QAAAA,WAAW,EAAE,oDAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,0LAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,2IAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,EAeR;AAAEtB,UAAAA,IAAI,EAAE,wBAAR;AAAkCoB,UAAAA,EAAE,EAAE,OAAtC;AAA+CP,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAvD,SAfQ,EAgBR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,6GAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAhBQ,EAsBR;AACItB,UAAAA,IAAI,EAAE,eADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,+DAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAtBQ,CAfX;AA4CDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA5CT;AAiDDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjDL,OAD8D;AAoDnEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AApDuD,KA1yCpE;AA02CH,yEAAqE;AACjEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2BADX;AAEFY,QAAAA,WAAW,EAAE,kDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,6IAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,iPAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlCR;AAmCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCJ,OAD2D;AAsCjEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtCqD,KA12ClE;AA45CH,yEAAqE;AACjEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wOADX;AAEFY,QAAAA,WAAW,EAAE,kDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,8SAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,wHAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlCR;AAmCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCJ,OAD2D;AAsCjEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtCqD,KA55ClE;AA88CH,wEAAoE;AAChEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,yFADX;AAEFY,QAAAA,WAAW,EAAE,iDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,sDAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,qDAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAlCR;AAuCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAvCJ,OAD0D;AA0ChEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA1CoD,KA98CjE;AAogDH,8EAA0E;AACtEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,yKADX;AAEFY,QAAAA,WAAW,EAAE,uDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,2OAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,uEAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlCR;AAmCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCJ,OADgE;AAsCtEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtC0D,KApgDvE;AAsjDH,yEAAqE;AACjEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,2KADX;AAEFY,QAAAA,WAAW,EAAE,kDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,iBADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,6RAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SADQ,EAQR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGItB,UAAAA,WAAW,EAAE,8KAHjB;AAIIuB,UAAAA,QAAQ,EAAE,IAJd;AAKIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AALZ,SARQ,CAfV;AA+BFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BX;AAkCFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAlCR;AAmCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCJ,OAD2D;AAsCjEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAtCqD,KAtjDlE;AAwmDH,oBAAgB;AACZS,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,uKADZ;AAEDY,QAAAA,WAAW,EAAE,6BAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,oBADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0NAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SADQ,EAOR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,yLAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAPQ,EAaR;AACItB,UAAAA,IAAI,EAAE,wBADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,uHAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAbQ,EAmBR;AACItB,UAAAA,IAAI,EAAE,eADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,sRAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAnBQ,EAyBR;AACItB,UAAAA,IAAI,EAAE,aADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,iKAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAzBQ,EA+BR;AACItB,UAAAA,IAAI,EAAE,eADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,uHAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SA/BQ,EAqCR;AACItB,UAAAA,IAAI,EAAE,mBADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0CAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SArCQ,EA2CR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,kKAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SA3CQ,CAfX;AAiEDN,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAjET;AAkEDX,QAAAA,IAAI,EAAE,CAAC,IAAD;AAlEL,OADO;AAqEZY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AArEA,KAxmDb;AAyrDH,2BAAuB;AACnBS,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,8DADZ;AAEDY,QAAAA,WAAW,EAAE,oCAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAfT;AAgBDX,QAAAA,IAAI,EAAE,CAAC,IAAD;AAhBL,OADc;AAmBnBY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAnBO,KAzrDpB;AAwtDH,mCAA+B;AAC3BS,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,yKADZ;AAEDY,QAAAA,WAAW,EAAE,4CAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDP,QAAAA,IAAI,EAAE,CAAC,IAAD,CAfL;AAgBDS,QAAAA,QAAQ,EAAE,CAAC;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAAD;AAhBT,OADsB;AAmB3BC,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAnBe,KAxtD5B;AAuvDH,2CAAuC;AACnCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,kDADX;AAEFY,QAAAA,WAAW,EAAE,iDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD6B;AA4BnCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BuB,KAvvDpC;AA+xDH,wCAAoC;AAChCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,uGADX;AAEFY,QAAAA,WAAW,EAAE,8CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD0B;AA4BhCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BoB,KA/xDjC;AAu0DH,2CAAuC;AACnCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,4EADX;AAEFY,QAAAA,WAAW,EAAE,iDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OAD6B;AA4BnCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BuB,KAv0DpC;AA+2DH,uCAAmC;AAC/BL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,iDADX;AAEFY,QAAAA,WAAW,EAAE,6CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADyB;AA4B/BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BmB,KA/2DhC;AAu5DH,oCAAgC;AAC5BL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,yBADX;AAEFY,QAAAA,WAAW,EAAE,0CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADA,SAfX;AAwBFE,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAxBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADsB;AA4B5BY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BgB,KAv5D7B;AA+7DH,gCAA4B;AACxBS,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,kCADZ;AAEDY,QAAAA,WAAW,EAAE,2CAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AACInB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,wCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SADQ,EAOR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0EAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAPQ,CAfX;AA6BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA7BT;AAkCDX,QAAAA,IAAI,EAAE,CAAC,sBAAD;AAlCL,OADmB;AAqCxBY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AArCY,KA/7DzB;AAg/DH,6CAAyC;AACrCS,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,qDADZ;AAEDY,QAAAA,WAAW,EAAE,oCAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHV;AAaDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,CAbX;AAgBDN,QAAAA,QAAQ,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SAAD,EAAiE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjE,CAhBT;AAiBDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjBL,OADgC;AAoBrCiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,mDADV;AAEHY,QAAAA,WAAW,EAAE,uCAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHR;AAaHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,qPAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,CAbT;AAsBHP,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AADA,SAtBV;AA6BHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA7BP;AAkCHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAlCH,OApB8B;AAwDrCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAxDyB,KAh/DtC;AAojEH,iEAA6D;AACzDL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,+EADX;AAEFY,QAAAA,WAAW,EAAE,4DAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,OADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,iHAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3BR;AAgCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhCJ,OADmD;AAmCzDgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,gFADZ;AAEDY,QAAAA,WAAW,EAAE,0DAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,wCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,EAQR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0EAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SARQ,CAfX;AA8BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA9BT;AAmCDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCL,OAnCoD;AAwEzDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAxE6C,KApjE1D;AAwoEH,gGAA4F;AACxFW,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,+EADT;AAEJY,QAAAA,WAAW,EAAE,4DAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHP;AASJK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,8BADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGIC,UAAAA,QAAQ,EAAE,IAHd;AAIIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,CATR;AAkBJN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAlBN;AAuBJX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAvBF,OADgF;AA0BxFgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,iFADZ;AAEDY,QAAAA,WAAW,EAAE,yDAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,8BADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGIC,UAAAA,QAAQ,EAAE,IAHd;AAIIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,CAfX;AAwBDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAxBT;AA6BDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA7BL,OA1BmF;AAyDxFiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,+EADV;AAEHY,QAAAA,WAAW,EAAE,2DAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHR;AAeHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,8BADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGIC,UAAAA,QAAQ,EAAE,IAHd;AAIIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,EAQR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,sKAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SARQ,CAfT;AA8BHP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA9BV;AAiCHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAjCP;AAsCHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAtCH,OAzDiF;AAiGxFY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAjG4E,KAxoEzF;AAqvEH,yDAAqD;AACjDL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,uEADX;AAEFY,QAAAA,WAAW,EAAE,oDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,qBADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,gCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3BR;AAgCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhCJ,OAD2C;AAmCjDgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,uEADZ;AAEDY,QAAAA,WAAW,EAAE,kDAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,wCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,EAQR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0EAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SARQ,CAfX;AA8BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA9BT;AAmCDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCL,OAnC4C;AAwEjDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAxEqC,KArvElD;AAy0EH,gFAA4E;AACxEW,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,uEADT;AAEJY,QAAAA,WAAW,EAAE,oDAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHP;AASJK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,sBAAR;AAAgCoB,UAAAA,EAAE,EAAE,MAApC;AAA4CC,UAAAA,QAAQ,EAAE,IAAtD;AAA4DR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAApE,SAFQ,CATR;AAaJN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAbN;AAkBJX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAlBF,OADgE;AAqBxEgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,yEADZ;AAEDY,QAAAA,WAAW,EAAE,iDAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,sBAAR;AAAgCoB,UAAAA,EAAE,EAAE,MAApC;AAA4CC,UAAAA,QAAQ,EAAE,IAAtD;AAA4DR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAApE,SAFQ,CAfX;AAmBDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAnBT;AAwBDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAxBL,OArBmE;AA+CxEiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,uEADV;AAEHY,QAAAA,WAAW,EAAE,mDAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHR;AAeHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,sBAAR;AAAgCoB,UAAAA,EAAE,EAAE,MAApC;AAA4CC,UAAAA,QAAQ,EAAE,IAAtD;AAA4DR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAApE,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,yNAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CAfT;AAyBHP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAzBV;AA4BHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA5BP;AAiCHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjCH,OA/CiE;AAkFxEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAlF4D,KAz0EzE;AAu6EH,sDAAkD;AAC9CL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,mEADX;AAEFY,QAAAA,WAAW,EAAE,iDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,kBADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,gCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,CAfV;AAwBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAxBX;AA2BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA3BR;AAgCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAhCJ,OADwC;AAmC9CgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,mEADZ;AAEDY,QAAAA,WAAW,EAAE,+CAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,wCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,EAQR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0EAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SARQ,CAfX;AA8BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA9BT;AAmCDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCL,OAnCyC;AAwE9CY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAxEkC,KAv6E/C;AA2/EH,0EAAsE;AAClEW,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,mEADT;AAEJY,QAAAA,WAAW,EAAE,iDAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHP;AASJK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,mBAAR;AAA6BoB,UAAAA,EAAE,EAAE,MAAjC;AAAyCC,UAAAA,QAAQ,EAAE,IAAnD;AAAyDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAjE,SAFQ,CATR;AAaJN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAbN;AAkBJX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAlBF,OAD0D;AAqBlEgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,qEADZ;AAEDY,QAAAA,WAAW,EAAE,8CAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,mBAAR;AAA6BoB,UAAAA,EAAE,EAAE,MAAjC;AAAyCC,UAAAA,QAAQ,EAAE,IAAnD;AAAyDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAjE,SAFQ,CAfX;AAmBDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAnBT;AAwBDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAxBL,OArB6D;AA+ClEiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,mEADV;AAEHY,QAAAA,WAAW,EAAE,gDAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHR;AAeHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,mBAAR;AAA6BoB,UAAAA,EAAE,EAAE,MAAjC;AAAyCC,UAAAA,QAAQ,EAAE,IAAnD;AAAyDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAjE,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,yNAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CAfT;AAyBHP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAzBV;AA4BHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA5BP;AAiCHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjCH,OA/C2D;AAkFlEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAlFsD,KA3/EnE;AAylFH,8CAA0C;AACtCL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,kEADX;AAEFY,QAAAA,WAAW,EAAE,yCAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHT;AAaFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,CAbV;AAgBFP,QAAAA,WAAW,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR,SAhBX;AAiBFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAjBR;AAsBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAtBJ,OADgC;AAyBtCgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,4FADZ;AAEDY,QAAAA,WAAW,EAAE,uCAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,qGAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAFQ,EAQR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,+DAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SARQ,CAfX;AA8BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA9BT;AAmCDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnCL,OAzBiC;AA8DtCY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA9D0B,KAzlFvC;AAmqFH,yDAAqD;AACjDW,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,kEADT;AAEJY,QAAAA,WAAW,EAAE,yCAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHP;AASJK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,CATR;AAaJN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAbN;AAkBJX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAlBF,OADyC;AAqBjDgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,gEADZ;AAEDY,QAAAA,WAAW,EAAE,sCAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHV;AAaDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,CAbX;AAiBDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAjBT;AAsBDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAtBL,OArB4C;AA6CjDiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,oEADV;AAEHY,QAAAA,WAAW,EAAE,wCAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHR;AAaHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,qOAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CAbT;AAuBHP,QAAAA,WAAW,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR,SAvBV;AAwBHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAxBP;AA6BHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA7BH,OA7C0C;AA4EjDY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5EqC,KAnqFlD;AA2vFH,sEAAkE;AAC9DL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,gQADX;AAEFY,QAAAA,WAAW,EAAE,+CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHT;AASFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,CATV;AAaFP,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AADA,SAbX;AAoBFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CApBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADwD;AA4B9DY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BkD,KA3vF/D;AAmyFH,sEAAkE;AAC9DL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,wJADX;AAEFY,QAAAA,WAAW,EAAE,+CAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHT;AASFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,CATV;AAaFP,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AADA,SAbX;AAoBFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CApBR;AAyBFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBJ,OADwD;AA4B9DY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA5BkD,KAnyF/D;AA20FH,4EAAwE;AACpEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,mLADX;AAEFY,QAAAA,WAAW,EAAE,qDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADL;AADF;AAFR;AADE,SAHT;AAaFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,CAbV;AAiBFP,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AADA,SAjBX;AAwBFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAxBR;AA6BFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA7BJ,OAD8D;AAgCpEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AAhCwD,KA30FrE;AAu3FH,oFAAgF;AAC5EL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,+EADX;AAEFY,QAAAA,WAAW,EAAE,oEAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,OADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,iHAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CAfV;AAyBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAzBX;AA4BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA5BR;AAiCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjCJ,OADsE;AAoC5EgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,gFADZ;AAEDY,QAAAA,WAAW,EAAE,kEAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,wCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,EASR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0EAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SATQ,CAfX;AA+BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA/BT;AAoCDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AApCL,OApCuE;AA0E5EY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA1EgE,KAv3F7E;AA68FH,mHAA+G;AAC3GW,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,+EADT;AAEJY,QAAAA,WAAW,EAAE,oEAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHP;AASJK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,8BADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGIC,UAAAA,QAAQ,EAAE,IAHd;AAIIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CATR;AAmBJN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAnBN;AAwBJX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAxBF,OADmG;AA2B3GgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,iFADZ;AAEDY,QAAAA,WAAW,EAAE,iEAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,8BADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGIC,UAAAA,QAAQ,EAAE,IAHd;AAIIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CAfX;AAyBDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAzBT;AA8BDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AA9BL,OA3BsG;AA2D3GiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,+EADV;AAEHY,QAAAA,WAAW,EAAE,mEAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHR;AAeHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,8BADV;AAEIoB,UAAAA,EAAE,EAAE,MAFR;AAGIC,UAAAA,QAAQ,EAAE,IAHd;AAIIR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,EASR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,sKAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SATQ,CAfT;AA+BHP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA/BV;AAkCHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAlCP;AAuCHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAvCH,OA3DoG;AAoG3GY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AApG+F,KA78F5G;AA6jGH,4EAAwE;AACpEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,uEADX;AAEFY,QAAAA,WAAW,EAAE,4DAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,qBADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,gCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CAfV;AAyBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAzBX;AA4BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA5BR;AAiCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjCJ,OAD8D;AAoCpEgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,uEADZ;AAEDY,QAAAA,WAAW,EAAE,0DAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,wCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,EASR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0EAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SATQ,CAfX;AA+BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA/BT;AAoCDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AApCL,OApC+D;AA0EpEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA1EwD,KA7jGrE;AAmpGH,mGAA+F;AAC3FW,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,uEADT;AAEJY,QAAAA,WAAW,EAAE,4DAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHP;AASJK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AAAEtB,UAAAA,IAAI,EAAE,sBAAR;AAAgCoB,UAAAA,EAAE,EAAE,MAApC;AAA4CC,UAAAA,QAAQ,EAAE,IAAtD;AAA4DR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAApE,SAHQ,CATR;AAcJN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAdN;AAmBJX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnBF,OADmF;AAsB3FgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,yEADZ;AAEDY,QAAAA,WAAW,EAAE,yDAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AAAEtB,UAAAA,IAAI,EAAE,sBAAR;AAAgCoB,UAAAA,EAAE,EAAE,MAApC;AAA4CC,UAAAA,QAAQ,EAAE,IAAtD;AAA4DR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAApE,SAHQ,CAfX;AAoBDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CApBT;AAyBDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBL,OAtBsF;AAiD3FiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,uEADV;AAEHY,QAAAA,WAAW,EAAE,2DAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHR;AAeHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AAAEtB,UAAAA,IAAI,EAAE,sBAAR;AAAgCoB,UAAAA,EAAE,EAAE,MAApC;AAA4CC,UAAAA,QAAQ,EAAE,IAAtD;AAA4DR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAApE,SAHQ,EAIR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,yNAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAJQ,CAfT;AA0BHP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA1BV;AA6BHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA7BP;AAkCHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAlCH,OAjDoF;AAqF3FY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AArF+E,KAnpG5F;AAovGH,yEAAqE;AACjEL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,mEADX;AAEFY,QAAAA,WAAW,EAAE,yDAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHT;AAeFK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,kBADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,gCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,CAfV;AAyBFP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SAzBX;AA4BFE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA5BR;AAiCFX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAjCJ,OAD2D;AAoCjEgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,mEADZ;AAEDY,QAAAA,WAAW,EAAE,uDAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AACItB,UAAAA,IAAI,EAAE,UADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,wCAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAHQ,EASR;AACItB,UAAAA,IAAI,EAAE,WADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,0EAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SATQ,CAfX;AA+BDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA/BT;AAoCDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AApCL,OApC4D;AA0EjEY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AA1EqD,KApvGlE;AA00GH,6FAAyF;AACrFW,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,mEADT;AAEJY,QAAAA,WAAW,EAAE,yDAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHP;AASJK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AAAEtB,UAAAA,IAAI,EAAE,mBAAR;AAA6BoB,UAAAA,EAAE,EAAE,MAAjC;AAAyCC,UAAAA,QAAQ,EAAE,IAAnD;AAAyDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAjE,SAHQ,CATR;AAcJN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CAdN;AAmBJX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAnBF,OAD6E;AAsBrFgB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,qEADZ;AAEDY,QAAAA,WAAW,EAAE,sDAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHV;AAeDK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AAAEtB,UAAAA,IAAI,EAAE,mBAAR;AAA6BoB,UAAAA,EAAE,EAAE,MAAjC;AAAyCC,UAAAA,QAAQ,EAAE,IAAnD;AAAyDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAjE,SAHQ,CAfX;AAoBDN,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CApBT;AAyBDX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAzBL,OAtBgF;AAiDrFiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,mEADV;AAEHY,QAAAA,WAAW,EAAE,wDAFV;AAGHC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE;AADF;AADL;AADF;AAFR;AADE,SAHR;AAeHK,QAAAA,UAAU,EAAE,CACR;AAAEnB,UAAAA,IAAI,EAAE,iBAAR;AAA2BoB,UAAAA,EAAE,EAAE,MAA/B;AAAuCC,UAAAA,QAAQ,EAAE,IAAjD;AAAuDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAA/D,SADQ,EAER;AAAEtB,UAAAA,IAAI,EAAE,UAAR;AAAoBoB,UAAAA,EAAE,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE,IAA1C;AAAgDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAxD,SAFQ,EAGR;AAAEtB,UAAAA,IAAI,EAAE,mBAAR;AAA6BoB,UAAAA,EAAE,EAAE,MAAjC;AAAyCC,UAAAA,QAAQ,EAAE,IAAnD;AAAyDR,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAAjE,SAHQ,EAIR;AACItB,UAAAA,IAAI,EAAE,YADV;AAEIoB,UAAAA,EAAE,EAAE,OAFR;AAGItB,UAAAA,WAAW,EAAE,yNAHjB;AAIIe,UAAAA,MAAM,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR;AAJZ,SAJQ,CAfT;AA0BHP,QAAAA,WAAW,EAAE;AACTD,UAAAA,IAAI,EAAE;AADG,SA1BV;AA6BHE,QAAAA,QAAQ,EAAE,CACN;AAAEC,UAAAA,MAAM,EAAE,CAAC,gDAAD;AAAV,SADM,EAEN;AAAEA,UAAAA,MAAM,EAAE,CAAC,0CAAD;AAAV,SAFM,EAGN;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAHM,CA7BP;AAkCHX,QAAAA,IAAI,EAAE,CAAC,UAAD;AAlCH,OAjD8E;AAqFrFY,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ;AArFyE,KA10GtF;AA26GH,iBAAa;AACTL,MAAAA,IAAI,EAAE;AACFX,QAAAA,WAAW,EAAE,gNADX;AAEFY,QAAAA,WAAW,EAAE,mBAFX;AAGFC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,qBAAO;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAT;AAFR;AADE,SAHT;AASFC,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAAEC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AAAV,aADf;AAEL,iDAAqC;AACjCD,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AADyB;AAFhC;AADA,SATX;AAiBFP,QAAAA,IAAI,EAAE,CAAC,aAAD,CAjBJ;AAkBFS,QAAAA,QAAQ,EAAE,CAAC;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAAD;AAlBR,OADG;AAqBTC,MAAAA,UAAU,EAAE,CACR;AAAEL,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,EAKR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALQ,EAMR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANQ,EAOR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPQ,EAQR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OARQ,EASR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OATQ,CArBH;AAgCTT,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD;AAhCA,KA36GV;AA68GH,wDAAoD;AAChDkB,MAAAA,UAAU,EAAE,CACR;AACInB,QAAAA,IAAI,EAAE,iBADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,iEAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OADQ,CADoC;AAUhDjB,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD,CAVuC;AAWhDwB,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,0DADT;AAEJY,QAAAA,WAAW,EAAE,mCAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,kCAAoB;AAAEC,gBAAAA,MAAM,EAAE;AAAES,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAtB;AAFR;AADE,SAHP;AASJN,QAAAA,QAAQ,EAAE,EATN;AAUJT,QAAAA,IAAI,EAAE,CAAC,UAAD;AAVF;AAXwC,KA78GjD;AAq+GH,2EAAuE;AACnEY,MAAAA,UAAU,EAAE,CACR;AACInB,QAAAA,IAAI,EAAE,iBADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,iEAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OADQ,EAQR;AACItB,QAAAA,IAAI,EAAE,UADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,2IAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OARQ,CADuD;AAiBnEjB,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD,CAjB0D;AAkBnEwB,MAAAA,MAAM,EAAE;AACJ3B,QAAAA,WAAW,EAAE,0DADT;AAEJY,QAAAA,WAAW,EAAE,mCAFT;AAGJC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AAAE,kCAAoB;AAAEC,gBAAAA,MAAM,EAAE;AAAES,kBAAAA,IAAI,EAAE;AAAR;AAAV;AAAtB;AAFR;AADE,SAHP;AASJN,QAAAA,QAAQ,EAAE,EATN;AAUJT,QAAAA,IAAI,EAAE,CAAC,UAAD;AAVF;AAlB2D,KAr+GpE;AAogHH,sDAAkD;AAC9CY,MAAAA,UAAU,EAAE,CACR;AACInB,QAAAA,IAAI,EAAE,iBADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,gEAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OADQ,CADkC;AAU9CjB,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD,CAVqC;AAW9CsB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,sDADZ;AAEDY,QAAAA,WAAW,EAAE,8BAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,kCAAoB;AAChBC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAFR;AADE,SAHV;AAaDE,QAAAA,QAAQ,EAAE,EAbT;AAcDT,QAAAA,IAAI,EAAE,CAAC,UAAD;AAdL,OAXyC;AA2B9CiB,MAAAA,KAAK,EAAE;AACH1B,QAAAA,WAAW,EAAE,yDADV;AAEHY,QAAAA,WAAW,EAAE,iCAFV;AAGHK,QAAAA,WAAW,EAAE;AACTH,UAAAA,OAAO,EAAE;AACL,gCAAoB;AAChBC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AADA,SAHV;AAUHH,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,kCAAoB;AAChBC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAFR;AADE,SAVR;AAoBHE,QAAAA,QAAQ,EAAE,EApBP;AAqBHT,QAAAA,IAAI,EAAE,CAAC,UAAD;AArBH;AA3BuC,KApgH/C;AAujHH,wDAAoD;AAChDY,MAAAA,UAAU,EAAE,CACR;AACInB,QAAAA,IAAI,EAAE,iBADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,4EAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OADQ,CADoC;AAUhDjB,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD,CAVuC;AAWhDsB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,sDADZ;AAEDY,QAAAA,WAAW,EAAE,iCAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,kCAAoB;AAChBC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAFR;AADE,SAHV;AAaDE,QAAAA,QAAQ,EAAE,EAbT;AAcDT,QAAAA,IAAI,EAAE,CAAC,UAAD;AAdL;AAX2C,KAvjHjD;AAmlHH,2EAAuE;AACnEY,MAAAA,UAAU,EAAE,CACR;AACInB,QAAAA,IAAI,EAAE,iBADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,4EAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OADQ,EAQR;AACItB,QAAAA,IAAI,EAAE,UADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,2IAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OARQ,CADuD;AAiBnEjB,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD,CAjB0D;AAkBnEsB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,sDADZ;AAEDY,QAAAA,WAAW,EAAE,iCAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,kCAAoB;AAChBC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAFR;AADE,SAHV;AAaDE,QAAAA,QAAQ,EAAE,EAbT;AAcDT,QAAAA,IAAI,EAAE,CAAC,UAAD;AAdL;AAlB8D,KAnlHpE;AAsnHH,iEAA6D;AACzDY,MAAAA,UAAU,EAAE,CACR;AACInB,QAAAA,IAAI,EAAE,iBADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,4EAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OADQ,CAD6C;AAUzDjB,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD,CAVgD;AAWzDsB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,4DADZ;AAEDY,QAAAA,WAAW,EAAE,0CAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,kCAAoB;AAChBC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAFR;AADE,SAHV;AAaDE,QAAAA,QAAQ,EAAE,EAbT;AAcDT,QAAAA,IAAI,EAAE,CAAC,UAAD;AAdL;AAXoD,KAtnH1D;AAkpHH,oFAAgF;AAC5EY,MAAAA,UAAU,EAAE,CACR;AACInB,QAAAA,IAAI,EAAE,iBADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,4EAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OADQ,EAQR;AACItB,QAAAA,IAAI,EAAE,UADV;AAEIoB,QAAAA,EAAE,EAAE,MAFR;AAGItB,QAAAA,WAAW,EAAE,2IAHjB;AAIIuB,QAAAA,QAAQ,EAAE,IAJd;AAKIR,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AALZ,OARQ,CADgE;AAiB5EjB,MAAAA,OAAO,EAAE,CAAC;AAAEJ,QAAAA,GAAG,EAAE;AAAP,OAAD,CAjBmE;AAkB5EsB,MAAAA,GAAG,EAAE;AACDzB,QAAAA,WAAW,EAAE,4DADZ;AAEDY,QAAAA,WAAW,EAAE,0CAFZ;AAGDC,QAAAA,SAAS,EAAE;AACP,eAAK;AACDb,YAAAA,WAAW,EAAE,qBADZ;AAEDc,YAAAA,OAAO,EAAE;AACL,kCAAoB;AAChBC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAFR;AADE,SAHV;AAaDE,QAAAA,QAAQ,EAAE,EAbT;AAcDT,QAAAA,IAAI,EAAE,CAAC,UAAD;AAdL;AAlBuE;AAlpH7E,GAvBO;AA6sHdmB,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE;AACLC,MAAAA,4CAA4C,EAAE;AAC1C9B,QAAAA,WAAW,EAAE,8CAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACRC,UAAAA,cAAc,EAAE;AACZhC,YAAAA,WAAW,EAAE,uKADD;AAEZiC,YAAAA,MAAM,EAAE,MAFI;AAGZT,YAAAA,IAAI,EAAE;AAHM,WADR;AAMRU,UAAAA,eAAe,EAAE;AACblC,YAAAA,WAAW,EAAE,+EADA;AAEbiC,YAAAA,MAAM,EAAE,OAFK;AAGbT,YAAAA,IAAI,EAAE;AAHO,WANT;AAWRW,UAAAA,QAAQ,EAAE;AACNnC,YAAAA,WAAW,EAAE,8CADP;AAENoC,YAAAA,IAAI,EAAE,CAAC,uBAAD,EAA0B,UAA1B,EAAsC,WAAtC,EAAmD,UAAnD,CAFA;AAGNZ,YAAAA,IAAI,EAAE;AAHA,WAXF;AAgBRa,UAAAA,UAAU,EAAE;AACRrC,YAAAA,WAAW,EAAE,6EADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE,WAhBJ;AAqBRc,UAAAA,aAAa,EAAE;AACXtC,YAAAA,WAAW,EAAE,2DADF;AAEXiC,YAAAA,MAAM,EAAE,OAFG;AAGXT,YAAAA,IAAI,EAAE;AAHK,WArBP;AA0BRe,UAAAA,WAAW,EAAE;AACTvC,YAAAA,WAAW,EAAE,iGADJ;AAETiC,YAAAA,MAAM,EAAE,OAFC;AAGTT,YAAAA,IAAI,EAAE;AAHG,WA1BL;AA+BRpB,UAAAA,OAAO,EAAE;AACLJ,YAAAA,WAAW,EAAE,oFADR;AAELoC,YAAAA,IAAI,EAAE,CAAC,qBAAD,EAAwB,YAAxB,EAAsC,YAAtC,CAFD;AAGLZ,YAAAA,IAAI,EAAE;AAHD;AA/BD,SAF8B;AAuC1CA,QAAAA,IAAI,EAAE;AAvCoC,OADzC;AA0CLgB,MAAAA,6CAA6C,EAAE;AAC3CxC,QAAAA,WAAW,EAAE,mDAD8B;AAE3C+B,QAAAA,UAAU,EAAE;AACRU,UAAAA,gBAAgB,EAAE;AACdzC,YAAAA,WAAW,EAAE,+EADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ;AADV,SAF+B;AAQ3CA,QAAAA,IAAI,EAAE;AARqC,OA1C1C;AAoDLkB,MAAAA,sDAAsD,EAAE;AACpD1C,QAAAA,WAAW,EAAE,0CADuC;AAEpD+B,QAAAA,UAAU,EAAE;AACRY,UAAAA,KAAK,EAAE;AACH3C,YAAAA,WAAW,EAAE,wLADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WADC;AAKRoB,UAAAA,QAAQ,EAAE;AACN5C,YAAAA,WAAW,EAAE,2CADP;AAEN6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFD;AAGNA,YAAAA,IAAI,EAAE;AAHA,WALF;AAURsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,uKADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAVF,SAFwC;AAiBpDA,QAAAA,IAAI,EAAE;AAjB8C,OApDnD;AAuELuB,MAAAA,uDAAuD,EAAE;AACrD/C,QAAAA,WAAW,EAAE,0CADwC;AAErD+B,QAAAA,UAAU,EAAE;AACRiB,UAAAA,MAAM,EAAE;AACJhD,YAAAA,WAAW,EAAE,0DADT;AAEJ6C,YAAAA,KAAK,EAAE;AACH7B,cAAAA,IAAI,EAAE;AADH,aAFH;AAKJQ,YAAAA,IAAI,EAAE;AALF;AADA,SAFyC;AAWrDA,QAAAA,IAAI,EAAE;AAX+C,OAvEpD;AAoFLyB,MAAAA,gDAAgD,EAAE;AAC9CjD,QAAAA,WAAW,EAAE,8CADiC;AAE9C+B,QAAAA,UAAU,EAAE;AACRmB,UAAAA,KAAK,EAAE;AACHlD,YAAAA,WAAW,EAAE,gEADV;AAEHiC,YAAAA,MAAM,EAAE,OAFL;AAGHT,YAAAA,IAAI,EAAE;AAHH,WADC;AAMR2B,UAAAA,OAAO,EAAE;AAAEnD,YAAAA,WAAW,EAAE,4BAAf;AAA6CwB,YAAAA,IAAI,EAAE;AAAnD,WAND;AAOR4B,UAAAA,OAAO,EAAE;AAAEpD,YAAAA,WAAW,EAAE,yBAAf;AAA0CwB,YAAAA,IAAI,EAAE;AAAhD;AAPD,SAFkC;AAW9CA,QAAAA,IAAI,EAAE;AAXwC,OApF7C;AAiGL6B,MAAAA,gDAAgD,EAAE;AAC9CrD,QAAAA,WAAW,EAAE,oCADiC;AAE9C+B,QAAAA,UAAU,EAAE;AACRuB,UAAAA,KAAK,EAAE;AAAE9B,YAAAA,IAAI,EAAE;AAAR,WADC;AAER+B,UAAAA,YAAY,EAAE;AACVvD,YAAAA,WAAW,EAAE,iNADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAFN;AAMRgC,UAAAA,OAAO,EAAE;AACLxD,YAAAA,WAAW,EAAE,4HADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAND;AAURiC,UAAAA,WAAW,EAAE;AACTzD,YAAAA,WAAW,EAAE,iIADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAVL;AAcRkC,UAAAA,eAAe,EAAE;AACbC,YAAAA,oBAAoB,EAAE;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aADT;AAEbxB,YAAAA,WAAW,EAAE,0TAFA;AAGbwB,YAAAA,IAAI,EAAE;AAHO,WAdT;AAmBRoC,UAAAA,YAAY,EAAE;AACV5D,YAAAA,WAAW,EAAE,2HADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAnBN;AAuBRqC,UAAAA,UAAU,EAAE;AACR7D,YAAAA,WAAW,EAAE,2WADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAvBJ;AA2BRsC,UAAAA,gBAAgB,EAAE;AAAEtC,YAAAA,IAAI,EAAE;AAAR,WA3BV;AA4BRuC,UAAAA,UAAU,EAAE;AACR/D,YAAAA,WAAW,EAAE,+NADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WA5BJ;AAgCRwC,UAAAA,WAAW,EAAE;AAAExC,YAAAA,IAAI,EAAE;AAAR,WAhCL;AAiCRyC,UAAAA,MAAM,EAAE;AAAEzC,YAAAA,IAAI,EAAE;AAAR,WAjCA;AAkCR0C,UAAAA,UAAU,EAAE;AACRlE,YAAAA,WAAW,EAAE,scADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAlCJ;AAsCR2C,UAAAA,SAAS,EAAE;AACPnE,YAAAA,WAAW,EAAE,8KADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAtCH;AA0CRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,gNADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AA1CF,SAFkC;AAiD9CA,QAAAA,IAAI,EAAE;AAjDwC,OAjG7C;AAoJL4C,MAAAA,iDAAiD,EAAE;AAC/CpE,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACRsC,UAAAA,YAAY,EAAE;AAAExB,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAAT;AAA6BA,YAAAA,IAAI,EAAE;AAAnC,WADN;AAER8C,UAAAA,OAAO,EAAE;AACLtE,YAAAA,WAAW,EAAE,0GADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAFD;AAMR+C,UAAAA,eAAe,EAAE;AACbvE,YAAAA,WAAW,EAAE,wKADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WANT;AAURgD,UAAAA,mBAAmB,EAAE;AACjBxE,YAAAA,WAAW,EAAE,uJADI;AAEjBwB,YAAAA,IAAI,EAAE;AAFW,WAVb;AAcRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WAdE;AAeR0C,UAAAA,UAAU,EAAE;AACRlE,YAAAA,WAAW,EAAE,gDADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAfJ;AAmBRkD,UAAAA,UAAU,EAAE;AACR1E,YAAAA,WAAW,EAAE,2HADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAnBJ;AAuBR2C,UAAAA,SAAS,EAAE;AACPnE,YAAAA,WAAW,EAAE,2IADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAvBH;AA2BRmD,UAAAA,aAAa,EAAE;AACX3E,YAAAA,WAAW,EAAE,qNADF;AAEX6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFI;AAGXA,YAAAA,IAAI,EAAE;AAHK;AA3BP,SAFmC;AAmC/CA,QAAAA,IAAI,EAAE;AAnCyC,OApJ9C;AAyLLoD,MAAAA,sDAAsD,EAAE;AACpD5E,QAAAA,WAAW,EAAE,0CADuC;AAEpD+B,QAAAA,UAAU,EAAE;AACR8C,UAAAA,OAAO,EAAE;AAAE7E,YAAAA,WAAW,EAAE,+CAAf;AAAgEwB,YAAAA,IAAI,EAAE;AAAtE,WADD;AAERsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,uEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAFF;AAMRsD,UAAAA,aAAa,EAAE;AACX9E,YAAAA,WAAW,EAAE,6IADF;AAEXiC,YAAAA,MAAM,EAAE,OAFG;AAGXT,YAAAA,IAAI,EAAE;AAHK;AANP,SAFwC;AAcpDA,QAAAA,IAAI,EAAE;AAd8C,OAzLnD;AAyMLuD,MAAAA,uDAAuD,EAAE;AACrD/E,QAAAA,WAAW,EAAE,2CADwC;AAErD+B,QAAAA,UAAU,EAAE;AACRiD,UAAAA,aAAa,EAAE;AACXhF,YAAAA,WAAW,EAAE,qKADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK;AADP,SAFyC;AAQrDA,QAAAA,IAAI,EAAE;AAR+C,OAzMpD;AAmNLyD,MAAAA,gDAAgD,EAAE;AAC9CjF,QAAAA,WAAW,EAAE,oCADiC;AAE9C+B,QAAAA,UAAU,EAAE;AACRmD,UAAAA,sBAAsB,EAAE;AAAEjD,YAAAA,MAAM,EAAE,OAAV;AAAmBT,YAAAA,IAAI,EAAE;AAAzB,WADhB;AAERqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,ySADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAFD;AAMR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,uQADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAND;AAUR2D,UAAAA,eAAe,EAAE;AACbnF,YAAAA,WAAW,EAAE,6IADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WAVT;AAcRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,iPADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAdF,SAFkC;AAqB9CA,QAAAA,IAAI,EAAE;AArBwC,OAnN7C;AA0OL4D,MAAAA,iDAAiD,EAAE;AAC/CpF,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AAAE0C,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR;AAAR,SAFmC;AAG/CA,QAAAA,IAAI,EAAE;AAHyC,OA1O9C;AA+OL6D,MAAAA,mDAAmD,EAAE;AACjDrF,QAAAA,WAAW,EAAE,uCADoC;AAEjD+B,QAAAA,UAAU,EAAE;AACR0C,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WADE;AAER8D,UAAAA,aAAa,EAAE;AACXtF,YAAAA,WAAW,EAAE,iJADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WAFP;AAMR+D,UAAAA,KAAK,EAAE;AACHvF,YAAAA,WAAW,EAAE,qFADV;AAEH6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFJ;AAGHQ,YAAAA,IAAI,EAAE;AAHH;AANC,SAFqC;AAcjDA,QAAAA,IAAI,EAAE;AAd2C,OA/OhD;AA+PLgE,MAAAA,yCAAyC,EAAE;AACvCxF,QAAAA,WAAW,EAAE,gBAD0B;AAEvC+B,QAAAA,UAAU,EAAE;AACR0D,UAAAA,IAAI,EAAE;AAAEzF,YAAAA,WAAW,EAAE,YAAf;AAA6BwB,YAAAA,IAAI,EAAE;AAAnC,WADE;AAERkE,UAAAA,UAAU,EAAE;AACR1F,YAAAA,WAAW,EAAE,yDADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAFJ;AAMRmE,UAAAA,QAAQ,EAAE;AACN3F,YAAAA,WAAW,EAAE,6EADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WANF;AAURS,UAAAA,MAAM,EAAE;AACJjC,YAAAA,WAAW,EAAE,mBADT;AAEJoC,YAAAA,IAAI,EAAE,CAAC,+BAAD,EAAkC,WAAlC,EAA+C,MAA/C,CAFF;AAGJZ,YAAAA,IAAI,EAAE;AAHF,WAVA;AAeRoE,UAAAA,IAAI,EAAE;AAAE5F,YAAAA,WAAW,EAAE,2BAAf;AAA4CwB,YAAAA,IAAI,EAAE;AAAlD,WAfE;AAgBRqE,UAAAA,eAAe,EAAE;AAAE7F,YAAAA,WAAW,EAAE,mBAAf;AAAoCwB,YAAAA,IAAI,EAAE;AAA1C,WAhBT;AAiBRsE,UAAAA,aAAa,EAAE;AAAE9F,YAAAA,WAAW,EAAE,4BAAf;AAA6CwB,YAAAA,IAAI,EAAE;AAAnD,WAjBP;AAkBRuE,UAAAA,MAAM,EAAE;AACJ/F,YAAAA,WAAW,EAAE,0GADT;AAEJwB,YAAAA,IAAI,EAAE;AAFF,WAlBA;AAsBRwE,UAAAA,OAAO,EAAE;AAAEhG,YAAAA,WAAW,EAAE,kBAAf;AAAmCwB,YAAAA,IAAI,EAAE;AAAzC,WAtBD;AAuBRyE,UAAAA,OAAO,EAAE;AAAEjG,YAAAA,WAAW,EAAE,sBAAf;AAAuCwB,YAAAA,IAAI,EAAE;AAA7C;AAvBD,SAF2B;AA2BvCA,QAAAA,IAAI,EAAE;AA3BiC,OA/PtC;AA4RL0E,MAAAA,qCAAqC,EAAE;AACnClG,QAAAA,WAAW,EAAE,+EADsB;AAEnC+B,QAAAA,UAAU,EAAE;AACRmB,UAAAA,KAAK,EAAE;AACHlD,YAAAA,WAAW,EAAE,uDADV;AAEHiC,YAAAA,MAAM,EAAE,OAFL;AAGHT,YAAAA,IAAI,EAAE;AAHH,WADC;AAMR4B,UAAAA,OAAO,EAAE;AAAEpD,YAAAA,WAAW,EAAE,wBAAf;AAAyCwB,YAAAA,IAAI,EAAE;AAA/C;AAND,SAFuB;AAUnCA,QAAAA,IAAI,EAAE;AAV6B,OA5RlC;AAwSL2E,MAAAA,mDAAmD,EAAE;AACjDnG,QAAAA,WAAW,EAAE,oDADoC;AAEjD+B,QAAAA,UAAU,EAAE;AACRmC,UAAAA,UAAU,EAAE;AACRlE,YAAAA,WAAW,EAAE,8WADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WADJ;AAKR4E,UAAAA,KAAK,EAAE;AACHpG,YAAAA,WAAW,EAAE,6FADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH;AALC,SAFqC;AAYjDA,QAAAA,IAAI,EAAE;AAZ2C,OAxShD;AAsTL6E,MAAAA,iDAAiD,EAAE;AAC/CrG,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACRmD,UAAAA,sBAAsB,EAAE;AAAEjD,YAAAA,MAAM,EAAE,OAAV;AAAmBT,YAAAA,IAAI,EAAE;AAAzB,WADhB;AAER8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,6TADV;AAEH6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFJ;AAGHA,YAAAA,IAAI,EAAE;AAHH,WAFC;AAOR+E,UAAAA,eAAe,EAAE;AACbvG,YAAAA,WAAW,EAAE,qPADA;AAEb6C,YAAAA,KAAK,EAAE;AACH7B,cAAAA,IAAI,EAAE;AADH,aAFM;AAKbQ,YAAAA,IAAI,EAAE;AALO,WAPT;AAcRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,8GADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAdD;AAkBRgF,UAAAA,YAAY,EAAE;AACVxG,YAAAA,WAAW,EAAE,6TADH;AAEV6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFG;AAGVA,YAAAA,IAAI,EAAE;AAHI,WAlBN;AAuBR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,8NADR;AAEL6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLA,YAAAA,IAAI,EAAE;AAHD,WAvBD;AA4BRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,kLADJ;AAET6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFE;AAGTA,YAAAA,IAAI,EAAE;AAHG,WA5BL;AAiCR2D,UAAAA,eAAe,EAAE;AACbnF,YAAAA,WAAW,EAAE,8SADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WAjCT;AAqCRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,wHADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AArCF,SAFmC;AA4C/CA,QAAAA,IAAI,EAAE;AA5CyC,OAtT9C;AAoWLkF,MAAAA,kDAAkD,EAAE;AAChD1G,QAAAA,WAAW,EAAE,sCADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACR0C,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WADE;AAER+D,UAAAA,KAAK,EAAE;AACHvF,YAAAA,WAAW,EAAE,qFADV;AAEH6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFJ;AAGHQ,YAAAA,IAAI,EAAE;AAHH;AAFC,SAFoC;AAUhDA,QAAAA,IAAI,EAAE;AAV0C,OApW/C;AAgXLmF,MAAAA,6CAA6C,EAAE;AAC3C3G,QAAAA,WAAW,EAAE,iCAD8B;AAE3C+B,QAAAA,UAAU,EAAE;AACR6E,UAAAA,iBAAiB,EAAE;AACf5G,YAAAA,WAAW,EAAE,6KADE;AAEfwB,YAAAA,IAAI,EAAE;AAFS,WADX;AAKRqF,UAAAA,qBAAqB,EAAE;AACnB7G,YAAAA,WAAW,EAAE,+MADM;AAEnBwB,YAAAA,IAAI,EAAE;AAFa,WALf;AASRsF,UAAAA,kBAAkB,EAAE;AAChB9G,YAAAA,WAAW,EAAE,mTADG;AAEhBwB,YAAAA,IAAI,EAAE;AAFU,WATZ;AAaRuF,UAAAA,kBAAkB,EAAE;AAChB/G,YAAAA,WAAW,EAAE,qSADG;AAEhBwB,YAAAA,IAAI,EAAE;AAFU,WAbZ;AAiBRwF,UAAAA,WAAW,EAAE;AACThH,YAAAA,WAAW,EAAE,8MADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAjBL;AAqBRyF,UAAAA,SAAS,EAAE;AAAEzF,YAAAA,IAAI,EAAE;AAAR,WArBH;AAsBR0F,UAAAA,WAAW,EAAE;AACTlH,YAAAA,WAAW,EAAE,sIADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAtBL;AA0BR2F,UAAAA,iBAAiB,EAAE;AACfnH,YAAAA,WAAW,EAAE,mXADE;AAEfwB,YAAAA,IAAI,EAAE;AAFS,WA1BX;AA8BR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,4LADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WA9BC;AAkCR4F,UAAAA,aAAa,EAAE;AACXpH,YAAAA,WAAW,EAAE,uKADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WAlCP;AAsCR6F,UAAAA,WAAW,EAAE;AACTrH,YAAAA,WAAW,EAAE,sJADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAtCL;AA0CRqD,UAAAA,OAAO,EAAE;AAAErD,YAAAA,IAAI,EAAE;AAAR,WA1CD;AA2CR8F,UAAAA,QAAQ,EAAE;AAAE9F,YAAAA,IAAI,EAAE;AAAR,WA3CF;AA4CR+F,UAAAA,WAAW,EAAE;AACTvH,YAAAA,WAAW,EAAE,+PADJ;AAEToC,YAAAA,IAAI,EAAE,CACF,0BADE,EAEF,gBAFE,EAGF,iBAHE,EAIF,kBAJE,EAKF,cALE,EAMF,eANE,EAOF,cAPE,EAQF,yBARE,EASF,+BATE,CAFG;AAaTZ,YAAAA,IAAI,EAAE;AAbG,WA5CL;AA2DRgG,UAAAA,aAAa,EAAE;AACXxH,YAAAA,WAAW,EAAE,gZADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WA3DP;AA+DR2D,UAAAA,eAAe,EAAE;AACbnF,YAAAA,WAAW,EAAE,2OADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WA/DT;AAmERsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,uEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAnEF;AAuERiG,UAAAA,MAAM,EAAE;AACJzH,YAAAA,WAAW,EAAE,0EADT;AAEJwB,YAAAA,IAAI,EAAE;AAFF;AAvEA,SAF+B;AA8E3CA,QAAAA,IAAI,EAAE;AA9EqC,OAhX1C;AAgcLkG,MAAAA,8CAA8C,EAAE;AAC5C1H,QAAAA,WAAW,EAAE,kCAD+B;AAE5C+B,QAAAA,UAAU,EAAE;AACRuE,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,6FADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WADC;AAKRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WALE;AAMRmG,UAAAA,OAAO,EAAE;AACL3H,YAAAA,WAAW,EAAE,kEADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAND;AAURoG,UAAAA,OAAO,EAAE;AACL5H,YAAAA,WAAW,EAAE,yNADR;AAELwB,YAAAA,IAAI,EAAE;AAFD;AAVD,SAFgC;AAiB5CA,QAAAA,IAAI,EAAE;AAjBsC,OAhc3C;AAmdLqG,MAAAA,oDAAoD,EAAE;AAClD7H,QAAAA,WAAW,EAAE,wCADqC;AAElD+B,QAAAA,UAAU,EAAE;AACR+F,UAAAA,iBAAiB,EAAE;AACf9H,YAAAA,WAAW,EAAE,kHADE;AAEfwB,YAAAA,IAAI,EAAE;AAFS,WADX;AAKRJ,UAAAA,MAAM,EAAE;AACJpB,YAAAA,WAAW,EAAE,6FADT;AAEJwB,YAAAA,IAAI,EAAE;AAFF,WALA;AASRuG,UAAAA,iBAAiB,EAAE;AACf/H,YAAAA,WAAW,EAAE,yCADE;AAEf6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFQ;AAGfA,YAAAA,IAAI,EAAE;AAHS,WATX;AAcRwG,UAAAA,mBAAmB,EAAE;AACjBhH,YAAAA,IAAI,EAAE;AADW,WAdb;AAiBRiH,UAAAA,kBAAkB,EAAE;AAChBjI,YAAAA,WAAW,EAAE,yFADG;AAEhBwB,YAAAA,IAAI,EAAE;AAFU,WAjBZ;AAqBR0G,UAAAA,mBAAmB,EAAE;AACjBlI,YAAAA,WAAW,EAAE,0GADI;AAEjBwB,YAAAA,IAAI,EAAE;AAFW,WArBb;AAyBR2G,UAAAA,SAAS,EAAE;AACPnI,YAAAA,WAAW,EAAE,+FADN;AAEP6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFA;AAGPQ,YAAAA,IAAI,EAAE;AAHC,WAzBH;AA8BR4G,UAAAA,2BAA2B,EAAE;AACzBpH,YAAAA,IAAI,EAAE;AADmB,WA9BrB;AAiCRqH,UAAAA,SAAS,EAAE;AACPrI,YAAAA,WAAW,EAAE,gDADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAjCH;AAqCR8G,UAAAA,qBAAqB,EAAE;AACnBtH,YAAAA,IAAI,EAAE;AADa,WArCf;AAwCRuH,UAAAA,kCAAkC,EAAE;AAChCvH,YAAAA,IAAI,EAAE;AAD0B,WAxC5B;AA2CRwH,UAAAA,eAAe,EAAE;AACbxI,YAAAA,WAAW,EAAE,qGADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WA3CT;AA+CRiH,UAAAA,mBAAmB,EAAE;AACjBzH,YAAAA,IAAI,EAAE;AADW;AA/Cb,SAFsC;AAqDlDQ,QAAAA,IAAI,EAAE;AArD4C,OAndjD;AA0gBLkH,MAAAA,qDAAqD,EAAE;AACnD1I,QAAAA,WAAW,EAAE,yCADsC;AAEnD+B,QAAAA,UAAU,EAAE;AACR0C,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WADE;AAERmH,UAAAA,gBAAgB,EAAE;AACd3I,YAAAA,WAAW,EAAE,iFADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ,WAFV;AAMRoH,UAAAA,eAAe,EAAE;AAAEpH,YAAAA,IAAI,EAAE;AAAR;AANT,SAFuC;AAUnDA,QAAAA,IAAI,EAAE;AAV6C,OA1gBlD;AAshBLqH,MAAAA,8DAA8D,EAAE;AAC5D7I,QAAAA,WAAW,EAAE,kDAD+C;AAE5D+B,QAAAA,UAAU,EAAE;AACR+G,UAAAA,IAAI,EAAE;AACF9I,YAAAA,WAAW,EAAE,oHADX;AAEF6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFL;AAGFQ,YAAAA,IAAI,EAAE;AAHJ;AADE,SAFgD;AAS5DA,QAAAA,IAAI,EAAE;AATsD,OAthB3D;AAiiBLuH,MAAAA,qCAAqC,EAAE;AACnC/I,QAAAA,WAAW,EAAE,iCADsB;AAEnC+B,QAAAA,UAAU,EAAE;AACRiH,UAAAA,QAAQ,EAAE;AAAEhJ,YAAAA,WAAW,EAAE,mBAAf;AAAoCwB,YAAAA,IAAI,EAAE;AAA1C,WADF;AAERyH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,uDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAFD;AAMR0H,UAAAA,iBAAiB,EAAE;AACflJ,YAAAA,WAAW,EAAE,+EADE;AAEfiC,YAAAA,MAAM,EAAE,OAFO;AAGfT,YAAAA,IAAI,EAAE;AAHS,WANX;AAWR2H,UAAAA,QAAQ,EAAE;AACNnJ,YAAAA,WAAW,EAAE,gCADP;AAENoC,YAAAA,IAAI,EAAE,CACF,sBADE,EAEF,QAFE,EAGF,QAHE,EAIF,UAJE,EAKF,QALE,EAMF,SANE,EAOF,OAPE,EAQF,KARE,EASF,QATE,EAUF,mBAVE,EAWF,UAXE,EAYF,iBAZE,CAFA;AAgBNZ,YAAAA,IAAI,EAAE;AAhBA,WAXF;AA6BR4H,UAAAA,MAAM,EAAE;AAAEpJ,YAAAA,WAAW,EAAE,uBAAf;AAAwCwB,YAAAA,IAAI,EAAE;AAA9C,WA7BA;AA8BR6H,UAAAA,oBAAoB,EAAE;AAClBrJ,YAAAA,WAAW,EAAE,4CADK;AAElB6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFW;AAGlBA,YAAAA,IAAI,EAAE;AAHY;AA9Bd,SAFuB;AAsCnCA,QAAAA,IAAI,EAAE;AAtC6B,OAjiBlC;AAykBL8H,MAAAA,oDAAoD,EAAE;AAClDtJ,QAAAA,WAAW,EAAE,wCADqC;AAElD+B,QAAAA,UAAU,EAAE;AACR8C,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,+FADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WADD;AAKR+H,UAAAA,IAAI,EAAE;AACFvJ,YAAAA,WAAW,EAAE,yEADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ,WALE;AASRgI,UAAAA,eAAe,EAAE;AACbxJ,YAAAA,WAAW,EAAE,+UADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO;AATT,SAFsC;AAgBlDA,QAAAA,IAAI,EAAE;AAhB4C,OAzkBjD;AA2lBLiI,MAAAA,qDAAqD,EAAE;AACnDzJ,QAAAA,WAAW,EAAE,yCADsC;AAEnD+B,QAAAA,UAAU,EAAE;AACR2H,UAAAA,WAAW,EAAE;AACT1J,YAAAA,WAAW,EAAE,4DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKR8E,UAAAA,KAAK,EAAE;AAAEtG,YAAAA,WAAW,EAAE,oBAAf;AAAqCwB,YAAAA,IAAI,EAAE;AAA3C,WALC;AAMRmI,UAAAA,SAAS,EAAE;AAAE3J,YAAAA,WAAW,EAAE,yBAAf;AAA0CwB,YAAAA,IAAI,EAAE;AAAhD,WANH;AAORoI,UAAAA,SAAS,EAAE;AACP5J,YAAAA,WAAW,EAAE,yDADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAPH;AAWRqI,UAAAA,QAAQ,EAAE;AAAE7J,YAAAA,WAAW,EAAE,wBAAf;AAAyCwB,YAAAA,IAAI,EAAE;AAA/C,WAXF;AAYRsI,UAAAA,UAAU,EAAE;AAAE9J,YAAAA,WAAW,EAAE,uBAAf;AAAwCwB,YAAAA,IAAI,EAAE;AAA9C,WAZJ;AAaRuI,UAAAA,YAAY,EAAE;AACV/J,YAAAA,WAAW,EAAE,oDADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AAbN,SAFuC;AAoBnDA,QAAAA,IAAI,EAAE;AApB6C,OA3lBlD;AAinBLwI,MAAAA,yCAAyC,EAAE;AACvChK,QAAAA,WAAW,EAAE,8FAD0B;AAEvC+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,0DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKR0I,UAAAA,UAAU,EAAE;AACRlK,YAAAA,WAAW,EAAE,yDADL;AAERiC,YAAAA,MAAM,EAAE,iBAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE,WALJ;AAUR2I,UAAAA,eAAe,EAAE;AAAEnK,YAAAA,WAAW,EAAE,wBAAf;AAAyCwB,YAAAA,IAAI,EAAE;AAA/C,WAVT;AAWR4I,UAAAA,SAAS,EAAE;AACPpK,YAAAA,WAAW,EAAE,8MADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAXH;AAeR6I,UAAAA,qBAAqB,EAAE;AACnBrK,YAAAA,WAAW,EAAE,uCADM;AAEnBsK,YAAAA,QAAQ,EAAE,IAFS;AAGnB9I,YAAAA,IAAI,EAAE;AAHa;AAff,SAF2B;AAuBvCA,QAAAA,IAAI,EAAE;AAvBiC,OAjnBtC;AA0oBL+I,MAAAA,qCAAqC,EAAE;AACnCxI,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,0DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKR4I,UAAAA,SAAS,EAAE;AAAEpK,YAAAA,WAAW,EAAE,sCAAf;AAAuDwB,YAAAA,IAAI,EAAE;AAA7D;AALH,SADuB;AAQnCA,QAAAA,IAAI,EAAE;AAR6B,OA1oBlC;AAopBLgJ,MAAAA,mCAAmC,EAAE;AACjCxK,QAAAA,WAAW,EAAE,kDADoB;AAEjC+B,QAAAA,UAAU,EAAE;AACR0I,UAAAA,WAAW,EAAE;AACTzK,YAAAA,WAAW,EAAE,2CADJ;AAET6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFE;AAGTQ,YAAAA,IAAI,EAAE;AAHG;AADL,SAFqB;AASjCA,QAAAA,IAAI,EAAE;AAT2B,OAppBhC;AA+pBLkJ,MAAAA,4CAA4C,EAAE;AAC1C1K,QAAAA,WAAW,EAAE,iIAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACR4I,UAAAA,GAAG,EAAE;AAAE3K,YAAAA,WAAW,EAAE,sBAAf;AAAuCwB,YAAAA,IAAI,EAAE;AAA7C,WADG;AAERoJ,UAAAA,CAAC,EAAE;AACC5K,YAAAA,WAAW,EAAE,wHADd;AAECwB,YAAAA,IAAI,EAAE;AAFP,WAFK;AAMRqJ,UAAAA,GAAG,EAAE;AAAE7K,YAAAA,WAAW,EAAE,qCAAf;AAAsDwB,YAAAA,IAAI,EAAE;AAA5D,WANG;AAORsJ,UAAAA,GAAG,EAAE;AAAE9K,YAAAA,WAAW,EAAE,WAAf;AAA4BwB,YAAAA,IAAI,EAAE;AAAlC,WAPG;AAQRuJ,UAAAA,CAAC,EAAE;AACC/K,YAAAA,WAAW,EAAE,uHADd;AAECwB,YAAAA,IAAI,EAAE;AAFP,WARK;AAYRwJ,UAAAA,GAAG,EAAE;AAAEhL,YAAAA,WAAW,EAAE,UAAf;AAA2BwB,YAAAA,IAAI,EAAE;AAAjC;AAZG,SAF8B;AAgB1CA,QAAAA,IAAI,EAAE;AAhBoC,OA/pBzC;AAirBLyJ,MAAAA,4CAA4C,EAAE;AAC1CjL,QAAAA,WAAW,EAAE,uEAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,mDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,oDADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WALC;AASR0J,UAAAA,WAAW,EAAE;AACTlL,YAAAA,WAAW,EAAE,iDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WATL;AAaRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,mDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAbL;AAiBR2J,UAAAA,QAAQ,EAAE;AACNnL,YAAAA,WAAW,EAAE,wDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAjBF;AAqBR0C,UAAAA,UAAU,EAAE;AAAElE,YAAAA,WAAW,EAAE,kCAAf;AAAmDwB,YAAAA,IAAI,EAAE;AAAzD,WArBJ;AAsBR4E,UAAAA,KAAK,EAAE;AACHpG,YAAAA,WAAW,EAAE,qEADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WAtBC;AA0BR4J,UAAAA,UAAU,EAAE;AACRpL,YAAAA,WAAW,EAAE,4DADL;AAERwB,YAAAA,IAAI,EAAE;AAFE;AA1BJ,SAF8B;AAiC1CA,QAAAA,IAAI,EAAE;AAjCoC,OAjrBzC;AAotBL6J,MAAAA,gDAAgD,EAAE;AAC9CrL,QAAAA,WAAW,EAAE,oCADiC;AAE9C+B,QAAAA,UAAU,EAAE;AACRuJ,UAAAA,UAAU,EAAE;AACRtL,YAAAA,WAAW,EAAE,iHADL;AAER6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFC;AAGRQ,YAAAA,IAAI,EAAE;AAHE,WADJ;AAMR+J,UAAAA,KAAK,EAAE;AACHvL,YAAAA,WAAW,EAAE,kJADV;AAEHiC,YAAAA,MAAM,EAAE,OAFL;AAGHT,YAAAA,IAAI,EAAE;AAHH,WANC;AAWRgK,UAAAA,MAAM,EAAE;AACJxL,YAAAA,WAAW,EAAE,6HADT;AAEJiC,YAAAA,MAAM,EAAE,OAFJ;AAGJT,YAAAA,IAAI,EAAE;AAHF,WAXA;AAgBRiK,UAAAA,KAAK,EAAE;AACHzL,YAAAA,WAAW,EAAE,2HADV;AAEHoC,YAAAA,IAAI,EAAE,CAAC,mBAAD,EAAsB,KAAtB,EAA6B,MAA7B,CAFH;AAGHZ,YAAAA,IAAI,EAAE;AAHH,WAhBC;AAqBRkK,UAAAA,cAAc,EAAE;AACZ1L,YAAAA,WAAW,EAAE,0KADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM,WArBR;AAyBRmK,UAAAA,MAAM,EAAE;AACJ3L,YAAAA,WAAW,EAAE,iNADT;AAEJoC,YAAAA,IAAI,EAAE,CACF,2BADE,EAEF,SAFE,EAGF,MAHE,EAIF,YAJE,EAKF,eALE,EAMF,YANE,CAFF;AAUJZ,YAAAA,IAAI,EAAE;AAVF,WAzBA;AAqCRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,qDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AArCF,SAFkC;AA4C9CA,QAAAA,IAAI,EAAE;AA5CwC,OAptB7C;AAkwBLoK,MAAAA,iDAAiD,EAAE;AAC/C5L,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACR8J,UAAAA,YAAY,EAAE;AACV7L,YAAAA,WAAW,EAAE,4KADH;AAEViC,YAAAA,MAAM,EAAE,OAFE;AAGVT,YAAAA,IAAI,EAAE;AAHI,WADN;AAMRsK,UAAAA,QAAQ,EAAE;AACN9L,YAAAA,WAAW,EAAE,wFADP;AAEN6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFD;AAGNQ,YAAAA,IAAI,EAAE;AAHA;AANF,SAFmC;AAc/CA,QAAAA,IAAI,EAAE;AAdyC,OAlwB9C;AAkxBLuK,MAAAA,gDAAgD,EAAE;AAC9C/L,QAAAA,WAAW,EAAE,oCADiC;AAE9C+B,QAAAA,UAAU,EAAE;AACRuE,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,wJADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WADC;AAKRwK,UAAAA,WAAW,EAAE;AACThM,YAAAA,WAAW,EAAE,oMADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WALL;AASRyK,UAAAA,WAAW,EAAE;AACTjM,YAAAA,WAAW,EAAE,+IADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WATL;AAaRmG,UAAAA,OAAO,EAAE;AACL3H,YAAAA,WAAW,EAAE,kSADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAbD;AAiBRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,uEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAjBF,SAFkC;AAwB9CA,QAAAA,IAAI,EAAE;AAxBwC,OAlxB7C;AA4yBL0K,MAAAA,iDAAiD,EAAE;AAC/ClM,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACRuE,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,+DADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WADC;AAKRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WALE;AAMR2K,UAAAA,OAAO,EAAE;AAAEnL,YAAAA,IAAI,EAAE;AAAR,WAND;AAORsG,UAAAA,QAAQ,EAAE;AAAE9F,YAAAA,IAAI,EAAE;AAAR,WAPF;AAQR+F,UAAAA,WAAW,EAAE;AACTnF,YAAAA,IAAI,EAAE,CACF,0BADE,EAEF,gBAFE,EAGF,iBAHE,EAIF,kBAJE,EAKF,cALE,EAMF,eANE,EAOF,cAPE,EAQF,yBARE,EASF,+BATE,CADG;AAYTZ,YAAAA,IAAI,EAAE;AAZG;AARL,SAFmC;AAyB/CA,QAAAA,IAAI,EAAE;AAzByC,OA5yB9C;AAu0BL4K,MAAAA,uDAAuD,EAAE;AACrDpM,QAAAA,WAAW,EAAE,mPADwC;AAErD+B,QAAAA,UAAU,EAAE;AACRsK,UAAAA,iBAAiB,EAAE;AACfrL,YAAAA,IAAI,EAAE;AADS,WADX;AAIRsL,UAAAA,UAAU,EAAE;AACRtM,YAAAA,WAAW,EAAE,8eADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAJJ;AAQR+K,UAAAA,SAAS,EAAE;AACPvM,YAAAA,WAAW,EAAE,6IADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WARH;AAYRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,oEADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAZL;AAgBRgL,UAAAA,cAAc,EAAE;AACZxM,YAAAA,WAAW,EAAE,wYADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM,WAhBR;AAoBRiL,UAAAA,cAAc,EAAE;AACZzM,YAAAA,WAAW,EAAE,gfADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM,WApBR;AAwBRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,sEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAxBF,SAFyC;AA+BrDA,QAAAA,IAAI,EAAE;AA/B+C,OAv0BpD;AAw2BLkL,MAAAA,wDAAwD,EAAE;AACtD1M,QAAAA,WAAW,EAAE,4CADyC;AAEtD+B,QAAAA,UAAU,EAAE;AACR4K,UAAAA,WAAW,EAAE;AACT3M,YAAAA,WAAW,EAAE,4GADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG;AADL,SAF0C;AAQtDA,QAAAA,IAAI,EAAE;AARgD,OAx2BrD;AAk3BLoL,MAAAA,iDAAiD,EAAE;AAC/C5M,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACR8K,UAAAA,gBAAgB,EAAE;AAAErL,YAAAA,IAAI,EAAE;AAAR,WADV;AAERsL,UAAAA,eAAe,EAAE;AACb9M,YAAAA,WAAW,EAAE,4GADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WAFT;AAMRuL,UAAAA,SAAS,EAAE;AACP/M,YAAAA,WAAW,EAAE,6DADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WANH;AAWRwL,UAAAA,gBAAgB,EAAE;AACdhN,YAAAA,WAAW,EAAE,yOADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ,WAXV;AAeR0D,UAAAA,sBAAsB,EAAE;AAAEjD,YAAAA,MAAM,EAAE,OAAV;AAAmBT,YAAAA,IAAI,EAAE;AAAzB,WAfhB;AAgBRyL,UAAAA,eAAe,EAAE;AACbjN,YAAAA,WAAW,EAAE,yCADA;AAEb6C,YAAAA,KAAK,EAAE;AACHT,cAAAA,IAAI,EAAE,CACF,iCADE,EAEF,OAFE,EAGF,cAHE,EAIF,UAJE,EAKF,WALE,EAMF,UANE,EAOF,eAPE,CADH;AAUHZ,cAAAA,IAAI,EAAE;AAVH,aAFM;AAcbA,YAAAA,IAAI,EAAE;AAdO,WAhBT;AAgCR0L,UAAAA,cAAc,EAAE;AACZlN,YAAAA,WAAW,EAAE,2DADD;AAEZ6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFK;AAGZA,YAAAA,IAAI,EAAE;AAHM,WAhCR;AAqCR2L,UAAAA,WAAW,EAAE;AACTnN,YAAAA,WAAW,EAAE,6FADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WArCL;AAyCRyI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,qJADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAzCL;AA6CR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,oQADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WA7CC;AAiDR4L,UAAAA,aAAa,EAAE;AACXpN,YAAAA,WAAW,EAAE,oMADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WAjDP;AAqDRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,kGADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WArDD;AAyDR6L,UAAAA,UAAU,EAAE;AAAE7L,YAAAA,IAAI,EAAE;AAAR,WAzDJ;AA0DR8L,UAAAA,WAAW,EAAE;AACTtN,YAAAA,WAAW,EAAE,gEADJ;AAETiC,YAAAA,MAAM,EAAE,OAFC;AAGTT,YAAAA,IAAI,EAAE;AAHG,WA1DL;AA+DR+L,UAAAA,oBAAoB,EAAE;AAClBvM,YAAAA,IAAI,EAAE;AADY,WA/Dd;AAkERmC,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,+OADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAlED;AAsERgM,UAAAA,GAAG,EAAE;AAAExM,YAAAA,IAAI,EAAE;AAAR,WAtEG;AAuER2G,UAAAA,OAAO,EAAE;AACL3H,YAAAA,WAAW,EAAE,wMADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAvED;AA2ERiM,UAAAA,QAAQ,EAAE;AACNzN,YAAAA,WAAW,EAAE,qHADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WA3EF;AA+ERiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,6DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WA/EL;AAmFR2J,UAAAA,QAAQ,EAAE;AACNnL,YAAAA,WAAW,EAAE,0KADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAnFF;AAuFR2H,UAAAA,QAAQ,EAAE;AACNnJ,YAAAA,WAAW,EAAE,oEADP;AAEN6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFD;AAGNA,YAAAA,IAAI,EAAE;AAHA,WAvFF;AA4FRkM,UAAAA,iBAAiB,EAAE;AACf1N,YAAAA,WAAW,EAAE,0EADE;AAEfwB,YAAAA,IAAI,EAAE;AAFS,WA5FX;AAgGR2D,UAAAA,eAAe,EAAE;AACbnF,YAAAA,WAAW,EAAE,6RADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WAhGT;AAoGRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,8KADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WApGF;AAwGRmM,UAAAA,uBAAuB,EAAE;AACrB3N,YAAAA,WAAW,EAAE,yEADQ;AAErBwB,YAAAA,IAAI,EAAE;AAFe,WAxGjB;AA4GRoM,UAAAA,UAAU,EAAE;AACR5N,YAAAA,WAAW,EAAE,sGADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE;AA5GJ,SAFmC;AAoH/CA,QAAAA,IAAI,EAAE;AApHyC,OAl3B9C;AAw+BLqM,MAAAA,kDAAkD,EAAE;AAChD7N,QAAAA,WAAW,EAAE,qCADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AAAEzI,YAAAA,IAAI,EAAE;AAAR,WADL;AAER8E,UAAAA,KAAK,EAAE;AAAE9E,YAAAA,IAAI,EAAE;AAAR,WAFC;AAGR4L,UAAAA,aAAa,EAAE;AACXpN,YAAAA,WAAW,EAAE,gDADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WAHP;AAORsM,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,qEADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WAPH;AAYRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,sFADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAZD;AAgBRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WAhBE;AAiBR2B,UAAAA,OAAO,EAAE;AAAEnD,YAAAA,WAAW,EAAE,mCAAf;AAAoDwB,YAAAA,IAAI,EAAE;AAA1D,WAjBD;AAkBR8F,UAAAA,QAAQ,EAAE;AACNtH,YAAAA,WAAW,EAAE,mEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAlBF;AAsBRuM,UAAAA,YAAY,EAAE;AAAEvM,YAAAA,IAAI,EAAE;AAAR,WAtBN;AAuBR2J,UAAAA,QAAQ,EAAE;AAAE3J,YAAAA,IAAI,EAAE;AAAR,WAvBF;AAwBRwM,UAAAA,gBAAgB,EAAE;AACdhO,YAAAA,WAAW,EAAE,+CADC;AAEd6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFO;AAGdQ,YAAAA,IAAI,EAAE;AAHQ,WAxBV;AA6BRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,wEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AA7BN,SAFoC;AAoChDA,QAAAA,IAAI,EAAE;AApC0C,OAx+B/C;AA8gCL0M,MAAAA,wDAAwD,EAAE;AACtDlO,QAAAA,WAAW,EAAE,4CADyC;AAEtD+B,QAAAA,UAAU,EAAE;AACRmD,UAAAA,sBAAsB,EAAE;AAAEjD,YAAAA,MAAM,EAAE,OAAV;AAAmBT,YAAAA,IAAI,EAAE;AAAzB,WADhB;AAER6L,UAAAA,UAAU,EAAE;AAAE7L,YAAAA,IAAI,EAAE;AAAR,WAFJ;AAGRkM,UAAAA,iBAAiB,EAAE;AAAE1N,YAAAA,WAAW,EAAE,wBAAf;AAAyCwB,YAAAA,IAAI,EAAE;AAA/C,WAHX;AAIRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,+HADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAJF;AAQR2M,UAAAA,KAAK,EAAE;AACHnO,YAAAA,WAAW,EAAE,sTADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH;AARC,SAF0C;AAetDA,QAAAA,IAAI,EAAE;AAfgD,OA9gCrD;AA+hCL4M,MAAAA,yDAAyD,EAAE;AACvDpO,QAAAA,WAAW,EAAE,6CAD0C;AAEvD+B,QAAAA,UAAU,EAAE;AACR+L,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,mDADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WADH;AAMRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,2DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAND;AAURoI,UAAAA,SAAS,EAAE;AACP5J,YAAAA,WAAW,EAAE,6DADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAVH;AAcRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WAdE;AAeRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,gEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AAfN,SAF2C;AAsBvDA,QAAAA,IAAI,EAAE;AAtBiD,OA/hCtD;AAujCL6M,MAAAA,sDAAsD,EAAE;AACpDrO,QAAAA,WAAW,EAAE,yCADuC;AAEpD+B,QAAAA,UAAU,EAAE;AACRuE,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,8PADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WADC;AAKRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,mNADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WALD;AASRmG,UAAAA,OAAO,EAAE;AACL3H,YAAAA,WAAW,EAAE,qDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WATD;AAaRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,+IADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAbF,SAFwC;AAoBpDA,QAAAA,IAAI,EAAE;AApB8C,OAvjCnD;AA6kCL8M,MAAAA,uDAAuD,EAAE;AACrDtO,QAAAA,WAAW,EAAE,2CADwC;AAErD+B,QAAAA,UAAU,EAAE;AACRuE,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,oEADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WADC;AAKRsM,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,mDADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WALH;AAURqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,2DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAVD;AAcRoI,UAAAA,SAAS,EAAE;AACP5J,YAAAA,WAAW,EAAE,6DADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAdH;AAkBRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WAlBE;AAmBR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,mEADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAnBD;AAuBR2K,UAAAA,OAAO,EAAE;AACLnM,YAAAA,WAAW,EAAE,uJADR;AAEL6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLQ,YAAAA,IAAI,EAAE;AAHD,WAvBD;AA4BR+M,UAAAA,oBAAoB,EAAE;AAClBvO,YAAAA,WAAW,EAAE,wGADK;AAElBwB,YAAAA,IAAI,EAAE;AAFY,WA5Bd;AAgCRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,2CADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AAhCN,SAFyC;AAuCrDA,QAAAA,IAAI,EAAE;AAvC+C,OA7kCpD;AAsnCLgN,MAAAA,uDAAuD,EAAE;AACrDxO,QAAAA,WAAW,EAAE,0CADwC;AAErD+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AAAEjK,YAAAA,WAAW,EAAE,sCAAf;AAAuDwB,YAAAA,IAAI,EAAE;AAA7D,WADL;AAERqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,8JADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAFD;AAMRiN,UAAAA,QAAQ,EAAE;AAAEzO,YAAAA,WAAW,EAAE,6CAAf;AAA8DwB,YAAAA,IAAI,EAAE;AAApE,WANF;AAORkN,UAAAA,YAAY,EAAE;AACV1O,YAAAA,WAAW,EAAE,4GADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAPN;AAWRmN,UAAAA,IAAI,EAAE;AACF3O,YAAAA,WAAW,EAAE,iEADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ,WAXE;AAeRoN,UAAAA,SAAS,EAAE;AACP5O,YAAAA,WAAW,EAAE,+DADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAfH;AAmBRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,mEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAnBF;AAuBRqN,UAAAA,SAAS,EAAE;AACP7O,YAAAA,WAAW,EAAE,8FADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC;AAvBH,SAFyC;AA+BrDA,QAAAA,IAAI,EAAE;AA/B+C,OAtnCpD;AAupCLsN,MAAAA,wDAAwD,EAAE;AACtD9O,QAAAA,WAAW,EAAE,2CADyC;AAEtD+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AAAEjK,YAAAA,WAAW,EAAE,yCAAf;AAA0DwB,YAAAA,IAAI,EAAE;AAAhE,WADL;AAERsM,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,mDADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WAFH;AAORqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,2DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAPD;AAWRoI,UAAAA,SAAS,EAAE;AACP5J,YAAAA,WAAW,EAAE,yDADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAXH;AAeR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,mEADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAfD;AAmBRiN,UAAAA,QAAQ,EAAE;AAAEzO,YAAAA,WAAW,EAAE,mCAAf;AAAoDwB,YAAAA,IAAI,EAAE;AAA1D,WAnBF;AAoBRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,gEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AApBN,SAF0C;AA2BtDA,QAAAA,IAAI,EAAE;AA3BgD,OAvpCrD;AAorCLuN,MAAAA,gDAAgD,EAAE;AAC9C/O,QAAAA,WAAW,EAAE,oCADiC;AAE9C+B,QAAAA,UAAU,EAAE;AACRiN,UAAAA,UAAU,EAAE;AAAExN,YAAAA,IAAI,EAAE;AAAR,WADJ;AAER0D,UAAAA,sBAAsB,EAAE;AAAEjD,YAAAA,MAAM,EAAE,OAAV;AAAmBT,YAAAA,IAAI,EAAE;AAAzB,WAFhB;AAGRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,0IADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAHD;AAORyN,UAAAA,cAAc,EAAE;AAAEzN,YAAAA,IAAI,EAAE;AAAR,WAPR;AAQR0N,UAAAA,YAAY,EAAE;AACVlP,YAAAA,WAAW,EAAE,4JADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WARN;AAYR2N,UAAAA,QAAQ,EAAE;AACNnP,YAAAA,WAAW,EAAE,opDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAZF;AAgBR4N,UAAAA,UAAU,EAAE;AACRpP,YAAAA,WAAW,EAAE,sKADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAhBJ;AAoBR6N,UAAAA,mBAAmB,EAAE;AACjBrP,YAAAA,WAAW,EAAE,yIADI;AAEjBwB,YAAAA,IAAI,EAAE;AAFW,WApBb;AAwBR8N,UAAAA,kBAAkB,EAAE;AAChBtP,YAAAA,WAAW,EAAE,8EADG;AAEhBwB,YAAAA,IAAI,EAAE;AAFU,WAxBZ;AA4BRkM,UAAAA,iBAAiB,EAAE;AAAE1N,YAAAA,WAAW,EAAE,wBAAf;AAAyCwB,YAAAA,IAAI,EAAE;AAA/C,WA5BX;AA6BR2C,UAAAA,SAAS,EAAE;AACPnE,YAAAA,WAAW,EAAE,wQADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WA7BH;AAiCRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,+IADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAjCF,SAFkC;AAwC9CA,QAAAA,IAAI,EAAE;AAxCwC,OAprC7C;AA8tCL+N,MAAAA,iDAAiD,EAAE;AAC/CvP,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACRyB,UAAAA,OAAO,EAAE;AACLxD,YAAAA,WAAW,EAAE,0JADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WADD;AAKRgO,UAAAA,WAAW,EAAE;AACTxP,YAAAA,WAAW,EAAE,sDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WALL;AASRyI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,qDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WATL;AAaR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,qDADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WAbC;AAiBRiO,UAAAA,aAAa,EAAE;AACXzP,YAAAA,WAAW,EAAE,wQADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WAjBP;AAqBR4L,UAAAA,aAAa,EAAE;AACXpN,YAAAA,WAAW,EAAE,uDADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WArBP;AAyBRkO,UAAAA,YAAY,EAAE;AACV1P,YAAAA,WAAW,EAAE,qPADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAzBN;AA6BRsM,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,qEADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WA7BH;AAkCR0J,UAAAA,WAAW,EAAE;AACTlL,YAAAA,WAAW,EAAE,mEADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAlCL;AAsCRmI,UAAAA,SAAS,EAAE;AACP3J,YAAAA,WAAW,EAAE,mDADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAtCH;AA0CRmO,UAAAA,QAAQ,EAAE;AACN3P,YAAAA,WAAW,EAAE,kDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WA1CF;AA8CRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,2DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WA9CD;AAkDRoO,UAAAA,UAAU,EAAE;AAAEpO,YAAAA,IAAI,EAAE;AAAR,WAlDJ;AAmDRoI,UAAAA,SAAS,EAAE;AACP5J,YAAAA,WAAW,EAAE,wFADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAnDH;AAuDRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WAvDE;AAwDRqO,UAAAA,QAAQ,EAAE;AACN7P,YAAAA,WAAW,EAAE,4DADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAxDF;AA4DRqI,UAAAA,QAAQ,EAAE;AACN7J,YAAAA,WAAW,EAAE,kDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WA5DF;AAgER2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,qFADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAhED;AAoER2K,UAAAA,OAAO,EAAE;AACLnM,YAAAA,WAAW,EAAE,uKADR;AAEL6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLQ,YAAAA,IAAI,EAAE;AAHD,WApED;AAyER+M,UAAAA,oBAAoB,EAAE;AAClBvO,YAAAA,WAAW,EAAE,iHADK;AAElBwB,YAAAA,IAAI,EAAE;AAFY,WAzEd;AA6ERsO,UAAAA,gBAAgB,EAAE;AACd9P,YAAAA,WAAW,EAAE,oZADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ,WA7EV;AAiFRuO,UAAAA,SAAS,EAAE;AAAEvO,YAAAA,IAAI,EAAE;AAAR,WAjFH;AAkFRwO,UAAAA,QAAQ,EAAE;AACNhQ,YAAAA,WAAW,EAAE,iDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAlFF;AAsFRyO,UAAAA,gBAAgB,EAAE;AACdjQ,YAAAA,WAAW,EAAE,oDADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ,WAtFV;AA0FR0O,UAAAA,sBAAsB,EAAE;AACpBlQ,YAAAA,WAAW,EAAE,uFADO;AAEpBwB,YAAAA,IAAI,EAAE;AAFc,WA1FhB;AA8FR2O,UAAAA,aAAa,EAAE;AACXnQ,YAAAA,WAAW,EAAE,0EADF;AAEXiC,YAAAA,MAAM,EAAE,OAFG;AAGXT,YAAAA,IAAI,EAAE;AAHK,WA9FP;AAmGR4O,UAAAA,YAAY,EAAE;AACVpQ,YAAAA,WAAW,EAAE,yDADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAnGN;AAuGR6O,UAAAA,iBAAiB,EAAE;AACfrQ,YAAAA,WAAW,EAAE,qGADE;AAEfwB,YAAAA,IAAI,EAAE;AAFS,WAvGX;AA2GR8O,UAAAA,gBAAgB,EAAE;AACdtQ,YAAAA,WAAW,EAAE,+FADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ,WA3GV;AA+GR+O,UAAAA,aAAa,EAAE;AACXvQ,YAAAA,WAAW,EAAE,sMADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WA/GP;AAmHR0N,UAAAA,YAAY,EAAE;AACVlP,YAAAA,WAAW,EAAE,oNADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAnHN;AAuHR2J,UAAAA,QAAQ,EAAE;AACNnL,YAAAA,WAAW,EAAE,mDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAvHF;AA2HR0C,UAAAA,UAAU,EAAE;AACRlE,YAAAA,WAAW,EAAE,4FADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WA3HJ;AA+HRgP,UAAAA,WAAW,EAAE;AACTxQ,YAAAA,WAAW,EAAE,uGADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WA/HL;AAmIRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,gEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAnIN;AAuIR4J,UAAAA,UAAU,EAAE;AACRpL,YAAAA,WAAW,EAAE,uHADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAvIJ;AA2IRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,oDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WA3IF;AA+IRiP,UAAAA,QAAQ,EAAE;AACNzQ,YAAAA,WAAW,EAAE,kDADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WA/IF;AAmJRkP,UAAAA,gBAAgB,EAAE;AACd1Q,YAAAA,WAAW,EAAE,4JADC;AAEd6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFO;AAGdA,YAAAA,IAAI,EAAE;AAHQ;AAnJV,SAFmC;AA2J/CA,QAAAA,IAAI,EAAE;AA3JyC,OA9tC9C;AA23CLmP,MAAAA,qDAAqD,EAAE;AACnD3Q,QAAAA,WAAW,EAAE,yCADsC;AAEnD+B,QAAAA,UAAU,EAAE;AACR8K,UAAAA,gBAAgB,EAAE;AAAErL,YAAAA,IAAI,EAAE;AAAR,WADV;AAERsL,UAAAA,eAAe,EAAE;AACb9M,YAAAA,WAAW,EAAE,6HADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WAFT;AAMR0D,UAAAA,sBAAsB,EAAE;AAAEjD,YAAAA,MAAM,EAAE,OAAV;AAAmBT,YAAAA,IAAI,EAAE;AAAzB,WANhB;AAOR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,qPADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WAPC;AAWRqD,UAAAA,OAAO,EAAE;AAAErD,YAAAA,IAAI,EAAE;AAAR,WAXD;AAYR6L,UAAAA,UAAU,EAAE;AAAE7L,YAAAA,IAAI,EAAE;AAAR,WAZJ;AAaRiM,UAAAA,QAAQ,EAAE;AACNzN,YAAAA,WAAW,EAAE,qEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAbF;AAiBRyN,UAAAA,cAAc,EAAE;AAAEzN,YAAAA,IAAI,EAAE;AAAR,WAjBR;AAkBRkM,UAAAA,iBAAiB,EAAE;AAAE1N,YAAAA,WAAW,EAAE,wBAAf;AAAyCwB,YAAAA,IAAI,EAAE;AAA/C,WAlBX;AAmBRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,+JADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAnBF,SAFuC;AA0BnDA,QAAAA,IAAI,EAAE;AA1B6C,OA33ClD;AAu5CLoP,MAAAA,sDAAsD,EAAE;AACpD5Q,QAAAA,WAAW,EAAE,0CADuC;AAEpD+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,6DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,sEADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WALC;AASRsM,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,qEADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WATH;AAcRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,2DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAdD;AAkBRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WAlBE;AAmBR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,mEADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAnBD;AAuBR2K,UAAAA,OAAO,EAAE;AACLnM,YAAAA,WAAW,EAAE,uKADR;AAEL6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLQ,YAAAA,IAAI,EAAE;AAHD,WAvBD;AA4BR+M,UAAAA,oBAAoB,EAAE;AAClBvO,YAAAA,WAAW,EAAE,iHADK;AAElBwB,YAAAA,IAAI,EAAE;AAFY,WA5Bd;AAgCRyO,UAAAA,gBAAgB,EAAE;AAAEjQ,YAAAA,WAAW,EAAE,0BAAf;AAA2CwB,YAAAA,IAAI,EAAE;AAAjD,WAhCV;AAiCR0O,UAAAA,sBAAsB,EAAE;AAAE1O,YAAAA,IAAI,EAAE;AAAR,WAjChB;AAkCR2O,UAAAA,aAAa,EAAE;AACXnQ,YAAAA,WAAW,EAAE,8CADF;AAEXiC,YAAAA,MAAM,EAAE,OAFG;AAGXT,YAAAA,IAAI,EAAE;AAHK,WAlCP;AAuCRqP,UAAAA,cAAc,EAAE;AACZ7Q,YAAAA,WAAW,EAAE,gEADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM,WAvCR;AA2CRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,gEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WA3CN;AA+CRkD,UAAAA,UAAU,EAAE;AACR1E,YAAAA,WAAW,EAAE,4DADL;AAERwB,YAAAA,IAAI,EAAE;AAFE;AA/CJ,SAFwC;AAsDpDA,QAAAA,IAAI,EAAE;AAtD8C,OAv5CnD;AA+8CLsP,MAAAA,wDAAwD,EAAE;AACtD9Q,QAAAA,WAAW,EAAE,4CADyC;AAEtD+B,QAAAA,UAAU,EAAE;AACRgP,UAAAA,IAAI,EAAE;AACF/Q,YAAAA,WAAW,EAAE,sEADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ,WADE;AAKRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,sQADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WALD;AASRwP,UAAAA,SAAS,EAAE;AACP5O,YAAAA,IAAI,EAAE,CAAC,uBAAD,EAA0B,eAA1B,EAA2C,QAA3C,EAAqD,QAArD,EAA+D,MAA/D,CADC;AAEPZ,YAAAA,IAAI,EAAE;AAFC,WATH;AAaRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,6QADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAbL;AAiBRmL,UAAAA,WAAW,EAAE;AACT3M,YAAAA,WAAW,EAAE,mNADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAjBL;AAqBRyP,UAAAA,cAAc,EAAE;AACZjR,YAAAA,WAAW,EAAE,sOADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM,WArBR;AAyBRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,+IADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WAzBF;AA6BR0P,UAAAA,iBAAiB,EAAE;AAAElR,YAAAA,WAAW,EAAE,aAAf;AAA8BwB,YAAAA,IAAI,EAAE;AAApC;AA7BX,SAF0C;AAiCtDA,QAAAA,IAAI,EAAE;AAjCgD,OA/8CrD;AAk/CL2P,MAAAA,yDAAyD,EAAE;AACvDnR,QAAAA,WAAW,EAAE,6CAD0C;AAEvD+B,QAAAA,UAAU,EAAE;AACR+L,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,mDADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WADH;AAMRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,wDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAND;AAURoI,UAAAA,SAAS,EAAE;AACP5J,YAAAA,WAAW,EAAE,6DADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WAVH;AAcR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,kOADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAdD;AAkBRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,yEADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAlBL;AAsBRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,2CADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAtBN;AA0BRyP,UAAAA,cAAc,EAAE;AACZjR,YAAAA,WAAW,EAAE,uSADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM,WA1BR;AA8BR4P,UAAAA,uBAAuB,EAAE;AACrBpR,YAAAA,WAAW,EAAE,0DADQ;AAErBiC,YAAAA,MAAM,EAAE,OAFa;AAGrBT,YAAAA,IAAI,EAAE;AAHe,WA9BjB;AAmCR0P,UAAAA,iBAAiB,EAAE;AAAElR,YAAAA,WAAW,EAAE,aAAf;AAA8BwB,YAAAA,IAAI,EAAE;AAApC,WAnCX;AAoCR6P,UAAAA,0BAA0B,EAAE;AACxBrR,YAAAA,WAAW,EAAE,aADW;AAExBiC,YAAAA,MAAM,EAAE,OAFgB;AAGxBT,YAAAA,IAAI,EAAE;AAHkB;AApCpB,SAF2C;AA4CvDA,QAAAA,IAAI,EAAE;AA5CiD,OAl/CtD;AAgiDL8P,MAAAA,yCAAyC,EAAE;AACvCtR,QAAAA,WAAW,EAAE,6BAD0B;AAEvC+B,QAAAA,UAAU,EAAE;AACR8K,UAAAA,gBAAgB,EAAE;AAAErL,YAAAA,IAAI,EAAE;AAAR,WADV;AAERsL,UAAAA,eAAe,EAAE;AACb9M,YAAAA,WAAW,EAAE,8HADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WAFT;AAMRmE,UAAAA,QAAQ,EAAE;AACN3F,YAAAA,WAAW,EAAE,uOADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WANF;AAURyI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,6CADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAVL;AAcR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,oSADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WAdC;AAkBR4L,UAAAA,aAAa,EAAE;AACXpN,YAAAA,WAAW,EAAE,mMADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WAlBP;AAsBRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,uRADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAtBD;AA0BR6L,UAAAA,UAAU,EAAE;AAAE7L,YAAAA,IAAI,EAAE;AAAR,WA1BJ;AA2BR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,0QADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WA3BD;AA+BR2K,UAAAA,OAAO,EAAE;AACLnM,YAAAA,WAAW,EAAE,mEADR;AAEL6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLQ,YAAAA,IAAI,EAAE;AAHD,WA/BD;AAoCRiM,UAAAA,QAAQ,EAAE;AACNzN,YAAAA,WAAW,EAAE,6IADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WApCF;AAwCRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,qMADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAxCL;AA4CR2J,UAAAA,QAAQ,EAAE;AAAEnL,YAAAA,WAAW,EAAE,8CAAf;AAA+DwB,YAAAA,IAAI,EAAE;AAArE,WA5CF;AA6CR2D,UAAAA,eAAe,EAAE;AACbnF,YAAAA,WAAW,EAAE,qUADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WA7CT;AAiDRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,kJADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAjDF,SAF2B;AAwDvCA,QAAAA,IAAI,EAAE;AAxDiC,OAhiDtC;AA0lDL+P,MAAAA,0CAA0C,EAAE;AACxCvR,QAAAA,WAAW,EAAE,8BAD2B;AAExC+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AAAEjK,YAAAA,WAAW,EAAE,kCAAf;AAAmDwB,YAAAA,IAAI,EAAE;AAAzD,WADL;AAER8E,UAAAA,KAAK,EAAE;AAAEtG,YAAAA,WAAW,EAAE,2BAAf;AAA4CwB,YAAAA,IAAI,EAAE;AAAlD,WAFC;AAGRsM,UAAAA,SAAS,EAAE;AACP9N,YAAAA,WAAW,EAAE,mDADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WAHH;AAQRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,oGADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WARD;AAYRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR,WAZE;AAaR2B,UAAAA,OAAO,EAAE;AACLnD,YAAAA,WAAW,EAAE,6DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAbD;AAiBRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,yGADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AAjBN,SAF4B;AAwBxCA,QAAAA,IAAI,EAAE;AAxBkC,OA1lDvC;AAonDLgQ,MAAAA,yCAAyC,EAAE;AACvCxR,QAAAA,WAAW,EAAE,0CAD0B;AAEvC+B,QAAAA,UAAU,EAAE;AACRuE,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,2OADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WADC;AAKRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,iOADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WALL;AASRiQ,UAAAA,MAAM,EAAE;AACJzR,YAAAA,WAAW,EAAE,4NADT;AAEJwB,YAAAA,IAAI,EAAE;AAFF;AATA,SAF2B;AAgBvCA,QAAAA,IAAI,EAAE;AAhBiC,OApnDtC;AAsoDLkQ,MAAAA,gDAAgD,EAAE;AAC9C1R,QAAAA,WAAW,EAAE,oCADiC;AAE9C+B,QAAAA,UAAU,EAAE;AACR4P,UAAAA,cAAc,EAAE;AACZ3R,YAAAA,WAAW,EAAE,kMADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM,WADR;AAKRoQ,UAAAA,gBAAgB,EAAE;AACd5Q,YAAAA,IAAI,EAAE;AADQ,WALV;AAQR6Q,UAAAA,SAAS,EAAE;AACP7R,YAAAA,WAAW,EAAE,gQADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WARH;AAaRsQ,UAAAA,UAAU,EAAE;AACR9R,YAAAA,WAAW,EAAE,sQADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE,WAbJ;AAkBR0D,UAAAA,sBAAsB,EAAE;AACpBlF,YAAAA,WAAW,EAAE,yfADO;AAEpBiC,YAAAA,MAAM,EAAE,OAFY;AAGpBT,YAAAA,IAAI,EAAE;AAHc,WAlBhB;AAuBRuQ,UAAAA,KAAK,EAAE;AACH/R,YAAAA,WAAW,EAAE,sFADV;AAEHiC,YAAAA,MAAM,EAAE,OAFL;AAGHT,YAAAA,IAAI,EAAE;AAHH,WAvBC;AA4BRwQ,UAAAA,aAAa,EAAE;AACXhS,YAAAA,WAAW,EAAE,8PADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WA5BP;AAgCRyQ,UAAAA,UAAU,EAAE;AACRjS,YAAAA,WAAW,EAAE,sFADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE,WAhCJ;AAqCR0Q,UAAAA,eAAe,EAAE;AACblS,YAAAA,WAAW,EAAE,2QADA;AAEbiC,YAAAA,MAAM,EAAE,OAFK;AAGbT,YAAAA,IAAI,EAAE;AAHO,WArCT;AA0CR2Q,UAAAA,iBAAiB,EAAE;AACfnS,YAAAA,WAAW,EAAE,+CADE;AAEfoC,YAAAA,IAAI,EAAE,CAAC,mBAAD,EAAsB,mBAAtB,EAA2C,mBAA3C,CAFS;AAGfZ,YAAAA,IAAI,EAAE;AAHS,WA1CX;AA+CR4Q,UAAAA,MAAM,EAAE;AACJpS,YAAAA,WAAW,EAAE,yKADT;AAEJiC,YAAAA,MAAM,EAAE,OAFJ;AAGJT,YAAAA,IAAI,EAAE;AAHF,WA/CA;AAoDR6Q,UAAAA,aAAa,EAAE;AACXrS,YAAAA,WAAW,EAAE,oJADF;AAEXiC,YAAAA,MAAM,EAAE,MAFG;AAGXT,YAAAA,IAAI,EAAE;AAHK,WApDP;AAyDR8Q,UAAAA,WAAW,EAAE;AAAE9Q,YAAAA,IAAI,EAAE;AAAR,WAzDL;AA0DR+Q,UAAAA,SAAS,EAAE;AACPvS,YAAAA,WAAW,EAAE,yJADN;AAEPiC,YAAAA,MAAM,EAAE,MAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WA1DH;AA+DRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,gEADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WA/DF;AAmER+D,UAAAA,KAAK,EAAE;AACHvF,YAAAA,WAAW,EAAE,+BADV;AAEH6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFJ;AAGHQ,YAAAA,IAAI,EAAE;AAHH;AAnEC,SAFkC;AA2E9CA,QAAAA,IAAI,EAAE;AA3EwC,OAtoD7C;AAmtDLgR,MAAAA,iDAAiD,EAAE;AAC/CxS,QAAAA,WAAW,EAAE,qCADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACR0Q,UAAAA,KAAK,EAAE;AACHzS,YAAAA,WAAW,EAAE,2DADV;AAEH6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFJ;AAGHQ,YAAAA,IAAI,EAAE;AAHH,WADC;AAMRiD,UAAAA,IAAI,EAAE;AAAEjD,YAAAA,IAAI,EAAE;AAAR;AANE,SAFmC;AAU/CA,QAAAA,IAAI,EAAE;AAVyC,OAntD9C;AA+tDLkR,MAAAA,oCAAoC,EAAE;AAClC1S,QAAAA,WAAW,EAAE,6CADqB;AAElC+B,QAAAA,UAAU,EAAE;AACRgL,UAAAA,SAAS,EAAE;AACP/M,YAAAA,WAAW,EAAE,qEADN;AAEPiC,YAAAA,MAAM,EAAE,OAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WADH;AAMRwL,UAAAA,gBAAgB,EAAE;AACdhN,YAAAA,WAAW,EAAE,2IADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ,WANV;AAURmR,UAAAA,UAAU,EAAE;AACR3S,YAAAA,WAAW,EAAE,uFADL;AAERsK,YAAAA,QAAQ,EAAE,IAFF;AAGR9I,YAAAA,IAAI,EAAE;AAHE,WAVJ;AAeRgO,UAAAA,WAAW,EAAE;AACTxP,YAAAA,WAAW,EAAE,+JADJ;AAETsK,YAAAA,QAAQ,EAAE,IAFD;AAGT9I,YAAAA,IAAI,EAAE;AAHG,WAfL;AAoBRmE,UAAAA,QAAQ,EAAE;AACN3F,YAAAA,WAAW,EAAE,qJADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WApBF;AAwBRyI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,4IADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAxBL;AA4BR8E,UAAAA,KAAK,EAAE;AACHtG,YAAAA,WAAW,EAAE,0NADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH,WA5BC;AAgCRoR,UAAAA,eAAe,EAAE;AACb5S,YAAAA,WAAW,EAAE,oEADA;AAEbsK,YAAAA,QAAQ,EAAE,IAFG;AAGb9I,YAAAA,IAAI,EAAE;AAHO,WAhCT;AAqCR4L,UAAAA,aAAa,EAAE;AACXpN,YAAAA,WAAW,EAAE,wDADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WArCP;AAyCRgF,UAAAA,YAAY,EAAE;AACVxG,YAAAA,WAAW,EAAE,wRADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAzCN;AA6CRqO,UAAAA,QAAQ,EAAE;AACN7P,YAAAA,WAAW,EAAE,gKADP;AAENsK,YAAAA,QAAQ,EAAE,IAFJ;AAGN9I,YAAAA,IAAI,EAAE;AAHA,WA7CF;AAkDR8L,UAAAA,WAAW,EAAE;AACTtN,YAAAA,WAAW,EAAE,0EADJ;AAETiC,YAAAA,MAAM,EAAE,OAFC;AAGTT,YAAAA,IAAI,EAAE;AAHG,WAlDL;AAuDRqR,UAAAA,aAAa,EAAE;AACX7S,YAAAA,WAAW,EAAE,8DADF;AAEXiC,YAAAA,MAAM,EAAE,iBAFG;AAGXT,YAAAA,IAAI,EAAE;AAHK,WAvDP;AA4DR2B,UAAAA,OAAO,EAAE;AAAEnD,YAAAA,WAAW,EAAE,0CAAf;AAA2DwB,YAAAA,IAAI,EAAE;AAAjE,WA5DD;AA6DR2K,UAAAA,OAAO,EAAE;AACLnM,YAAAA,WAAW,EAAE,0FADR;AAEL6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLQ,YAAAA,IAAI,EAAE;AAHD,WA7DD;AAkERuM,UAAAA,YAAY,EAAE;AACV/N,YAAAA,WAAW,EAAE,0LADH;AAEViC,YAAAA,MAAM,EAAE,MAFE;AAGVT,YAAAA,IAAI,EAAE;AAHI,WAlEN;AAuERsR,UAAAA,iBAAiB,EAAE;AACf9S,YAAAA,WAAW,EAAE,sHADE;AAEfiC,YAAAA,MAAM,EAAE,QAFO;AAGfT,YAAAA,IAAI,EAAE;AAHS,WAvEX;AA4ERiF,UAAAA,WAAW,EAAE;AAAEzG,YAAAA,WAAW,EAAE,6BAAf;AAA8CwB,YAAAA,IAAI,EAAE;AAApD,WA5EL;AA6ER2J,UAAAA,QAAQ,EAAE;AACNnL,YAAAA,WAAW,EAAE,mJADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WA7EF;AAiFRwM,UAAAA,gBAAgB,EAAE;AACdhO,YAAAA,WAAW,EAAE,uEADC;AAEd6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFO;AAGdQ,YAAAA,IAAI,EAAE;AAHQ,WAjFV;AAsFRuR,UAAAA,WAAW,EAAE;AACT/S,YAAAA,WAAW,EAAE,4QADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAtFL;AA0FRmN,UAAAA,IAAI,EAAE;AACF3O,YAAAA,WAAW,EAAE,sHADX;AAEFiC,YAAAA,MAAM,EAAE,MAFN;AAGFT,YAAAA,IAAI,EAAE;AAHJ,WA1FE;AA+FR4J,UAAAA,UAAU,EAAE;AACRpL,YAAAA,WAAW,EAAE,6EADL;AAERsK,YAAAA,QAAQ,EAAE,IAFF;AAGR9I,YAAAA,IAAI,EAAE;AAHE,WA/FJ;AAoGRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,yFADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WApGF;AAwGRiP,UAAAA,QAAQ,EAAE;AACNzQ,YAAAA,WAAW,EAAE,iKADP;AAENsK,YAAAA,QAAQ,EAAE,IAFJ;AAGN9I,YAAAA,IAAI,EAAE;AAHA,WAxGF;AA6GRoM,UAAAA,UAAU,EAAE;AACR5N,YAAAA,WAAW,EAAE,sJADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE,WA7GJ;AAkHRpB,UAAAA,OAAO,EAAE;AACLJ,YAAAA,WAAW,EAAE,gIADR;AAELiC,YAAAA,MAAM,EAAE,OAFH;AAGLT,YAAAA,IAAI,EAAE;AAHD;AAlHD,SAFsB;AA0HlCA,QAAAA,IAAI,EAAE;AA1H4B,OA/tDjC;AA21DLwR,MAAAA,kDAAkD,EAAE;AAChDhT,QAAAA,WAAW,EAAE,qCADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACRkR,UAAAA,QAAQ,EAAE;AACNjT,YAAAA,WAAW,EAAE,sGADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WADF;AAKR0R,UAAAA,SAAS,EAAE;AACPlT,YAAAA,WAAW,EAAE,wGADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC;AALH,SAFoC;AAYhDA,QAAAA,IAAI,EAAE;AAZ0C,OA31D/C;AAy2DL2R,MAAAA,mDAAmD,EAAE;AACjDnT,QAAAA,WAAW,EAAE,uCADoC;AAEjD+B,QAAAA,UAAU,EAAE;AACRqR,UAAAA,OAAO,EAAE;AAAEpT,YAAAA,WAAW,EAAE,6CAAf;AAA8DwB,YAAAA,IAAI,EAAE;AAApE,WADD;AAER6R,UAAAA,gBAAgB,EAAE;AACdrT,YAAAA,WAAW,EAAE,8FADC;AAEdiC,YAAAA,MAAM,EAAE,OAFM;AAGdT,YAAAA,IAAI,EAAE;AAHQ;AAFV,SAFqC;AAUjDA,QAAAA,IAAI,EAAE;AAV2C,OAz2DhD;AAq3DL8R,MAAAA,0CAA0C,EAAE;AACxCtT,QAAAA,WAAW,EAAE,oEAD2B;AAExC+B,QAAAA,UAAU,EAAE;AACRkH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,gEADR;AAELwB,YAAAA,IAAI,EAAE;AAFD;AADD,SAF4B;AAQxCA,QAAAA,IAAI,EAAE;AARkC,OAr3DvC;AA+3DL+R,MAAAA,kDAAkD,EAAE;AAChDvT,QAAAA,WAAW,EAAE,wCADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACRyR,UAAAA,SAAS,EAAE;AACPxT,YAAAA,WAAW,EAAE,8CADN;AAEP6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFA;AAGPA,YAAAA,IAAI,EAAE;AAHC,WADH;AAMRiS,UAAAA,cAAc,EAAE;AACZzS,YAAAA,IAAI,EAAE;AADM;AANR,SAFoC;AAYhDQ,QAAAA,IAAI,EAAE;AAZ0C,OA/3D/C;AA64DLkS,MAAAA,wDAAwD,EAAE;AACtD1T,QAAAA,WAAW,EAAE,8CADyC;AAEtD+B,QAAAA,UAAU,EAAE;AACR4R,UAAAA,yBAAyB,EAAE;AACvB3S,YAAAA,IAAI,EAAE;AADiB,WADnB;AAIR4S,UAAAA,QAAQ,EAAE;AACNjQ,YAAAA,oBAAoB,EAAE;AAClB3C,cAAAA,IAAI,EAAE;AADY,aADhB;AAINhB,YAAAA,WAAW,EAAE,8GAJP;AAKNwB,YAAAA,IAAI,EAAE;AALA;AAJF,SAF0C;AActDA,QAAAA,IAAI,EAAE;AAdgD,OA74DrD;AA65DLqS,MAAAA,6CAA6C,EAAE;AAC3C7T,QAAAA,WAAW,EAAE,6FAD8B;AAE3C+B,QAAAA,UAAU,EAAE;AACRX,UAAAA,MAAM,EAAE;AACJpB,YAAAA,WAAW,EAAE,8EADT;AAEJsK,YAAAA,QAAQ,EAAE,IAFN;AAGJ9I,YAAAA,IAAI,EAAE;AAHF,WADA;AAMRsS,UAAAA,iBAAiB,EAAE;AACf9T,YAAAA,WAAW,EAAE,kCADE;AAEfsK,YAAAA,QAAQ,EAAE,IAFK;AAGf9I,YAAAA,IAAI,EAAE;AAHS,WANX;AAWRuS,UAAAA,WAAW,EAAE;AACT/S,YAAAA,IAAI,EAAE;AADG;AAXL,SAF+B;AAiB3CQ,QAAAA,IAAI,EAAE;AAjBqC,OA75D1C;AAg7DLwS,MAAAA,+CAA+C,EAAE;AAC7ChU,QAAAA,WAAW,EAAE,4CADgC;AAE7C+B,QAAAA,UAAU,EAAE;AACRkS,UAAAA,KAAK,EAAE;AAAEjU,YAAAA,WAAW,EAAE,6BAAf;AAA8CwB,YAAAA,IAAI,EAAE;AAApD,WADC;AAER0S,UAAAA,UAAU,EAAE;AACRlU,YAAAA,WAAW,EAAE,qDADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAFJ;AAMR2S,UAAAA,MAAM,EAAE;AAAEnU,YAAAA,WAAW,EAAE,0BAAf;AAA2CwB,YAAAA,IAAI,EAAE;AAAjD;AANA,SAFiC;AAU7CA,QAAAA,IAAI,EAAE;AAVuC,OAh7D5C;AA47DL4S,MAAAA,uCAAuC,EAAE;AACrCpU,QAAAA,WAAW,EAAE,yCADwB;AAErC+B,QAAAA,UAAU,EAAE;AACRgG,UAAAA,iBAAiB,EAAE;AACf/H,YAAAA,WAAW,EAAE,gDADE;AAEf6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFQ;AAGfA,YAAAA,IAAI,EAAE;AAHS,WADX;AAMR6S,UAAAA,iBAAiB,EAAE;AACfrT,YAAAA,IAAI,EAAE;AADS,WANX;AASRsT,UAAAA,MAAM,EAAE;AAAEtT,YAAAA,IAAI,EAAE;AAAR,WATA;AAURwM,UAAAA,GAAG,EAAE;AACDxM,YAAAA,IAAI,EAAE;AADL,WAVG;AAaRuT,UAAAA,UAAU,EAAE;AACRvT,YAAAA,IAAI,EAAE;AADE,WAbJ;AAgBRwT,UAAAA,WAAW,EAAE;AACTxT,YAAAA,IAAI,EAAE;AADG,WAhBL;AAmBRd,UAAAA,IAAI,EAAE;AACFF,YAAAA,WAAW,EAAE,6FADX;AAEFsK,YAAAA,QAAQ,EAAE,IAFR;AAGF9I,YAAAA,IAAI,EAAE;AAHJ,WAnBE;AAwBRiT,UAAAA,YAAY,EAAE;AACVzT,YAAAA,IAAI,EAAE;AADI,WAxBN;AA2BR0T,UAAAA,KAAK,EAAE;AAAE1T,YAAAA,IAAI,EAAE;AAAR,WA3BC;AA4BR2T,UAAAA,MAAM,EAAE;AAAE3T,YAAAA,IAAI,EAAE;AAAR,WA5BA;AA6BR4T,UAAAA,OAAO,EAAE;AACL5U,YAAAA,WAAW,EAAE,0CADR;AAELoC,YAAAA,IAAI,EAAE,CAAC,qBAAD,EAAwB,mBAAxB,EAA6C,eAA7C,CAFD;AAGLkI,YAAAA,QAAQ,EAAE,IAHL;AAIL9I,YAAAA,IAAI,EAAE;AAJD;AA7BD,SAFyB;AAsCrCA,QAAAA,IAAI,EAAE;AAtC+B,OA57DpC;AAo+DLqT,MAAAA,oDAAoD,EAAE;AAClD7U,QAAAA,WAAW,EAAE,yCADqC;AAElD+B,QAAAA,UAAU,EAAE;AACR/B,UAAAA,WAAW,EAAE;AAAEA,YAAAA,WAAW,EAAE,wBAAf;AAAyCwB,YAAAA,IAAI,EAAE;AAA/C,WADL;AAERsT,UAAAA,KAAK,EAAE;AAAE9U,YAAAA,WAAW,EAAE,eAAf;AAAgCwB,YAAAA,IAAI,EAAE;AAAtC;AAFC,SAFsC;AAMlDA,QAAAA,IAAI,EAAE;AAN4C,OAp+DjD;AA4+DLuT,MAAAA,0DAA0D,EAAE;AACxD/U,QAAAA,WAAW,EAAE,qGAD2C;AAExD+B,QAAAA,UAAU,EAAE;AACRiT,UAAAA,iBAAiB,EAAE;AACfhU,YAAAA,IAAI,EAAE;AADS,WADX;AAIRgI,UAAAA,QAAQ,EAAE;AAAEhJ,YAAAA,WAAW,EAAE,kBAAf;AAAmCwB,YAAAA,IAAI,EAAE;AAAzC,WAJF;AAKRyT,UAAAA,YAAY,EAAE;AAAEjV,YAAAA,WAAW,EAAE,sBAAf;AAAuCwB,YAAAA,IAAI,EAAE;AAA7C,WALN;AAMRyH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,uDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAND;AAURtB,UAAAA,IAAI,EAAE;AACFF,YAAAA,WAAW,EAAE,sIADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ;AAVE,SAF4C;AAiBxDA,QAAAA,IAAI,EAAE;AAjBkD,OA5+DvD;AA+/DL0T,MAAAA,wCAAwC,EAAE;AACtClV,QAAAA,WAAW,EAAE,qJADyB;AAEtC+B,QAAAA,UAAU,EAAE;AACRoT,UAAAA,YAAY,EAAE;AACVnV,YAAAA,WAAW,EAAE,kDADH;AAEVsK,YAAAA,QAAQ,EAAE,IAFA;AAGV9I,YAAAA,IAAI,EAAE;AAHI,WADN;AAMR4T,UAAAA,iBAAiB,EAAE;AACfpV,YAAAA,WAAW,EAAE,mJADE;AAEfoC,YAAAA,IAAI,EAAE,CACF,gCADE,EAEF,aAFE,EAGF,aAHE,EAIF,QAJE,EAKF,WALE,CAFS;AASfkI,YAAAA,QAAQ,EAAE,IATK;AAUf9I,YAAAA,IAAI,EAAE;AAVS,WANX;AAkBR6T,UAAAA,6BAA6B,EAAE;AAC3BrV,YAAAA,WAAW,EAAE,oFADc;AAE3BiC,YAAAA,MAAM,EAAE,iBAFmB;AAG3BqI,YAAAA,QAAQ,EAAE,IAHiB;AAI3B9I,YAAAA,IAAI,EAAE;AAJqB,WAlBvB;AAwBR8T,UAAAA,mBAAmB,EAAE;AACjBtV,YAAAA,WAAW,EAAE,uDADI;AAEjBsK,YAAAA,QAAQ,EAAE,IAFO;AAGjB9I,YAAAA,IAAI,EAAE;AAHW,WAxBb;AA6BR+T,UAAAA,eAAe,EAAE;AAAEvV,YAAAA,WAAW,EAAE,+BAAf;AAAgDwB,YAAAA,IAAI,EAAE;AAAtD;AA7BT,SAF0B;AAiCtCA,QAAAA,IAAI,EAAE;AAjCgC,OA//DrC;AAkiELgU,MAAAA,sCAAsC,EAAE;AACpCxV,QAAAA,WAAW,EAAE,gFADuB;AAEpC+B,QAAAA,UAAU,EAAE;AACRkH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,uDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WADD;AAKRiU,UAAAA,gBAAgB,EAAE;AACdzV,YAAAA,WAAW,EAAE,8LADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ;AALV,SAFwB;AAYpCA,QAAAA,IAAI,EAAE;AAZ8B,OAliEnC;AAgjELkU,MAAAA,8CAA8C,EAAE;AAC5C1V,QAAAA,WAAW,EAAE,iZAD+B;AAE5C+B,QAAAA,UAAU,EAAE;AACR0D,UAAAA,IAAI,EAAE;AAAEzF,YAAAA,WAAW,EAAE,YAAf;AAA6BwB,YAAAA,IAAI,EAAE;AAAnC,WADE;AAERmU,UAAAA,UAAU,EAAE;AACR3V,YAAAA,WAAW,EAAE,mBADL;AAERoC,YAAAA,IAAI,EAAE,CAAC,yBAAD,EAA4B,YAA5B,EAA0C,MAA1C,CAFE;AAGRZ,YAAAA,IAAI,EAAE;AAHE,WAFJ;AAORkE,UAAAA,UAAU,EAAE;AACR1F,YAAAA,WAAW,EAAE,sEADL;AAERsK,YAAAA,QAAQ,EAAE,IAFF;AAGR9I,YAAAA,IAAI,EAAE;AAHE,WAPJ;AAYRwE,UAAAA,OAAO,EAAE;AAAEhG,YAAAA,WAAW,EAAE,kBAAf;AAAmCwB,YAAAA,IAAI,EAAE;AAAzC,WAZD;AAaRoU,UAAAA,iBAAiB,EAAE;AAAE5V,YAAAA,WAAW,EAAE,qBAAf;AAAsCwB,YAAAA,IAAI,EAAE;AAA5C,WAbX;AAcRqU,UAAAA,eAAe,EAAE;AAAE7V,YAAAA,WAAW,EAAE,4BAAf;AAA6CwB,YAAAA,IAAI,EAAE;AAAnD,WAdT;AAeRyE,UAAAA,OAAO,EAAE;AAAEjG,YAAAA,WAAW,EAAE,sBAAf;AAAuCwB,YAAAA,IAAI,EAAE;AAA7C;AAfD,SAFgC;AAmB5CA,QAAAA,IAAI,EAAE;AAnBsC,OAhjE3C;AAqkELsU,MAAAA,0DAA0D,EAAE;AACxD9V,QAAAA,WAAW,EAAE,2EAD2C;AAExD+B,QAAAA,UAAU,EAAE;AACRgU,UAAAA,WAAW,EAAE;AACT/V,YAAAA,WAAW,EAAE,oEADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,+DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WALD;AASRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,qEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AATN,SAF4C;AAgBxDA,QAAAA,IAAI,EAAE;AAhBkD,OArkEvD;AAulELwU,MAAAA,2CAA2C,EAAE;AACzChW,QAAAA,WAAW,EAAE,yHAD4B;AAEzC+B,QAAAA,UAAU,EAAE;AACRkU,UAAAA,SAAS,EAAE;AACPjW,YAAAA,WAAW,EAAE,2EADN;AAEPoC,YAAAA,IAAI,EAAE,CACF,4BADE,EAEF,aAFE,EAGF,WAHE,EAIF,UAJE,EAKF,QALE,EAMF,YANE,EAOF,KAPE,EAQF,aARE,EASF,MATE,EAUF,QAVE,EAWF,eAXE,EAYF,QAZE,EAaF,QAbE,EAcF,iBAdE,CAFC;AAkBPkI,YAAAA,QAAQ,EAAE,IAlBH;AAmBP9I,YAAAA,IAAI,EAAE;AAnBC,WADH;AAsBRyQ,UAAAA,UAAU,EAAE;AACRjS,YAAAA,WAAW,EAAE,mLADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRqI,YAAAA,QAAQ,EAAE,IAHF;AAIR9I,YAAAA,IAAI,EAAE;AAJE,WAtBJ;AA4BR4Q,UAAAA,MAAM,EAAE;AACJpS,YAAAA,WAAW,EAAE,qHADT;AAEJiC,YAAAA,MAAM,EAAE,OAFJ;AAGJqI,YAAAA,QAAQ,EAAE,IAHN;AAIJ9I,YAAAA,IAAI,EAAE;AAJF,WA5BA;AAkCR6Q,UAAAA,aAAa,EAAE;AACXrS,YAAAA,WAAW,EAAE,yGADF;AAEXsK,YAAAA,QAAQ,EAAE,IAFC;AAGX9I,YAAAA,IAAI,EAAE;AAHK,WAlCP;AAuCR+Q,UAAAA,SAAS,EAAE;AACPvS,YAAAA,WAAW,EAAE,oCADN;AAEPsK,YAAAA,QAAQ,EAAE,IAFH;AAGP9I,YAAAA,IAAI,EAAE;AAHC;AAvCH,SAF6B;AA+CzCA,QAAAA,IAAI,EAAE;AA/CmC,OAvlExC;AAwoEL0U,MAAAA,+CAA+C,EAAE;AAC7ClW,QAAAA,WAAW,EAAE,2FADgC;AAE7C+B,QAAAA,UAAU,EAAE;AAAEoU,UAAAA,eAAe,EAAE;AAAEnW,YAAAA,WAAW,EAAE,sBAAf;AAAuCwB,YAAAA,IAAI,EAAE;AAA7C;AAAnB,SAFiC;AAG7CA,QAAAA,IAAI,EAAE;AAHuC,OAxoE5C;AA6oEL4U,MAAAA,0CAA0C,EAAE;AACxCpW,QAAAA,WAAW,EAAE,4FAD2B;AAExC+B,QAAAA,UAAU,EAAE;AACRsU,UAAAA,eAAe,EAAE;AACbrW,YAAAA,WAAW,EAAE,8DADA;AAEb6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFM;AAGbQ,YAAAA,IAAI,EAAE;AAHO,WADT;AAMR8U,UAAAA,WAAW,EAAE;AAAEtW,YAAAA,WAAW,EAAE,0CAAf;AAA2DwB,YAAAA,IAAI,EAAE;AAAjE,WANL;AAOR+U,UAAAA,WAAW,EAAE;AACTvW,YAAAA,WAAW,EAAE,wDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAPL;AAWRgV,UAAAA,MAAM,EAAE;AAAExW,YAAAA,WAAW,EAAE,wCAAf;AAAyDwB,YAAAA,IAAI,EAAE;AAA/D;AAXA,SAF4B;AAexCA,QAAAA,IAAI,EAAE;AAfkC,OA7oEvC;AA8pELiV,MAAAA,kDAAkD,EAAE;AAChDzW,QAAAA,WAAW,EAAE,kFADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,8CADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKRyH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,uDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WALD;AASR2G,UAAAA,SAAS,EAAE;AAAEnH,YAAAA,IAAI,EAAE;AAAR,WATH;AAURd,UAAAA,IAAI,EAAE;AACFF,YAAAA,WAAW,EAAE,yJADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ,WAVE;AAcRkV,UAAAA,QAAQ,EAAE;AAAE1V,YAAAA,IAAI,EAAE;AAAR;AAdF,SAFoC;AAkBhDQ,QAAAA,IAAI,EAAE;AAlB0C,OA9pE/C;AAkrELmV,MAAAA,4CAA4C,EAAE;AAC1C3W,QAAAA,WAAW,EAAE,4DAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACR6U,UAAAA,kBAAkB,EAAE;AAChB5W,YAAAA,WAAW,EAAE,uRADG;AAEhBwB,YAAAA,IAAI,EAAE;AAFU;AADZ,SAF8B;AAQ1CA,QAAAA,IAAI,EAAE;AARoC,OAlrEzC;AA4rELqV,MAAAA,uEAAuE,EAAE;AACrE7W,QAAAA,WAAW,EAAE,yCADwD;AAErE+B,QAAAA,UAAU,EAAE;AACR+U,UAAAA,0BAA0B,EAAE;AACxB9W,YAAAA,WAAW,EAAE,qBADW;AAExB6C,YAAAA,KAAK,EAAE;AACH7B,cAAAA,IAAI,EAAE;AADH,aAFiB;AAKxBQ,YAAAA,IAAI,EAAE;AALkB,WADpB;AAQR8D,UAAAA,aAAa,EAAE;AACXtF,YAAAA,WAAW,EAAE,gGADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK;AARP,SAFyD;AAerEA,QAAAA,IAAI,EAAE;AAf+D,OA5rEpE;AA6sELuV,MAAAA,iEAAiE,EAAE;AAC/D/W,QAAAA,WAAW,EAAE,uCADkD;AAE/D+B,QAAAA,UAAU,EAAE;AACRiV,UAAAA,oBAAoB,EAAE;AAClBhX,YAAAA,WAAW,EAAE,qBADK;AAElB6C,YAAAA,KAAK,EAAE;AACH7B,cAAAA,IAAI,EAAE;AADH,aAFW;AAKlBQ,YAAAA,IAAI,EAAE;AALY,WADd;AAQR8D,UAAAA,aAAa,EAAE;AACXtF,YAAAA,WAAW,EAAE,gGADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK;AARP,SAFmD;AAe/DA,QAAAA,IAAI,EAAE;AAfyD,OA7sE9D;AA8tELyV,MAAAA,+DAA+D,EAAE;AAC7DjX,QAAAA,WAAW,EAAE,qCADgD;AAE7D+B,QAAAA,UAAU,EAAE;AACRmV,UAAAA,kBAAkB,EAAE;AAChBlX,YAAAA,WAAW,EAAE,qBADG;AAEhB6C,YAAAA,KAAK,EAAE;AACH7B,cAAAA,IAAI,EAAE;AADH,aAFS;AAKhBQ,YAAAA,IAAI,EAAE;AALU,WADZ;AAQR8D,UAAAA,aAAa,EAAE;AACXtF,YAAAA,WAAW,EAAE,gGADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK;AARP,SAFiD;AAe7DA,QAAAA,IAAI,EAAE;AAfuD,OA9tE5D;AA+uEL2V,MAAAA,4DAA4D,EAAE;AAC1DnX,QAAAA,WAAW,EAAE,kCAD6C;AAE1D+B,QAAAA,UAAU,EAAE;AACRuD,UAAAA,aAAa,EAAE;AACXtF,YAAAA,WAAW,EAAE,gGADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WADP;AAKR4V,UAAAA,eAAe,EAAE;AACbpX,YAAAA,WAAW,EAAE,qBADA;AAEb6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFM;AAGbQ,YAAAA,IAAI,EAAE;AAHO;AALT,SAF8C;AAa1DA,QAAAA,IAAI,EAAE;AAboD,OA/uEzD;AA8vEL6V,MAAAA,oDAAoD,EAAE;AAClDrX,QAAAA,WAAW,EAAE,mCADqC;AAElD+B,QAAAA,UAAU,EAAE;AACRuD,UAAAA,aAAa,EAAE;AACXtF,YAAAA,WAAW,EAAE,4CADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WADP;AAKR8V,UAAAA,OAAO,EAAE;AACLtX,YAAAA,WAAW,EAAE,kDADR;AAEL6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLQ,YAAAA,IAAI,EAAE;AAHD;AALD,SAFsC;AAalDA,QAAAA,IAAI,EAAE;AAb4C,OA9vEjD;AA6wEL+V,MAAAA,iDAAiD,EAAE;AAC/CvX,QAAAA,WAAW,EAAE,uDADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACRyV,UAAAA,cAAc,EAAE;AACZxW,YAAAA,IAAI,EAAE;AADM;AADR,SAFmC;AAO/CQ,QAAAA,IAAI,EAAE;AAPyC,OA7wE9C;AAsxELiW,MAAAA,sDAAsD,EAAE;AACpDzX,QAAAA,WAAW,EAAE,gEADuC;AAEpD+B,QAAAA,UAAU,EAAE;AACR2V,UAAAA,gBAAgB,EAAE;AACd1X,YAAAA,WAAW,EAAE,mDADC;AAEd6C,YAAAA,KAAK,EAAE;AAAET,cAAAA,IAAI,EAAE,CAAC,sBAAD,EAAyB,WAAzB,CAAR;AAA+CZ,cAAAA,IAAI,EAAE;AAArD,aAFO;AAGdA,YAAAA,IAAI,EAAE;AAHQ,WADV;AAMRmW,UAAAA,KAAK,EAAE;AACH3X,YAAAA,WAAW,EAAE,uEADV;AAEHoC,YAAAA,IAAI,EAAE,CAAC,mBAAD,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,WAA7C,CAFH;AAGHZ,YAAAA,IAAI,EAAE;AAHH;AANC,SAFwC;AAcpDA,QAAAA,IAAI,EAAE;AAd8C,OAtxEnD;AAsyELoW,MAAAA,kDAAkD,EAAE;AAChD5X,QAAAA,WAAW,EAAE,sDADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACR8V,UAAAA,YAAY,EAAE;AACV7X,YAAAA,WAAW,EAAE,+CADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WADN;AAKRsW,UAAAA,qBAAqB,EAAE;AACnB9X,YAAAA,WAAW,EAAE,gTADM;AAEnBwB,YAAAA,IAAI,EAAE;AAFa;AALf,SAFoC;AAYhDA,QAAAA,IAAI,EAAE;AAZ0C,OAtyE/C;AAozELuW,MAAAA,mDAAmD,EAAE;AACjD/X,QAAAA,WAAW,EAAE,0DADoC;AAEjD+B,QAAAA,UAAU,EAAE;AACRiW,UAAAA,aAAa,EAAE;AACXhY,YAAAA,WAAW,EAAE,8DADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WADP;AAKRyW,UAAAA,SAAS,EAAE;AAAEjX,YAAAA,IAAI,EAAE;AAAR,WALH;AAMRkX,UAAAA,OAAO,EAAE;AAAElX,YAAAA,IAAI,EAAE;AAAR;AAND,SAFqC;AAUjDQ,QAAAA,IAAI,EAAE;AAV2C,OApzEhD;AAg0EL2W,MAAAA,+CAA+C,EAAE;AAC7CnY,QAAAA,WAAW,EAAE,6DADgC;AAE7C+B,QAAAA,UAAU,EAAE;AACRiH,UAAAA,QAAQ,EAAE;AAAEhJ,YAAAA,WAAW,EAAE,mCAAf;AAAoDwB,YAAAA,IAAI,EAAE;AAA1D,WADF;AAERyT,UAAAA,YAAY,EAAE;AACVjV,YAAAA,WAAW,EAAE,kEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI,WAFN;AAMRyI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,8CADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WANL;AAURyH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,uDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WAVD;AAcR4W,UAAAA,MAAM,EAAE;AAAEpY,YAAAA,WAAW,EAAE,uCAAf;AAAwDwB,YAAAA,IAAI,EAAE;AAA9D,WAdA;AAeRtB,UAAAA,IAAI,EAAE;AACFF,YAAAA,WAAW,EAAE,sJADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ,WAfE;AAmBR6W,UAAAA,YAAY,EAAE;AACVrX,YAAAA,IAAI,EAAE;AADI;AAnBN,SAFiC;AAyB7CQ,QAAAA,IAAI,EAAE;AAzBuC,OAh0E5C;AA21EL8W,MAAAA,kDAAkD,EAAE;AAChDtY,QAAAA,WAAW,EAAE,iWADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACRgP,UAAAA,IAAI,EAAE;AACF/Q,YAAAA,WAAW,EAAE,4EADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ,WADE;AAKRqD,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,kEADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WALD;AASR2M,UAAAA,KAAK,EAAE;AACHnO,YAAAA,WAAW,EAAE,uEADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH;AATC,SAFoC;AAgBhDA,QAAAA,IAAI,EAAE;AAhB0C,OA31E/C;AA62EL+W,MAAAA,4CAA4C,EAAE;AAC1CvY,QAAAA,WAAW,EAAE,gFAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACRyW,UAAAA,oBAAoB,EAAE;AAClBxY,YAAAA,WAAW,EAAE,2GADK;AAElBwB,YAAAA,IAAI,EAAE;AAFY,WADd;AAKRiX,UAAAA,kBAAkB,EAAE;AAChBzY,YAAAA,WAAW,EAAE,gHADG;AAEhBwB,YAAAA,IAAI,EAAE;AAFU;AALZ,SAF8B;AAY1CA,QAAAA,IAAI,EAAE;AAZoC,OA72EzC;AA23ELkX,MAAAA,4CAA4C,EAAE;AAC1C1Y,QAAAA,WAAW,EAAE,8EAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACRkH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,8DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WADD;AAKRmX,UAAAA,gBAAgB,EAAE;AACdhV,YAAAA,oBAAoB,EAAE;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aADR;AAEdxB,YAAAA,WAAW,EAAE,mDAFC;AAGdwB,YAAAA,IAAI,EAAE;AAHQ;AALV,SAF8B;AAa1CA,QAAAA,IAAI,EAAE;AAboC,OA33EzC;AA04ELoX,MAAAA,4CAA4C,EAAE;AAC1C5Y,QAAAA,WAAW,EAAE,kCAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACR8W,UAAAA,iBAAiB,EAAE;AACf7X,YAAAA,IAAI,EAAE;AADS;AADX,SAF8B;AAO1CQ,QAAAA,IAAI,EAAE;AAPoC,OA14EzC;AAm5ELsX,MAAAA,+CAA+C,EAAE;AAC7C9Y,QAAAA,WAAW,EAAE,gFADgC;AAE7C+B,QAAAA,UAAU,EAAE;AACRkH,UAAAA,OAAO,EAAE;AACLjJ,YAAAA,WAAW,EAAE,qDADR;AAELwB,YAAAA,IAAI,EAAE;AAFD;AADD,SAFiC;AAQ7CA,QAAAA,IAAI,EAAE;AARuC,OAn5E5C;AA65ELuX,MAAAA,0CAA0C,EAAE;AACxC/Y,QAAAA,WAAW,EAAE,4BAD2B;AAExC+B,QAAAA,UAAU,EAAE;AACRiX,UAAAA,WAAW,EAAE;AAAEhZ,YAAAA,WAAW,EAAE,+BAAf;AAAgDwB,YAAAA,IAAI,EAAE;AAAtD,WADL;AAERwG,UAAAA,mBAAmB,EAAE;AACjBhH,YAAAA,IAAI,EAAE;AADW,WAFb;AAKRiY,UAAAA,OAAO,EAAE;AAAEjY,YAAAA,IAAI,EAAE;AAAR,WALD;AAMRoH,UAAAA,2BAA2B,EAAE;AACzBpH,YAAAA,IAAI,EAAE;AADmB,WANrB;AASRkY,UAAAA,MAAM,EAAE;AACJlZ,YAAAA,WAAW,EAAE,uCADT;AAEJoC,YAAAA,IAAI,EAAE,CAAC,oBAAD,EAAuB,SAAvB,EAAkC,aAAlC,CAFF;AAGJZ,YAAAA,IAAI,EAAE;AAHF,WATA;AAcR8G,UAAAA,qBAAqB,EAAE;AACnBtH,YAAAA,IAAI,EAAE;AADa,WAdf;AAiBRuH,UAAAA,kCAAkC,EAAE;AAChCvH,YAAAA,IAAI,EAAE;AAD0B,WAjB5B;AAoBRmY,UAAAA,IAAI,EAAE;AAAEnY,YAAAA,IAAI,EAAE;AAAR,WApBE;AAqBRyH,UAAAA,mBAAmB,EAAE;AACjBzH,YAAAA,IAAI,EAAE;AADW;AArBb,SAF4B;AA2BxCQ,QAAAA,IAAI,EAAE;AA3BkC,OA75EvC;AA07EL4X,MAAAA,wCAAwC,EAAE;AACtCpZ,QAAAA,WAAW,EAAE,0BADyB;AAEtC+B,QAAAA,UAAU,EAAE;AACRsX,UAAAA,WAAW,EAAE;AACTrY,YAAAA,IAAI,EAAE;AADG,WADL;AAIRsY,UAAAA,eAAe,EAAE;AACbtZ,YAAAA,WAAW,EAAE,oDADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO;AAJT,SAF0B;AAWtCA,QAAAA,IAAI,EAAE;AAXgC,OA17ErC;AAu8EL+X,MAAAA,6CAA6C,EAAE;AAC3CvZ,QAAAA,WAAW,EAAE,iDAD8B;AAE3C+B,QAAAA,UAAU,EAAE;AACRyX,UAAAA,oBAAoB,EAAE;AAClBxZ,YAAAA,WAAW,EAAE,gEADK;AAElBwB,YAAAA,IAAI,EAAE;AAFY,WADd;AAKRiY,UAAAA,SAAS,EAAE;AAAEzY,YAAAA,IAAI,EAAE;AAAR,WALH;AAMRsF,UAAAA,KAAK,EAAE;AAAEtF,YAAAA,IAAI,EAAE;AAAR,WANC;AAOR0Y,UAAAA,UAAU,EAAE;AAAE1Y,YAAAA,IAAI,EAAE;AAAR,WAPJ;AAQRyF,UAAAA,WAAW,EAAE;AACTzF,YAAAA,IAAI,EAAE;AADG;AARL,SAF+B;AAc3CQ,QAAAA,IAAI,EAAE;AAdqC,OAv8E1C;AAu9ELmY,MAAAA,4CAA4C,EAAE;AAC1C3Z,QAAAA,WAAW,EAAE,0CAD6B;AAE1C+B,QAAAA,UAAU,EAAE;AACRjB,UAAAA,OAAO,EAAE;AACLd,YAAAA,WAAW,EAAE,+RADR;AAELsK,YAAAA,QAAQ,EAAE,IAFL;AAGL9I,YAAAA,IAAI,EAAE;AAHD;AADD,SAF8B;AAS1CA,QAAAA,IAAI,EAAE;AAToC,OAv9EzC;AAk+ELoY,MAAAA,qCAAqC,EAAE;AACnC5Z,QAAAA,WAAW,EAAE,8BADsB;AAEnC+B,QAAAA,UAAU,EAAE;AACR8X,UAAAA,IAAI,EAAE;AAAE7Z,YAAAA,WAAW,EAAE,iBAAf;AAAkCwB,YAAAA,IAAI,EAAE;AAAxC,WADE;AAERiM,UAAAA,QAAQ,EAAE;AAAEzN,YAAAA,WAAW,EAAE,qBAAf;AAAsCwB,YAAAA,IAAI,EAAE;AAA5C,WAFF;AAGRsY,UAAAA,IAAI,EAAE;AAAE9Z,YAAAA,WAAW,EAAE,iBAAf;AAAkCiC,YAAAA,MAAM,EAAE,OAA1C;AAAmDT,YAAAA,IAAI,EAAE;AAAzD,WAHE;AAIRuY,UAAAA,YAAY,EAAE;AACV/Z,YAAAA,WAAW,EAAE,qBADH;AAEVoC,YAAAA,IAAI,EAAE,CAAC,2BAAD,EAA8B,KAA9B,EAAqC,WAArC,CAFI;AAGVZ,YAAAA,IAAI,EAAE;AAHI,WAJN;AASRwY,UAAAA,WAAW,EAAE;AAAEha,YAAAA,WAAW,EAAE,iCAAf;AAAkDwB,YAAAA,IAAI,EAAE;AAAxD,WATL;AAURyY,UAAAA,QAAQ,EAAE;AAAEja,YAAAA,WAAW,EAAE,qBAAf;AAAsCwB,YAAAA,IAAI,EAAE;AAA5C;AAVF,SAFuB;AAcnCA,QAAAA,IAAI,EAAE;AAd6B,OAl+ElC;AAk/EL0Y,MAAAA,8CAA8C,EAAE;AAC5Cla,QAAAA,WAAW,EAAE,kFAD+B;AAE5C+B,QAAAA,UAAU,EAAE;AACRoY,UAAAA,SAAS,EAAE;AACPna,YAAAA,WAAW,EAAE,4CADN;AAEPiC,YAAAA,MAAM,EAAE,iBAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC,WADH;AAMR2U,UAAAA,eAAe,EAAE;AAAEnW,YAAAA,WAAW,EAAE,iCAAf;AAAkDwB,YAAAA,IAAI,EAAE;AAAxD;AANT,SAFgC;AAU5CA,QAAAA,IAAI,EAAE;AAVsC,OAl/E3C;AA8/EL4Y,MAAAA,yCAAyC,EAAE;AACvCpa,QAAAA,WAAW,EAAE,+KAD0B;AAEvC+B,QAAAA,UAAU,EAAE;AACRiX,UAAAA,WAAW,EAAE;AACThZ,YAAAA,WAAW,EAAE,oDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKR6Y,UAAAA,cAAc,EAAE;AACZra,YAAAA,WAAW,EAAE,2HADD;AAEZ6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFK;AAGZsJ,YAAAA,QAAQ,EAAE,IAHE;AAIZ9I,YAAAA,IAAI,EAAE;AAJM,WALR;AAWR8Y,UAAAA,UAAU,EAAE;AAAEta,YAAAA,WAAW,EAAE,0CAAf;AAA2DwB,YAAAA,IAAI,EAAE;AAAjE;AAXJ,SAF2B;AAevCA,QAAAA,IAAI,EAAE;AAfiC,OA9/EtC;AA+gFL+Y,MAAAA,+CAA+C,EAAE;AAC7Cva,QAAAA,WAAW,EAAE,qCADgC;AAE7C+B,QAAAA,UAAU,EAAE;AACR2S,UAAAA,KAAK,EAAE;AACH1U,YAAAA,WAAW,EAAE,qEADV;AAEHiC,YAAAA,MAAM,EAAE,OAFL;AAGHT,YAAAA,IAAI,EAAE;AAHH,WADC;AAMRgZ,UAAAA,aAAa,EAAE;AACXxa,YAAAA,WAAW,EAAE,wCADF;AAEXiC,YAAAA,MAAM,EAAE,iBAFG;AAGXT,YAAAA,IAAI,EAAE;AAHK,WANP;AAWRiZ,UAAAA,SAAS,EAAE;AACPza,YAAAA,WAAW,EAAE,kCADN;AAEPiC,YAAAA,MAAM,EAAE,iBAFD;AAGPT,YAAAA,IAAI,EAAE;AAHC;AAXH,SAFiC;AAmB7CA,QAAAA,IAAI,EAAE;AAnBuC,OA/gF5C;AAoiFLkZ,MAAAA,uCAAuC,EAAE;AACrC1a,QAAAA,WAAW,EAAE,2EADwB;AAErC+B,QAAAA,UAAU,EAAE;AACR4Y,UAAAA,mBAAmB,EAAE;AACjB3a,YAAAA,WAAW,EAAE,sDADI;AAEjBwB,YAAAA,IAAI,EAAE;AAFW,WADb;AAKRoZ,UAAAA,WAAW,EAAE;AACT5a,YAAAA,WAAW,EAAE,6LADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WALL;AASRyI,UAAAA,WAAW,EAAE;AAAEjK,YAAAA,WAAW,EAAE,6BAAf;AAA8CwB,YAAAA,IAAI,EAAE;AAApD,WATL;AAUR0G,UAAAA,mBAAmB,EAAE;AACjBlI,YAAAA,WAAW,EAAE,kDADI;AAEjBwB,YAAAA,IAAI,EAAE;AAFW,WAVb;AAcRqZ,UAAAA,qBAAqB,EAAE;AACnB7a,YAAAA,WAAW,EAAE,mDADM;AAEnBwB,YAAAA,IAAI,EAAE;AAFa,WAdf;AAkBRkY,UAAAA,UAAU,EAAE;AAAE1Y,YAAAA,IAAI,EAAE;AAAR,WAlBJ;AAmBR8Z,UAAAA,WAAW,EAAE;AACT9Z,YAAAA,IAAI,EAAE;AADG,WAnBL;AAsBR+Z,UAAAA,SAAS,EAAE;AACP/Z,YAAAA,IAAI,EAAE;AADC,WAtBH;AAyBRd,UAAAA,IAAI,EAAE;AACFF,YAAAA,WAAW,EAAE,kGADX;AAEFsK,YAAAA,QAAQ,EAAE,IAFR;AAGF9I,YAAAA,IAAI,EAAE;AAHJ,WAzBE;AA8BRmX,UAAAA,gBAAgB,EAAE;AACdhV,YAAAA,oBAAoB,EAAE;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aADR;AAEdxB,YAAAA,WAAW,EAAE,yMAFC;AAGdwB,YAAAA,IAAI,EAAE;AAHQ;AA9BV,SAFyB;AAsCrCA,QAAAA,IAAI,EAAE;AAtC+B,OApiFpC;AA4kFLwZ,MAAAA,wCAAwC,EAAE;AACtChb,QAAAA,WAAW,EAAE,8CADyB;AAEtC+B,QAAAA,UAAU,EAAE;AACRkZ,UAAAA,WAAW,EAAE;AAAEjb,YAAAA,WAAW,EAAE,0CAAf;AAA2DwB,YAAAA,IAAI,EAAE;AAAjE,WADL;AAER0Z,UAAAA,UAAU,EAAE;AACRlb,YAAAA,WAAW,EAAE,+BADL;AAERiC,YAAAA,MAAM,EAAE,iBAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE;AAFJ,SAF0B;AAUtCA,QAAAA,IAAI,EAAE;AAVgC,OA5kFrC;AAwlFL2Z,MAAAA,6CAA6C,EAAE;AAC3Cnb,QAAAA,WAAW,EAAE,mDAD8B;AAE3C+B,QAAAA,UAAU,EAAE;AACRU,UAAAA,gBAAgB,EAAE;AACdzC,YAAAA,WAAW,EAAE,+EADC;AAEdwB,YAAAA,IAAI,EAAE;AAFQ;AADV,SAF+B;AAQ3CA,QAAAA,IAAI,EAAE;AARqC,OAxlF1C;AAkmFL4Z,MAAAA,wDAAwD,EAAE;AACtDpb,QAAAA,WAAW,EAAE,kDADyC;AAEtD+B,QAAAA,UAAU,EAAE;AACRkI,UAAAA,WAAW,EAAE;AACTjK,YAAAA,WAAW,EAAE,0HADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKRqD,UAAAA,OAAO,EAAE;AAAE7E,YAAAA,WAAW,EAAE,qBAAf;AAAsCwB,YAAAA,IAAI,EAAE;AAA5C,WALD;AAMR6Z,UAAAA,qBAAqB,EAAE;AACnBra,YAAAA,IAAI,EAAE;AADa,WANf;AASR8B,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,uJADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AATF,SAF0C;AAgBtDA,QAAAA,IAAI,EAAE;AAhBgD,OAlmFrD;AAonFL8Z,MAAAA,yDAAyD,EAAE;AACvDtb,QAAAA,WAAW,EAAE,iCAD0C;AAEvD+B,QAAAA,UAAU,EAAE;AACR8C,UAAAA,OAAO,EAAE;AAAE7E,YAAAA,WAAW,EAAE,6CAAf;AAA8DwB,YAAAA,IAAI,EAAE;AAApE,WADD;AAER+Z,UAAAA,aAAa,EAAE;AACXva,YAAAA,IAAI,EAAE;AADK,WAFP;AAKRiN,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,kDADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AALN,SAF2C;AAYvDA,QAAAA,IAAI,EAAE;AAZiD,OApnFtD;AAkoFLga,MAAAA,uDAAuD,EAAE;AACrDxb,QAAAA,WAAW,EAAE,oDADwC;AAErD+B,QAAAA,UAAU,EAAE;AACR0Z,UAAAA,wBAAwB,EAAE;AACtBzb,YAAAA,WAAW,EAAE,4EADS;AAEtBwB,YAAAA,IAAI,EAAE;AAFgB,WADlB;AAKRuP,UAAAA,IAAI,EAAE;AAAE/Q,YAAAA,WAAW,EAAE,iCAAf;AAAkDwB,YAAAA,IAAI,EAAE;AAAxD,WALE;AAMRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,sDADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WANL;AAURmL,UAAAA,WAAW,EAAE;AACT3M,YAAAA,WAAW,EAAE,0DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG;AAVL,SAFyC;AAiBrDA,QAAAA,IAAI,EAAE;AAjB+C,OAloFpD;AAqpFLka,MAAAA,wDAAwD,EAAE;AACtD1b,QAAAA,WAAW,EAAE,qDADyC;AAEtD+B,QAAAA,UAAU,EAAE;AACR0Z,UAAAA,wBAAwB,EAAE;AACtBzb,YAAAA,WAAW,EAAE,6EADS;AAEtBwB,YAAAA,IAAI,EAAE;AAFgB,WADlB;AAKRma,UAAAA,kCAAkC,EAAE;AAChC3b,YAAAA,WAAW,EAAE,iEADmB;AAEhCiC,YAAAA,MAAM,EAAE,iBAFwB;AAGhCT,YAAAA,IAAI,EAAE;AAH0B,WAL5B;AAURiF,UAAAA,WAAW,EAAE;AAAEzG,YAAAA,WAAW,EAAE,iCAAf;AAAkDwB,YAAAA,IAAI,EAAE;AAAxD;AAVL,SAF0C;AActDA,QAAAA,IAAI,EAAE;AAdgD,OArpFrD;AAqqFLoa,MAAAA,oDAAoD,EAAE;AAClD5b,QAAAA,WAAW,EAAE,+CADqC;AAElD+B,QAAAA,UAAU,EAAE;AACRwM,UAAAA,oBAAoB,EAAE;AAClBvO,YAAAA,WAAW,EAAE,yDADK;AAElBwB,YAAAA,IAAI,EAAE;AAFY,WADd;AAKR6Z,UAAAA,qBAAqB,EAAE;AACnBra,YAAAA,IAAI,EAAE;AADa,WALf;AAQR8B,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,+IADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AARF,SAFsC;AAelDA,QAAAA,IAAI,EAAE;AAf4C,OArqFjD;AAsrFLqa,MAAAA,qDAAqD,EAAE;AACnD7b,QAAAA,WAAW,EAAE,6BADsC;AAEnD+B,QAAAA,UAAU,EAAE;AACR8C,UAAAA,OAAO,EAAE;AAAE7E,YAAAA,WAAW,EAAE,sCAAf;AAAuDwB,YAAAA,IAAI,EAAE;AAA7D,WADD;AAER+Z,UAAAA,aAAa,EAAE;AACXva,YAAAA,IAAI,EAAE;AADK,WAFP;AAKRiN,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,2CADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AALN,SAFuC;AAYnDA,QAAAA,IAAI,EAAE;AAZ6C,OAtrFlD;AAosFLsa,MAAAA,qDAAqD,EAAE;AACnD9b,QAAAA,WAAW,EAAE,mDADsC;AAEnD+B,QAAAA,UAAU,EAAE;AACR8C,UAAAA,OAAO,EAAE;AAAE7E,YAAAA,WAAW,EAAE,4BAAf;AAA6CwB,YAAAA,IAAI,EAAE;AAAnD,WADD;AAERua,UAAAA,mBAAmB,EAAE;AACjB/a,YAAAA,IAAI,EAAE;AADW,WAFb;AAKR8B,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,uJADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AALF,SAFuC;AAYnDA,QAAAA,IAAI,EAAE;AAZ6C,OApsFlD;AAktFLwa,MAAAA,sDAAsD,EAAE;AACpDhc,QAAAA,WAAW,EAAE,8BADuC;AAEpD+B,QAAAA,UAAU,EAAE;AACRka,UAAAA,gBAAgB,EAAE;AACdjb,YAAAA,IAAI,EAAE;AADQ;AADV,SAFwC;AAOpDQ,QAAAA,IAAI,EAAE;AAP8C,OAltFnD;AA2tFL0a,MAAAA,oDAAoD,EAAE;AAClDlc,QAAAA,WAAW,EAAE,+CADqC;AAElD+B,QAAAA,UAAU,EAAE;AACRsK,UAAAA,iBAAiB,EAAE;AACfrL,YAAAA,IAAI,EAAE;AADS,WADX;AAIRsL,UAAAA,UAAU,EAAE;AACRtM,YAAAA,WAAW,EAAE,iEADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAJJ;AAQR+K,UAAAA,SAAS,EAAE;AACPvM,YAAAA,WAAW,EAAE,iDADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WARH;AAYRiF,UAAAA,WAAW,EAAE;AACTzG,YAAAA,WAAW,EAAE,8DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WAZL;AAgBRgL,UAAAA,cAAc,EAAE;AAAExM,YAAAA,WAAW,EAAE,+BAAf;AAAgDwB,YAAAA,IAAI,EAAE;AAAtD,WAhBR;AAiBRiL,UAAAA,cAAc,EAAE;AACZzM,YAAAA,WAAW,EAAE,wSADD;AAEZwB,YAAAA,IAAI,EAAE;AAFM;AAjBR,SAFsC;AAwBlDA,QAAAA,IAAI,EAAE;AAxB4C,OA3tFjD;AAqvFL2a,MAAAA,qDAAqD,EAAE;AACnDnc,QAAAA,WAAW,EAAE,kDADsC;AAEnD+B,QAAAA,UAAU,EAAE;AACR4K,UAAAA,WAAW,EAAE;AACT3M,YAAAA,WAAW,EAAE,0DADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG;AADL,SAFuC;AAQnDA,QAAAA,IAAI,EAAE;AAR6C,OArvFlD;AA+vFL4a,MAAAA,iDAAiD,EAAE;AAC/Cpc,QAAAA,WAAW,EAAE,yEADkC;AAE/C+B,QAAAA,UAAU,EAAE;AACRoI,UAAAA,eAAe,EAAE;AACbnK,YAAAA,WAAW,EAAE,8EADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WADT;AAKR+M,UAAAA,oBAAoB,EAAE;AAClBvO,YAAAA,WAAW,EAAE,yDADK;AAElBwB,YAAAA,IAAI,EAAE;AAFY,WALd;AASR6a,UAAAA,eAAe,EAAE;AACbrb,YAAAA,IAAI,EAAE;AADO,WATT;AAYR8B,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,+IADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AAZF,SAFmC;AAmB/CA,QAAAA,IAAI,EAAE;AAnByC,OA/vF9C;AAoxFL8a,MAAAA,kDAAkD,EAAE;AAChDtc,QAAAA,WAAW,EAAE,0BADmC;AAEhD+B,QAAAA,UAAU,EAAE;AACRwa,UAAAA,iBAAiB,EAAE;AACfvb,YAAAA,IAAI,EAAE;AADS;AADX,SAFoC;AAOhDQ,QAAAA,IAAI,EAAE;AAP0C,OApxF/C;AA6xFLgb,MAAAA,8CAA8C,EAAE;AAC5Cxc,QAAAA,WAAW,EAAE,gBAD+B;AAE5C+B,QAAAA,UAAU,EAAE;AACR8C,UAAAA,OAAO,EAAE;AAAE7E,YAAAA,WAAW,EAAE,4BAAf;AAA6CwB,YAAAA,IAAI,EAAE;AAAnD,WADD;AAER2I,UAAAA,eAAe,EAAE;AACbnK,YAAAA,WAAW,EAAE,4DADA;AAEbwB,YAAAA,IAAI,EAAE;AAFO,WAFT;AAMRsB,UAAAA,QAAQ,EAAE;AACN9C,YAAAA,WAAW,EAAE,yJADP;AAENwB,YAAAA,IAAI,EAAE;AAFA;AANF,SAFgC;AAa5CA,QAAAA,IAAI,EAAE;AAbsC,OA7xF3C;AA4yFLib,MAAAA,+CAA+C,EAAE;AAC7Czc,QAAAA,WAAW,EAAE,qCADgC;AAE7C+B,QAAAA,UAAU,EAAE;AACR8C,UAAAA,OAAO,EAAE;AACL7E,YAAAA,WAAW,EAAE,2DADR;AAELwB,YAAAA,IAAI,EAAE;AAFD,WADD;AAKRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,gEADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AALN,SAFiC;AAY7CA,QAAAA,IAAI,EAAE;AAZuC,OA5yF5C;AA0zFLkb,MAAAA,sBAAsB,EAAE;AACpB1c,QAAAA,WAAW,EAAE,klCADO;AAEpB+B,QAAAA,UAAU,EAAE;AACR4a,UAAAA,eAAe,EAAE;AACb3c,YAAAA,WAAW,EAAE,2DADA;AAEb6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFM;AAGbQ,YAAAA,IAAI,EAAE;AAHO,WADT;AAMRob,UAAAA,OAAO,EAAE;AACL5c,YAAAA,WAAW,EAAE,0LADR;AAELwB,YAAAA,IAAI,EAAE;AAFD;AAND,SAFQ;AAapBA,QAAAA,IAAI,EAAE;AAbc,OA1zFnB;AAy0FLqb,MAAAA,yBAAyB,EAAE;AACvB7c,QAAAA,WAAW,EAAE,gUADU;AAEvB+B,QAAAA,UAAU,EAAE;AACR+a,UAAAA,eAAe,EAAE;AACb9c,YAAAA,WAAW,EAAE,6HADA;AAEb6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFM;AAGbA,YAAAA,IAAI,EAAE;AAHO,WADT;AAMRub,UAAAA,OAAO,EAAE;AACL/c,YAAAA,WAAW,EAAE,wCADR;AAELoC,YAAAA,IAAI,EAAE,CAAC,sBAAD,EAAyB,YAAzB,EAAuC,YAAvC,EAAqD,WAArD,CAFD;AAGLZ,YAAAA,IAAI,EAAE;AAHD;AAND,SAFW;AAcvBA,QAAAA,IAAI,EAAE;AAdiB,OAz0FtB;AAy1FLwb,MAAAA,kBAAkB,EAAE;AAChBhd,QAAAA,WAAW,EAAE,qDADG;AAEhB+B,QAAAA,UAAU,EAAE;AACRkb,UAAAA,SAAS,EAAE;AAAEjc,YAAAA,IAAI,EAAE;AAAR,WADH;AAERkc,UAAAA,OAAO,EAAE;AACLld,YAAAA,WAAW,EAAE,u3DADR;AAEL6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFF;AAGLA,YAAAA,IAAI,EAAE;AAHD,WAFD;AAOR2b,UAAAA,IAAI,EAAE;AACFnd,YAAAA,WAAW,EAAE,+HADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ;AAPE,SAFI;AAchBA,QAAAA,IAAI,EAAE;AAdU,OAz1Ff;AAy2FL4b,MAAAA,8BAA8B,EAAE;AAC5Bpd,QAAAA,WAAW,EAAE,4CADe;AAE5B+B,QAAAA,UAAU,EAAE;AAAEsb,UAAAA,OAAO,EAAE;AAAErc,YAAAA,IAAI,EAAE;AAAR;AAAX,SAFgB;AAG5BQ,QAAAA,IAAI,EAAE;AAHsB,OAz2F3B;AA82FL8b,MAAAA,2BAA2B,EAAE;AACzBtd,QAAAA,WAAW,EAAE,iDADY;AAEzB+B,QAAAA,UAAU,EAAE;AACRwb,UAAAA,sBAAsB,EAAE;AACpBvd,YAAAA,WAAW,EAAE,sdADO;AAEpBiC,YAAAA,MAAM,EAAE,OAFY;AAGpBT,YAAAA,IAAI,EAAE;AAHc;AADhB,SAFa;AASzBA,QAAAA,IAAI,EAAE;AATmB,OA92FxB;AAy3FLgc,MAAAA,iBAAiB,EAAE;AACfxd,QAAAA,WAAW,EAAE,g+DADE;AAEf+B,QAAAA,UAAU,EAAE;AACR0b,UAAAA,YAAY,EAAE;AACVzd,YAAAA,WAAW,EAAE,8DADH;AAEV6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFG;AAGVQ,YAAAA,IAAI,EAAE;AAHI,WADN;AAMRkc,UAAAA,QAAQ,EAAE;AACN1d,YAAAA,WAAW,EAAE,8kBADP;AAEN6C,YAAAA,KAAK,EAAE;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aAFD;AAGNQ,YAAAA,IAAI,EAAE;AAHA,WANF;AAWRmc,UAAAA,IAAI,EAAE;AACF3d,YAAAA,WAAW,EAAE,2wBADX;AAEFiC,YAAAA,MAAM,EAAE,MAFN;AAGFT,YAAAA,IAAI,EAAE;AAHJ,WAXE;AAgBRpB,UAAAA,OAAO,EAAE;AACLJ,YAAAA,WAAW,EAAE,sjCADR;AAELiC,YAAAA,MAAM,EAAE,OAFH;AAGLT,YAAAA,IAAI,EAAE;AAHD;AAhBD,SAFG;AAwBfA,QAAAA,IAAI,EAAE;AAxBS,OAz3Fd;AAm5FLoc,MAAAA,8BAA8B,EAAE;AAC5B5d,QAAAA,WAAW,EAAE,4CADe;AAE5B+B,QAAAA,UAAU,EAAE;AACR8b,UAAAA,MAAM,EAAE;AAAE7c,YAAAA,IAAI,EAAE;AAAR,WADA;AAER8c,UAAAA,UAAU,EAAE;AACR9d,YAAAA,WAAW,EAAE,4MADL;AAERiC,YAAAA,MAAM,EAAE,kBAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE;AAFJ,SAFgB;AAU5BA,QAAAA,IAAI,EAAE;AAVsB,OAn5F3B;AA+5FLuc,MAAAA,oCAAoC,EAAE;AAClC/d,QAAAA,WAAW,EAAE,kDADqB;AAElC+B,QAAAA,UAAU,EAAE;AACRgS,UAAAA,WAAW,EAAE;AACT/T,YAAAA,WAAW,EAAE,+NADJ;AAET6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFE;AAGTA,YAAAA,IAAI,EAAE;AAHG;AADL,SAFsB;AASlCA,QAAAA,IAAI,EAAE;AAT4B,OA/5FjC;AA06FLwc,MAAAA,qCAAqC,EAAE;AACnChe,QAAAA,WAAW,EAAE,mDADsB;AAEnC+B,QAAAA,UAAU,EAAE;AACRgS,UAAAA,WAAW,EAAE;AACT/T,YAAAA,WAAW,EAAE,8EADJ;AAET6C,YAAAA,KAAK,EAAE;AAAErB,cAAAA,IAAI,EAAE;AAAR,aAFE;AAGTA,YAAAA,IAAI,EAAE;AAHG;AADL,SAFuB;AASnCA,QAAAA,IAAI,EAAE;AAT6B,OA16FlC;AAq7FLyc,MAAAA,mBAAmB,EAAE;AACjBje,QAAAA,WAAW,EAAE,yVADI;AAEjB+B,QAAAA,UAAU,EAAE,EAFK;AAGjBP,QAAAA,IAAI,EAAE;AAHW,OAr7FhB;AA07FL0c,MAAAA,cAAc,EAAE;AACZle,QAAAA,WAAW,EAAE,0kCADD;AAEZ+B,QAAAA,UAAU,EAAE;AACR/B,UAAAA,WAAW,EAAE;AACTA,YAAAA,WAAW,EAAE,mIADJ;AAETwB,YAAAA,IAAI,EAAE;AAFG,WADL;AAKR8J,UAAAA,UAAU,EAAE;AACRtL,YAAAA,WAAW,EAAE,+EADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WALJ;AASR2c,UAAAA,QAAQ,EAAE;AACNne,YAAAA,WAAW,EAAE,8HADP;AAENwB,YAAAA,IAAI,EAAE;AAFA,WATF;AAaRzB,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE,mJADV;AAEHwB,YAAAA,IAAI,EAAE;AAFH;AAbC,SAFA;AAoBZA,QAAAA,IAAI,EAAE;AApBM,OA17FX;AAg9FL4c,MAAAA,iBAAiB,EAAE;AACfrc,QAAAA,UAAU,EAAE;AACRgP,UAAAA,IAAI,EAAE;AACF/Q,YAAAA,WAAW,EAAE,iLADX;AAEFwB,YAAAA,IAAI,EAAE;AAFJ,WADE;AAKR6c,UAAAA,SAAS,EAAE;AACPre,YAAAA,WAAW,EAAE,qMADN;AAEPwB,YAAAA,IAAI,EAAE;AAFC,WALH;AASRyM,UAAAA,YAAY,EAAE;AACVjO,YAAAA,WAAW,EAAE,8FADH;AAEVwB,YAAAA,IAAI,EAAE;AAFI;AATN,SADG;AAefA,QAAAA,IAAI,EAAE;AAfS,OAh9Fd;AAi+FL8c,MAAAA,kBAAkB,EAAE;AAChBvc,QAAAA,UAAU,EAAE;AACRwc,UAAAA,YAAY,EAAE;AAAEve,YAAAA,WAAW,EAAE,sCAAf;AAAuDwB,YAAAA,IAAI,EAAE;AAA7D,WADN;AAERgd,UAAAA,UAAU,EAAE;AACRxe,YAAAA,WAAW,EAAE,+CADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE,WAFJ;AAORid,UAAAA,QAAQ,EAAE;AAAEze,YAAAA,WAAW,EAAE,sBAAf;AAAuCwB,YAAAA,IAAI,EAAE;AAA7C,WAPF;AAQRkd,UAAAA,UAAU,EAAE;AACR1e,YAAAA,WAAW,EAAE,6BADL;AAERiC,YAAAA,MAAM,EAAE,OAFA;AAGRT,YAAAA,IAAI,EAAE;AAHE,WARJ;AAaRmd,UAAAA,aAAa,EAAE;AACX3e,YAAAA,WAAW,EAAE,gFADF;AAEXwB,YAAAA,IAAI,EAAE;AAFK,WAbP;AAiBRod,UAAAA,UAAU,EAAE;AACR5e,YAAAA,WAAW,EAAE,oGADL;AAERwB,YAAAA,IAAI,EAAE;AAFE,WAjBJ;AAqBRqd,UAAAA,OAAO,EAAE;AAAE7e,YAAAA,WAAW,EAAE,mBAAf;AAAoCwB,YAAAA,IAAI,EAAE;AAA1C;AArBD,SADI;AAwBhBA,QAAAA,IAAI,EAAE;AAxBU,OAj+Ff;AA2/FLsd,MAAAA,wBAAwB,EAAE;AACtBtd,QAAAA,IAAI,EAAE,QADgB;AAEtBxB,QAAAA,WAAW,EAAE,kCAFS;AAGtB+B,QAAAA,UAAU,EAAE;AACR4S,UAAAA,MAAM,EAAE;AAAE5S,YAAAA,UAAU,EAAE;AAAEyX,cAAAA,oBAAoB,EAAE;AAAEhY,gBAAAA,IAAI,EAAE;AAAR;AAAxB,aAAd;AAA6DA,YAAAA,IAAI,EAAE;AAAnE,WADA;AAERud,UAAAA,SAAS,EAAE;AAAE3c,YAAAA,IAAI,EAAE,CAAC,wBAAD,EAA2B,SAA3B,EAAsC,aAAtC,CAAR;AAA8DZ,YAAAA,IAAI,EAAE;AAApE;AAFH;AAHU,OA3/FrB;AAmgGLwd,MAAAA,0BAA0B,EAAE;AACxBxd,QAAAA,IAAI,EAAE,QADkB;AAExBxB,QAAAA,WAAW,EAAE,4CAFW;AAGxB+B,QAAAA,UAAU,EAAE;AACRkd,UAAAA,QAAQ,EAAE;AACNzd,YAAAA,IAAI,EAAE,OADA;AAENqB,YAAAA,KAAK,EAAE;AACHrB,cAAAA,IAAI,EAAE,QADH;AAEHO,cAAAA,UAAU,EAAE;AACRuE,gBAAAA,KAAK,EAAE;AAAE9E,kBAAAA,IAAI,EAAE;AAAR,iBADC;AAERmG,gBAAAA,OAAO,EAAE;AAAEnG,kBAAAA,IAAI,EAAE;AAAR,iBAFD;AAGRoG,gBAAAA,OAAO,EAAE;AAAEpG,kBAAAA,IAAI,EAAE;AAAR,iBAHD;AAIR+F,gBAAAA,WAAW,EAAE;AAAE/F,kBAAAA,IAAI,EAAE;AAAR;AAJL;AAFT;AAFD;AADF;AAHY,OAngGvB;AAqhGL0d,MAAAA,mCAAmC,EAAE;AACjC1d,QAAAA,IAAI,EAAE,QAD2B;AAEjCxB,QAAAA,WAAW,EAAE,4CAFoB;AAGjC+B,QAAAA,UAAU,EAAE;AACRod,UAAAA,iBAAiB,EAAE;AACf3d,YAAAA,IAAI,EAAE,OADS;AAEfqB,YAAAA,KAAK,EAAE;AACHrB,cAAAA,IAAI,EAAE,QADH;AAEHO,cAAAA,UAAU,EAAE;AACRgP,gBAAAA,IAAI,EAAE;AAAEvP,kBAAAA,IAAI,EAAE;AAAR,iBADE;AAERiF,gBAAAA,WAAW,EAAE;AAAEjF,kBAAAA,IAAI,EAAE;AAAR,iBAFL;AAGRmL,gBAAAA,WAAW,EAAE;AAAEnL,kBAAAA,IAAI,EAAE;AAAR;AAHL;AAFT;AAFQ;AADX;AAHqB;AArhGhC,KADD;AAwiGRH,IAAAA,UAAU,EAAE;AACRkd,MAAAA,YAAY,EAAE;AACVre,QAAAA,IAAI,EAAE,cADI;AAEVoB,QAAAA,EAAE,EAAE,OAFM;AAGVtB,QAAAA,WAAW,EAAE,qBAHH;AAIVe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AAJE,OADN;AAOR4d,MAAAA,GAAG,EAAE;AACDlf,QAAAA,IAAI,EAAE,KADL;AAEDoB,QAAAA,EAAE,EAAE,OAFH;AAGDtB,QAAAA,WAAW,EAAE,2BAHZ;AAIDe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE,QAAR;AAAkBY,UAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAxB;AAAoDxC,UAAAA,OAAO,EAAE;AAA7D;AAJP,OAPG;AAaRyf,MAAAA,QAAQ,EAAE;AAAEnf,QAAAA,IAAI,EAAE,UAAR;AAAoBoB,QAAAA,EAAE,EAAE,OAAxB;AAAiCtB,QAAAA,WAAW,EAAE,OAA9C;AAAuDe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AAA/D,OAbF;AAcR8d,MAAAA,MAAM,EAAE;AACJpf,QAAAA,IAAI,EAAE,QADF;AAEJoB,QAAAA,EAAE,EAAE,OAFA;AAGJtB,QAAAA,WAAW,EAAE,oEAHT;AAIJe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AAJJ,OAdA;AAoBR+d,MAAAA,WAAW,EAAE;AACTrf,QAAAA,IAAI,EAAE,aADG;AAEToB,QAAAA,EAAE,EAAE,OAFK;AAGTtB,QAAAA,WAAW,EAAE,uCAHJ;AAITe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AAJC,OApBL;AA0BRge,MAAAA,WAAW,EAAE;AACTtf,QAAAA,IAAI,EAAE,aADG;AAEToB,QAAAA,EAAE,EAAE,OAFK;AAGTtB,QAAAA,WAAW,EAAE,qDAHJ;AAITe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE,SAAR;AAAmB5B,UAAAA,OAAO,EAAE;AAA5B;AAJC,OA1BL;AAgCR6f,MAAAA,SAAS,EAAE;AACPvf,QAAAA,IAAI,EAAE,WADC;AAEPoB,QAAAA,EAAE,EAAE,OAFG;AAGPtB,QAAAA,WAAW,EAAE,wJAHN;AAIPe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AAJD,OAhCH;AAsCRke,MAAAA,UAAU,EAAE;AACRxf,QAAAA,IAAI,EAAE,YADE;AAERoB,QAAAA,EAAE,EAAE,OAFI;AAGRtB,QAAAA,WAAW,EAAE,+DAHL;AAIRe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AAJA,OAtCJ;AA4CRme,MAAAA,eAAe,EAAE;AACbzf,QAAAA,IAAI,EAAE,iBADO;AAEboB,QAAAA,EAAE,EAAE,OAFS;AAGbtB,QAAAA,WAAW,EAAE,sDAHA;AAIbe,QAAAA,MAAM,EAAE;AAAES,UAAAA,IAAI,EAAE;AAAR;AAJK;AA5CT,KAxiGJ;AA2lGRoe,IAAAA,aAAa,EAAE;AACXld,MAAAA,sDAAsD,EAAE;AACpD5B,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AAD2C,OAD7C;AAUXsQ,MAAAA,yCAAyC,EAAE;AACvCxQ,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAD8B,OAVhC;AAiBXiE,MAAAA,gDAAgD,EAAE;AAC9CnE,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADqC,OAjBvC;AA0BX0Q,MAAAA,gDAAgD,EAAE;AAC9C5Q,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADqC,OA1BvC;AAmCX4D,MAAAA,sDAAsD,EAAE;AACpD9D,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AAD2C,OAnC7C;AA4CXqF,MAAAA,iDAAiD,EAAE;AAC/CvF,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADsC,OA5CxC;AAqDX2F,MAAAA,6CAA6C,EAAE;AAC3C7F,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AADkC,OArDpC;AA4DX4L,MAAAA,iDAAiD,EAAE;AAC/C9L,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADsC,OA5DxC;AAqEXqK,MAAAA,gDAAgD,EAAE;AAC9CvK,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADqC,OArEvC;AA8EX0Z,MAAAA,uCAAuC,EAAE;AACrC5Z,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR;AADQ;AADf;AAD4B,OA9E9B;AAqFXyV,MAAAA,kDAAkD,EAAE;AAChD3V,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADuC,OArFzC;AA8FX+T,MAAAA,0DAA0D,EAAE;AACxDjU,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AAD+C,OA9FjD;AAuGXmX,MAAAA,+CAA+C,EAAE;AAC7CrX,QAAAA,OAAO,EAAE;AACL,8BAAoB;AAChBC,YAAAA,MAAM,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADQ;AADf;AADoC;AAvGtC,KA3lGP;AA4sGR6e,IAAAA,eAAe,EAAE;AACb1e,MAAAA,MAAM,EAAE;AACJK,QAAAA,IAAI,EAAE,QADF;AAEJxB,QAAAA,WAAW,EAAE,mCAFT;AAGJ8f,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,gBAAgB,EAAE,2CADZ;AAENC,YAAAA,MAAM,EAAE;AACJ,gEAAkD,4GAD9C;AAEJ,0DAA4C;AAFxC;AAFF,WADP;AAQHC,UAAAA,iBAAiB,EAAE;AACfF,YAAAA,gBAAgB,EAAE,2CADH;AAEfG,YAAAA,QAAQ,EAAE,4CAFK;AAGfF,YAAAA,MAAM,EAAE;AACJ,gEAAkD,4GAD9C;AAEJ,0DAA4C;AAFxC;AAHO;AARhB;AAHH,OADK;AAsBb7e,MAAAA,MAAM,EAAE;AACJI,QAAAA,IAAI,EAAE,QADF;AAEJtB,QAAAA,IAAI,EAAE,KAFF;AAGJoB,QAAAA,EAAE,EAAE,OAHA;AAIJtB,QAAAA,WAAW,EAAE;AAJT;AAtBK;AA5sGT;AA7sHE,CAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    openapi: \"3.0.3\",\n    info: {\n        title: \"Identity Toolkit API\",\n        description: \"The Google Identity Toolkit API lets you use open standards to verify a user's identity.\",\n        contact: { name: \"Google\", url: \"https://google.com\" },\n        version: \"v1\",\n        license: {\n            name: \"Creative Commons Attribution 3.0\",\n            url: \"http://creativecommons.org/licenses/by/3.0/\",\n        },\n        termsOfService: \"https://developers.google.com/terms/\",\n    },\n    servers: [{ url: \"https://identitytoolkit.googleapis.com\" }],\n    externalDocs: { url: \"https://firebase.google.com/docs/auth/\" },\n    tags: [\n        { name: \"accounts\" },\n        { name: \"projects\" },\n        { name: \"v1\" },\n        { name: \"defaultSupportedIdps\" },\n        { name: \"secureToken\" },\n        { name: \"emulator\" },\n    ],\n    paths: {\n        \"/v1/accounts:createAuthUri\": {\n            post: {\n                description: \"If an email identifier is specified, checks and returns if any user account is registered with the email. If there is a registered account, fetches all providers associated with the account's email. If the provider ID of an Identity Provider (IdP) is specified, creates an authorization URI for the IdP. The user can be directed to this URI to sign in with the IdP. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.createAuthUri\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateAuthUriResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateAuthUriRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:delete\": {\n            post: {\n                description: \"Deletes a user's account.\",\n                operationId: \"identitytoolkit.accounts.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:issueSamlResponse\": {\n            post: {\n                description: \"Experimental\",\n                operationId: \"identitytoolkit.accounts.issueSamlResponse\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:lookup\": {\n            post: {\n                description: \"Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.\",\n                operationId: \"identitytoolkit.accounts.lookup\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:resetPassword\": {\n            post: {\n                description: \"Resets the password of an account either using an out-of-band code generated by sendOobCode or by specifying the email and password of the account to be modified. Can also check the purpose of an out-of-band code without consuming it.\",\n                operationId: \"identitytoolkit.accounts.resetPassword\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ResetPasswordResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ResetPasswordRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:sendOobCode\": {\n            post: {\n                description: \"Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.\",\n                operationId: \"identitytoolkit.accounts.sendOobCode\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:sendVerificationCode\": {\n            post: {\n                description: \"Sends a SMS verification code for phone number sign-in. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.sendVerificationCode\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:signInWithCustomToken\": {\n            post: {\n                description: \"Signs in or signs up a user by exchanging a custom Auth token. Upon a successful sign-in or sign-up, a new Identity Platform ID token and refresh token are issued for the user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.signInWithCustomToken\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:signInWithEmailLink\": {\n            post: {\n                description: \"Signs in or signs up a user with a out-of-band code from an email link. If a user does not exist with the given email address, a user record will be created. If the sign-in succeeds, an Identity Platform ID and refresh token are issued for the authenticated user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.signInWithEmailLink\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:signInWithGameCenter\": {\n            post: {\n                description: \"Signs in or signs up a user with iOS Game Center credentials. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. The bundle ID is required in the request header as `x-ios-bundle-identifier`. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.signInWithGameCenter\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:signInWithIdp\": {\n            post: {\n                description: 'Signs in or signs up a user using credentials from an Identity Provider (IdP). This is done by manually providing an IdP credential, or by providing the authorization response obtained via the authorization request from CreateAuthUri. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. A new Identity Platform user account will be created if the user has not previously signed in to the IdP with the same account. In addition, when the \"One account per email address\" setting is enabled, there should not be an existing Identity Platform user account with the same email address for a new user account to be created. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.',\n                operationId: \"identitytoolkit.accounts.signInWithIdp\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithIdpResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithIdpRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:signInWithPassword\": {\n            post: {\n                description: \"Signs in a user with email and password. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.signInWithPassword\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:signInWithPhoneNumber\": {\n            post: {\n                description: \"Completes a phone number authentication attempt. If a user already exists with the given phone number, an ID token is minted for that user. Otherwise, a new user is created and associated with the phone number. This method may also be used to link a phone number to an existing user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.signInWithPhoneNumber\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:signUp\": {\n            post: {\n                description: \"Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.signUp\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpResponse\" },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SignUpRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:update\": {\n            post: {\n                description: \"Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.\",\n                operationId: \"identitytoolkit.accounts.update\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/accounts:verifyIosClient\": {\n            post: {\n                description: \"Verifies an iOS client is a real iOS device. If the request is valid, a reciept will be sent in the response and a secret will be sent via Apple Push Notification Service. The client should send both of them back to certain Identity Platform APIs in a later call (for example, /accounts:sendVerificationCode), in order to verify the client. The bundle ID is required in the request header as `x-ios-bundle-identifier`. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.accounts.verifyIosClient\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1VerifyIosClientResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1VerifyIosClientRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts\": {\n            post: {\n                description: \"Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.projects.accounts\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpResponse\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SignUpRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}:createSessionCookie\": {\n            post: {\n                description: \"Creates a session cookie for the given Identity Platform ID token. The session cookie is used by the client to preserve the user's login state.\",\n                operationId: \"identitytoolkit.projects.createSessionCookie\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the project that the account belongs to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}:queryAccounts\": {\n            post: {\n                description: \"Looks up user accounts within a project or a tenant based on conditions in the request.\",\n                operationId: \"identitytoolkit.projects.queryAccounts\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the project to which the result is scoped.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:batchCreate\": {\n            post: {\n                description: \"Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                operationId: \"identitytoolkit.projects.accounts.batchCreate\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UploadAccountResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The Project ID of the Identity Platform project which the account belongs to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1UploadAccountRequest\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:batchDelete\": {\n            post: {\n                description: \"Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in the response. The method ignores accounts that do not exist or are duplicated in the request. This method requires a Google OAuth 2.0 credential with proper permissions. (https://cloud.google.com/identity-platform/docs/access-control)\",\n                operationId: \"identitytoolkit.projects.accounts.batchDelete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:batchGet\": {\n            get: {\n                description: \"Download account information for all accounts on the project in a paginated manner. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get password hash, password salt, and password version from accounts; otherwise these fields are redacted.\",\n                operationId: \"identitytoolkit.projects.accounts.batchGet\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DownloadAccountResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    { name: \"delegatedProjectNumber\", in: \"query\", schema: { type: \"string\" } },\n                    {\n                        name: \"maxResults\",\n                        in: \"query\",\n                        description: \"The maximum number of results to return. Must be at least 1 and no greater than 1000. By default, it is 20.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"nextPageToken\",\n                        in: \"query\",\n                        description: \"The pagination token from the response of a previous request.\",\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"query\",\n                        description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:delete\": {\n            post: {\n                description: \"Deletes a user's account.\",\n                operationId: \"identitytoolkit.projects.accounts.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:lookup\": {\n            post: {\n                description: \"Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.\",\n                operationId: \"identitytoolkit.projects.accounts.lookup\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:query\": {\n            post: {\n                description: \"Looks up user accounts within a project or a tenant based on conditions in the request.\",\n                operationId: \"identitytoolkit.projects.accounts.query\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the project to which the result is scoped.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:sendOobCode\": {\n            post: {\n                description: \"Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.\",\n                operationId: \"identitytoolkit.projects.accounts.sendOobCode\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/accounts:update\": {\n            post: {\n                description: \"Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.\",\n                operationId: \"identitytoolkit.projects.accounts.update\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts\": {\n            post: {\n                description: \"Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.\",\n                operationId: \"identitytoolkit.projects.tenants.accounts\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpResponse\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The ID of the Identity Platform tenant to create a user under. If not set, the user will be created under the default Identity Platform project.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SignUpRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}:createSessionCookie\": {\n            post: {\n                description: \"Creates a session cookie for the given Identity Platform ID token. The session cookie is used by the client to preserve the user's login state.\",\n                operationId: \"identitytoolkit.projects.tenants.createSessionCookie\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the project that the account belongs to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:batchCreate\": {\n            post: {\n                description: \"Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.batchCreate\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UploadAccountResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The Project ID of the Identity Platform project which the account belongs to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The ID of the Identity Platform tenant the account belongs to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1UploadAccountRequest\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:batchDelete\": {\n            post: {\n                description: \"Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in the response. The method ignores accounts that do not exist or are duplicated in the request. This method requires a Google OAuth 2.0 credential with proper permissions. (https://cloud.google.com/identity-platform/docs/access-control)\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.batchDelete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong to an default Identity Platform project, the field is not needed.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:batchGet\": {\n            get: {\n                description: \"Download account information for all accounts on the project in a paginated manner. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get password hash, password salt, and password version from accounts; otherwise these fields are redacted.\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.batchGet\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DownloadAccountResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    { name: \"delegatedProjectNumber\", in: \"query\", schema: { type: \"string\" } },\n                    {\n                        name: \"maxResults\",\n                        in: \"query\",\n                        description: \"The maximum number of results to return. Must be at least 1 and no greater than 1000. By default, it is 20.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"nextPageToken\",\n                        in: \"query\",\n                        description: \"The pagination token from the response of a previous request.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:delete\": {\n            post: {\n                description: \"Deletes a user's account.\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The ID of the tenant that the account belongs to, if applicable. Only require to be specified for authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an account that belongs to an Identity Platform tenant.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:lookup\": {\n            post: {\n                description: \"Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.lookup\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The ID of the tenant that the account belongs to. Should only be specified by authenticated requests from a developer.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:query\": {\n            post: {\n                description: \"Looks up user accounts within a project or a tenant based on conditions in the request.\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.query\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The ID of the project to which the result is scoped.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The ID of the tenant to which the result is scoped.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:sendOobCode\": {\n            post: {\n                description: \"Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.sendOobCode\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts:update\": {\n            post: {\n                description: \"Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.\",\n                operationId: \"identitytoolkit.projects.tenants.accounts.update\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"targetProjectId\",\n                        in: \"path\",\n                        description: \"The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"tenantId\",\n                        in: \"path\",\n                        description: \"The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users should pass an Identity Platform ID token rather than setting this field.\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\",\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/projects\": {\n            get: {\n                description: \"Gets a project's public Identity Toolkit configuration. (Legacy) This method also supports authenticated calls from a developer to retrieve non-public configuration.\",\n                operationId: \"identitytoolkit.getProjects\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetProjectConfigResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"androidPackageName\",\n                        in: \"query\",\n                        description: \"Android package name to check against the real android package name. If this field is provided, and sha1_cert_hash is not provided, the action will throw an error if this does not match the real android package name.\",\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"clientId\",\n                        in: \"query\",\n                        description: \"The RP OAuth client ID. If set, a check will be performed to ensure that the OAuth client is valid for the retrieved project and the request rejected with a client error if not valid.\",\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"delegatedProjectNumber\",\n                        in: \"query\",\n                        description: \"Project Number of the delegated project request. This field should only be used as part of the Firebase V1 migration.\",\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"firebaseAppId\",\n                        in: \"query\",\n                        description: \"The Firebase app ID, for applications that use Firebase. This can be found in the Firebase console for your project. If set, a check will be performed to ensure that the app ID is valid for the retrieved project. If not valid, the request will be rejected with a client error.\",\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"iosBundleId\",\n                        in: \"query\",\n                        description: \"iOS bundle id to check against the real ios bundle id. If this field is provided, the action will throw an error if this does not match the real iOS bundle id.\",\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"projectNumber\",\n                        in: \"query\",\n                        description: \"Project number of the configuration to retrieve. This field is deprecated and should not be used by new integrations.\",\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"returnDynamicLink\",\n                        in: \"query\",\n                        description: \"Whether dynamic link should be returned.\",\n                        schema: { type: \"boolean\" },\n                    },\n                    {\n                        name: \"sha1Cert\",\n                        in: \"query\",\n                        description: \"SHA-1 Android application cert hash. If set, a check will be performed to ensure that the cert hash is valid for the retrieved project and android_package_name.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"v1\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/recaptchaParams\": {\n            get: {\n                description: \"Gets parameters needed for generating a reCAPTCHA challenge.\",\n                operationId: \"identitytoolkit.getRecaptchaParams\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"v1\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/sessionCookiePublicKeys\": {\n            get: {\n                description: \"Retrieves the set of public keys of the session cookie JSON Web Token (JWT) signer that can be used to validate the session cookie created through createSessionCookie.\",\n                operationId: \"identitytoolkit.getSessionCookiePublicKeys\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                tags: [\"v1\"],\n                security: [{ apiKey: [] }],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/accounts/mfaEnrollment:finalize\": {\n            post: {\n                description: \"Finishes enrolling a second factor for the user.\",\n                operationId: \"identitytoolkit.accounts.mfaEnrollment.finalize\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/accounts/mfaEnrollment:start\": {\n            post: {\n                description: \"Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the user.\",\n                operationId: \"identitytoolkit.accounts.mfaEnrollment.start\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/accounts/mfaEnrollment:withdraw\": {\n            post: {\n                description: \"Revokes one second factor from the enrolled second factors for an account.\",\n                operationId: \"identitytoolkit.accounts.mfaEnrollment.withdraw\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2WithdrawMfaResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2WithdrawMfaRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/accounts/mfaSignIn:finalize\": {\n            post: {\n                description: \"Verifies the MFA challenge and performs sign-in\",\n                operationId: \"identitytoolkit.accounts.mfaSignIn.finalize\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/accounts/mfaSignIn:start\": {\n            post: {\n                description: \"Sends the MFA challenge\",\n                operationId: \"identitytoolkit.accounts.mfaSignIn.start\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaSignInResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: {\n                                $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaSignInRequest\",\n                            },\n                        },\n                    },\n                },\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"accounts\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/defaultSupportedIdps\": {\n            get: {\n                description: \"List all default supported Idps.\",\n                operationId: \"identitytoolkit.defaultSupportedIdps.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of items to return.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The next_page_token value returned from a previous List request, if any.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"defaultSupportedIdps\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/config\": {\n            get: {\n                description: \"Retrieve an Identity Toolkit project configuration.\",\n                operationId: \"identitytoolkit.projects.getConfig\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Config\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [{ Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] }, { apiKey: [] }],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update an Identity Toolkit project configuration.\",\n                operationId: \"identitytoolkit.projects.updateConfig\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Config\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"The update mask applies to the resource. Fields set in the config but not included in this update mask will be ignored. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Config\" },\n                        },\n                    },\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/defaultSupportedIdpConfigs\": {\n            post: {\n                description: \"Create a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.create\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"idpId\",\n                        in: \"query\",\n                        description: \"The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"List all default supported Idp configurations for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of items to return.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The next_page_token value returned from a previous List request, if any.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}\": {\n            delete: {\n                description: \"Delete a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleProtobufEmpty\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"defaultSupportedIdpConfigsId\",\n                        in: \"path\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"Retrieve a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"defaultSupportedIdpConfigsId\",\n                        in: \"path\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.defaultSupportedIdpConfigs.patch\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"defaultSupportedIdpConfigsId\",\n                        in: \"path\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/inboundSamlConfigs\": {\n            post: {\n                description: \"Create an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.inboundSamlConfigs.create\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"inboundSamlConfigId\",\n                        in: \"query\",\n                        description: \"The id to use for this config.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"List all inbound SAML configurations for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.inboundSamlConfigs.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of items to return.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The next_page_token value returned from a previous List request, if any.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/inboundSamlConfigs/{inboundSamlConfigsId}\": {\n            delete: {\n                description: \"Delete an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.inboundSamlConfigs.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleProtobufEmpty\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"inboundSamlConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"Retrieve an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.inboundSamlConfigs.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"inboundSamlConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.inboundSamlConfigs.patch\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"inboundSamlConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/oauthIdpConfigs\": {\n            post: {\n                description: \"Create an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.oauthIdpConfigs.create\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"oauthIdpConfigId\",\n                        in: \"query\",\n                        description: \"The id to use for this config.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"List all Oidc Idp configurations for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.oauthIdpConfigs.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of items to return.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The next_page_token value returned from a previous List request, if any.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/oauthIdpConfigs/{oauthIdpConfigsId}\": {\n            delete: {\n                description: \"Delete an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.oauthIdpConfigs.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleProtobufEmpty\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"oauthIdpConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"Retrieve an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.oauthIdpConfigs.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"oauthIdpConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.oauthIdpConfigs.patch\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"oauthIdpConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants\": {\n            post: {\n                description: \"Create a tenant. Requires write permission on the Agent project.\",\n                operationId: \"identitytoolkit.projects.tenants.create\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                requestBody: { $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2Tenant\" },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"List tenants under the given agent project. Requires read permission on the Agent project.\",\n                operationId: \"identitytoolkit.projects.tenants.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of results to return, capped at 1000. If not specified, the default value is 20.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The pagination token from the response of a previous request.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}\": {\n            delete: {\n                description: \"Delete a tenant. Requires write permission on the Agent project.\",\n                operationId: \"identitytoolkit.projects.tenants.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleProtobufEmpty\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"Get a tenant. Requires read permission on the Tenant resource.\",\n                operationId: \"identitytoolkit.projects.tenants.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update a tenant. Requires write permission on the Tenant resource.\",\n                operationId: \"identitytoolkit.projects.tenants.patch\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"If provided, only update fields set in the update mask. Otherwise, all settable fields will be updated. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: { $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2Tenant\" },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}:getIamPolicy\": {\n            post: {\n                description: \"Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.\",\n                operationId: \"identitytoolkit.projects.tenants.getIamPolicy\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleIamV1Policy\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: { $ref: \"#/components/schemas/GoogleIamV1GetIamPolicyRequest\" },\n                        },\n                    },\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}:setIamPolicy\": {\n            post: {\n                description: \"Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.\",\n                operationId: \"identitytoolkit.projects.tenants.setIamPolicy\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleIamV1Policy\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: { $ref: \"#/components/schemas/GoogleIamV1SetIamPolicyRequest\" },\n                        },\n                    },\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}:testIamPermissions\": {\n            post: {\n                description: \"Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request.\",\n                operationId: \"identitytoolkit.projects.tenants.testIamPermissions\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: { $ref: \"#/components/schemas/GoogleIamV1TestIamPermissionsResponse\" },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: { $ref: \"#/components/schemas/GoogleIamV1TestIamPermissionsRequest\" },\n                        },\n                    },\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}/defaultSupportedIdpConfigs\": {\n            post: {\n                description: \"Create a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.create\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"idpId\",\n                        in: \"query\",\n                        description: \"The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"List all default supported Idp configurations for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of items to return.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The next_page_token value returned from a previous List request, if any.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}\": {\n            delete: {\n                description: \"Delete a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleProtobufEmpty\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"defaultSupportedIdpConfigsId\",\n                        in: \"path\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"Retrieve a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"defaultSupportedIdpConfigsId\",\n                        in: \"path\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update a default supported Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.patch\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"defaultSupportedIdpConfigsId\",\n                        in: \"path\",\n                        required: true,\n                        schema: { type: \"string\" },\n                    },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}/inboundSamlConfigs\": {\n            post: {\n                description: \"Create an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.create\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"inboundSamlConfigId\",\n                        in: \"query\",\n                        description: \"The id to use for this config.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"List all inbound SAML configurations for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of items to return.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The next_page_token value returned from a previous List request, if any.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}/inboundSamlConfigs/{inboundSamlConfigsId}\": {\n            delete: {\n                description: \"Delete an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleProtobufEmpty\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"inboundSamlConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"Retrieve an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"inboundSamlConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update an inbound SAML configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.inboundSamlConfigs.patch\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"inboundSamlConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}/oauthIdpConfigs\": {\n            post: {\n                description: \"Create an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.create\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"oauthIdpConfigId\",\n                        in: \"query\",\n                        description: \"The id to use for this config.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"List all Oidc Idp configurations for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"pageSize\",\n                        in: \"query\",\n                        description: \"The maximum number of items to return.\",\n                        schema: { type: \"integer\" },\n                    },\n                    {\n                        name: \"pageToken\",\n                        in: \"query\",\n                        description: \"The next_page_token value returned from a previous List request, if any.\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v2/projects/{targetProjectId}/tenants/{tenantId}/oauthIdpConfigs/{oauthIdpConfigsId}\": {\n            delete: {\n                description: \"Delete an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GoogleProtobufEmpty\" } } },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"oauthIdpConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            get: {\n                description: \"Retrieve an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"oauthIdpConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                ],\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            patch: {\n                description: \"Update an Oidc Idp configuration for an Identity Toolkit project.\",\n                operationId: \"identitytoolkit.projects.tenants.oauthIdpConfigs.patch\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"*/*\": {\n                                schema: {\n                                    $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                                },\n                            },\n                        },\n                    },\n                },\n                parameters: [\n                    { name: \"targetProjectId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"tenantId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    { name: \"oauthIdpConfigsId\", in: \"path\", required: true, schema: { type: \"string\" } },\n                    {\n                        name: \"updateMask\",\n                        in: \"query\",\n                        description: \"The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\",\n                        schema: { type: \"string\" },\n                    },\n                ],\n                requestBody: {\n                    $ref: \"#/components/requestBodies/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                },\n                security: [\n                    { Oauth2: [\"https://www.googleapis.com/auth/cloud-platform\"] },\n                    { Oauth2: [\"https://www.googleapis.com/auth/firebase\"] },\n                    { apiKey: [] },\n                ],\n                tags: [\"projects\"],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n        },\n        \"/v1/token\": {\n            post: {\n                description: \"The Token Service API lets you exchange either an ID token or a refresh token for an access token and a new refresh token. You can use the access token to securely call APIs that require user authorization.\",\n                operationId: \"securetoken.token\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"*/*\": { schema: { $ref: \"#/components/schemas/GrantTokenResponse\" } } },\n                    },\n                },\n                requestBody: {\n                    content: {\n                        \"application/json\": { schema: { $ref: \"#/components/schemas/GrantTokenRequest\" } },\n                        \"application/x-www-form-urlencoded\": {\n                            schema: { $ref: \"#/components/schemas/GrantTokenRequest\" },\n                        },\n                    },\n                },\n                tags: [\"secureToken\"],\n                security: [{ apiKey: [] }],\n            },\n            parameters: [\n                { $ref: \"#/components/parameters/access_token\" },\n                { $ref: \"#/components/parameters/alt\" },\n                { $ref: \"#/components/parameters/callback\" },\n                { $ref: \"#/components/parameters/fields\" },\n                { $ref: \"#/components/parameters/oauth_token\" },\n                { $ref: \"#/components/parameters/prettyPrint\" },\n                { $ref: \"#/components/parameters/quotaUser\" },\n                { $ref: \"#/components/parameters/uploadType\" },\n                { $ref: \"#/components/parameters/upload_protocol\" },\n            ],\n            servers: [{ url: \"https://securetoken.googleapis.com\" }],\n        },\n        \"/emulator/v1/projects/{targetProjectId}/accounts\": {\n            parameters: [\n                {\n                    name: \"targetProjectId\",\n                    in: \"path\",\n                    description: \"The ID of the Google Cloud project that the accounts belong to.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n            ],\n            servers: [{ url: \"\" }],\n            delete: {\n                description: \"Remove all accounts in the project, regardless of state.\",\n                operationId: \"emulator.projects.accounts.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"application/json\": { schema: { type: \"object\" } } },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n        },\n        \"/emulator/v1/projects/{targetProjectId}/tenants/{tenantId}/accounts\": {\n            parameters: [\n                {\n                    name: \"targetProjectId\",\n                    in: \"path\",\n                    description: \"The ID of the Google Cloud project that the accounts belong to.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n                {\n                    name: \"tenantId\",\n                    in: \"path\",\n                    description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n            ],\n            servers: [{ url: \"\" }],\n            delete: {\n                description: \"Remove all accounts in the project, regardless of state.\",\n                operationId: \"emulator.projects.accounts.delete\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: { \"application/json\": { schema: { type: \"object\" } } },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n        },\n        \"/emulator/v1/projects/{targetProjectId}/config\": {\n            parameters: [\n                {\n                    name: \"targetProjectId\",\n                    in: \"path\",\n                    description: \"The ID of the Google Cloud project that the config belongs to.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n            ],\n            servers: [{ url: \"\" }],\n            get: {\n                description: \"Get emulator-specific configuration for the project.\",\n                operationId: \"emulator.projects.config.get\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"application/json\": {\n                                schema: { $ref: \"#/components/schemas/EmulatorV1ProjectsConfig\" },\n                            },\n                        },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n            patch: {\n                description: \"Update emulator-specific configuration for the project.\",\n                operationId: \"emulator.projects.config.update\",\n                requestBody: {\n                    content: {\n                        \"application/json\": {\n                            schema: { $ref: \"#/components/schemas/EmulatorV1ProjectsConfig\" },\n                        },\n                    },\n                },\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"application/json\": {\n                                schema: { $ref: \"#/components/schemas/EmulatorV1ProjectsConfig\" },\n                            },\n                        },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n        },\n        \"/emulator/v1/projects/{targetProjectId}/oobCodes\": {\n            parameters: [\n                {\n                    name: \"targetProjectId\",\n                    in: \"path\",\n                    description: \"The ID of the Google Cloud project that the confirmation codes belongs to.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n            ],\n            servers: [{ url: \"\" }],\n            get: {\n                description: \"List all pending confirmation codes for the project.\",\n                operationId: \"emulator.projects.oobCodes.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"application/json\": {\n                                schema: { $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\" },\n                            },\n                        },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n        },\n        \"/emulator/v1/projects/{targetProjectId}/tenants/{tenantId}/oobCodes\": {\n            parameters: [\n                {\n                    name: \"targetProjectId\",\n                    in: \"path\",\n                    description: \"The ID of the Google Cloud project that the confirmation codes belongs to.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n                {\n                    name: \"tenantId\",\n                    in: \"path\",\n                    description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n            ],\n            servers: [{ url: \"\" }],\n            get: {\n                description: \"List all pending confirmation codes for the project.\",\n                operationId: \"emulator.projects.oobCodes.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"application/json\": {\n                                schema: { $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\" },\n                            },\n                        },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n        },\n        \"/emulator/v1/projects/{targetProjectId}/verificationCodes\": {\n            parameters: [\n                {\n                    name: \"targetProjectId\",\n                    in: \"path\",\n                    description: \"The ID of the Google Cloud project that the verification codes belongs to.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n            ],\n            servers: [{ url: \"\" }],\n            get: {\n                description: \"List all pending phone verification codes for the project.\",\n                operationId: \"emulator.projects.verificationCodes.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"application/json\": {\n                                schema: { $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\" },\n                            },\n                        },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n        },\n        \"/emulator/v1/projects/{targetProjectId}/tenants/{tenantId}/verificationCodes\": {\n            parameters: [\n                {\n                    name: \"targetProjectId\",\n                    in: \"path\",\n                    description: \"The ID of the Google Cloud project that the verification codes belongs to.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n                {\n                    name: \"tenantId\",\n                    in: \"path\",\n                    description: \"The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.\",\n                    required: true,\n                    schema: { type: \"string\" },\n                },\n            ],\n            servers: [{ url: \"\" }],\n            get: {\n                description: \"List all pending phone verification codes for the project.\",\n                operationId: \"emulator.projects.verificationCodes.list\",\n                responses: {\n                    200: {\n                        description: \"Successful response\",\n                        content: {\n                            \"application/json\": {\n                                schema: { $ref: \"#/components/schemas/EmulatorV1ProjectsOobCodes\" },\n                            },\n                        },\n                    },\n                },\n                security: [],\n                tags: [\"emulator\"],\n            },\n        },\n    },\n    components: {\n        schemas: {\n            GoogleCloudIdentitytoolkitV1Argon2Parameters: {\n                description: \"The parameters for Argon2 hashing algorithm.\",\n                properties: {\n                    associatedData: {\n                        description: \"The additional associated data, if provided, is appended to the hash value to provide an additional layer of security. A base64-encoded string if specified via JSON.\",\n                        format: \"byte\",\n                        type: \"string\",\n                    },\n                    hashLengthBytes: {\n                        description: \"Required. The desired hash length in bytes. Minimum is 4 and maximum is 1024.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    hashType: {\n                        description: \"Required. Must not be HASH_TYPE_UNSPECIFIED.\",\n                        enum: [\"HASH_TYPE_UNSPECIFIED\", \"ARGON2_D\", \"ARGON2_ID\", \"ARGON2_I\"],\n                        type: \"string\",\n                    },\n                    iterations: {\n                        description: \"Required. The number of iterations to perform. Minimum is 1, maximum is 16.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    memoryCostKib: {\n                        description: \"Required. The memory cost in kibibytes. Maximum is 32768.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    parallelism: {\n                        description: \"Required. The degree of parallelism, also called threads or lanes. Minimum is 1, maximum is 16.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    version: {\n                        description: \"The version of the Argon2 algorithm. This defaults to VERSION_13 if not specified.\",\n                        enum: [\"VERSION_UNSPECIFIED\", \"VERSION_10\", \"VERSION_13\"],\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1AutoRetrievalInfo: {\n                description: \"The information required to auto-retrieve an SMS.\",\n                properties: {\n                    appSignatureHash: {\n                        description: \"The Android app's signature hash for Google Play Service's SMS Retriever API.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest: {\n                description: \"Request message for BatchDeleteAccounts.\",\n                properties: {\n                    force: {\n                        description: \"Whether to force deleting accounts that are not in disabled state. If false, only disabled accounts will be deleted, and accounts that are not disabled will be added to the `errors`.\",\n                        type: \"boolean\",\n                    },\n                    localIds: {\n                        description: \"Required. List of user IDs to be deleted.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    tenantId: {\n                        description: \"If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong to an default Identity Platform project, the field is not needed.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse: {\n                description: \"Response message to BatchDeleteAccounts.\",\n                properties: {\n                    errors: {\n                        description: \"Detailed error info for accounts that cannot be deleted.\",\n                        items: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo\",\n                        },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo: {\n                description: \"Error info for account failed to be deleted.\",\n                properties: {\n                    index: {\n                        description: \"The index of the errored item in the original local_ids field.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    localId: { description: \"The corresponding user ID.\", type: \"string\" },\n                    message: { description: \"Detailed error message.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1CreateAuthUriRequest: {\n                description: \"Request message for CreateAuthUri.\",\n                properties: {\n                    appId: { type: \"string\" },\n                    authFlowType: {\n                        description: \"Used for the Google provider. The type of the authentication flow to be used. If present, this should be `CODE_FLOW` to specify the authorization code flow. Otherwise, the default ID Token flow will be used.\",\n                        type: \"string\",\n                    },\n                    context: {\n                        description: \"An opaque string used to maintain contextual information between the authentication request and the callback from the IdP.\",\n                        type: \"string\",\n                    },\n                    continueUri: {\n                        description: \"A valid URL for the IdP to redirect the user back to. The URL cannot contain fragments or the reserved `state` query parameter.\",\n                        type: \"string\",\n                    },\n                    customParameter: {\n                        additionalProperties: { type: \"string\" },\n                        description: \"Additional customized query parameters to be added to the authorization URI. The following parameters are reserved and cannot be added: `client_id`, `response_type`, `scope`, `redirect_uri`, `state`. For the Microsoft provider, the Azure AD tenant to sign-in to can be specified in the `tenant` custom parameter.\",\n                        type: \"object\",\n                    },\n                    hostedDomain: {\n                        description: \"Used for the Google provider. The G Suite hosted domain of the user in order to restrict sign-in to users at that domain.\",\n                        type: \"string\",\n                    },\n                    identifier: {\n                        description: \"The email identifier of the user account to fetch associated providers for. At least one of the fields `identifier` and `provider_id` must be set. The length of the email address should be less than 256 characters and in the format of `name@domain.tld`. The email address should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n                        type: \"string\",\n                    },\n                    oauthConsumerKey: { type: \"string\" },\n                    oauthScope: {\n                        description: \"Additional space-delimited OAuth 2.0 scopes specifying the scope of the authentication request with the IdP. Used for OAuth 2.0 IdPs. For the Google provider, the authorization code flow will be used if this field is set.\",\n                        type: \"string\",\n                    },\n                    openidRealm: { type: \"string\" },\n                    otaApp: { type: \"string\" },\n                    providerId: {\n                        description: \"The provider ID of the IdP for the user to sign in with. This should be a provider ID enabled for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com/identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`. At least one of the fields `identifier` and `provider_id` must be set.\",\n                        type: \"string\",\n                    },\n                    sessionId: {\n                        description: \"A session ID that can be verified against in SignInWithIdp to prevent session fixation attacks. If absent, a random string will be generated and returned as the session ID.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant to create an authorization URI or lookup an email identifier for. If not set, the operation will be performed in the default Identity Platform instance in the project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1CreateAuthUriResponse: {\n                description: \"Response message for CreateAuthUri.\",\n                properties: {\n                    allProviders: { items: { type: \"string\" }, type: \"array\" },\n                    authUri: {\n                        description: \"The authorization URI for the requested provider. Present only when a provider ID is set in the request.\",\n                        type: \"string\",\n                    },\n                    captchaRequired: {\n                        description: \"Whether a CAPTCHA is needed because there have been too many failed login attempts by the user. Present only when a registered email identifier is set in the request.\",\n                        type: \"boolean\",\n                    },\n                    forExistingProvider: {\n                        description: \"Whether the user has previously signed in with the provider ID in the request. Present only when a registered email identifier is set in the request.\",\n                        type: \"boolean\",\n                    },\n                    kind: { type: \"string\" },\n                    providerId: {\n                        description: \"The provider ID from the request, if provided.\",\n                        type: \"string\",\n                    },\n                    registered: {\n                        description: \"Whether the email identifier represents an existing account. Present only when an email identifier is set in the request.\",\n                        type: \"boolean\",\n                    },\n                    sessionId: {\n                        description: \"The session ID from the request, or a random string generated by CreateAuthUri if absent. It is used to prevent session fixation attacks.\",\n                        type: \"string\",\n                    },\n                    signinMethods: {\n                        description: \"The list of sign-in methods that the user has previously used. Each element is one of `password`, `emailLink`, or the provider ID of an IdP. Present only when a registered email identifier is set in the request.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest: {\n                description: \"Request message for CreateSessionCookie.\",\n                properties: {\n                    idToken: { description: \"Required. A valid Identity Platform ID token.\", type: \"string\" },\n                    tenantId: {\n                        description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n                        type: \"string\",\n                    },\n                    validDuration: {\n                        description: \"The number of seconds until the session cookie expires. Specify a duration in seconds, between five minutes and fourteen days, inclusively.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse: {\n                description: \"Response message for CreateSessionCookie.\",\n                properties: {\n                    sessionCookie: {\n                        description: \"The session cookie that has been created from the Identity Platform ID token specified in the request. It is in the form of a JSON Web Token (JWT). Always present.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1DeleteAccountRequest: {\n                description: \"Request message for DeleteAccount.\",\n                properties: {\n                    delegatedProjectNumber: { format: \"int64\", type: \"string\" },\n                    idToken: {\n                        description: \"The Identity Platform ID token of the account to delete. Require to be specified for requests from end users that lack Google OAuth 2.0 credential. Authenticated requests bearing a Google OAuth2 credential with proper permissions may pass local_id to specify the account to delete alternatively.\",\n                        type: \"string\",\n                    },\n                    localId: {\n                        description: \"The ID of user account to delete. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). Requests from users lacking the credential should pass an ID token instead.\",\n                        type: \"string\",\n                    },\n                    targetProjectId: {\n                        description: \"The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the tenant that the account belongs to, if applicable. Only require to be specified for authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an account that belongs to an Identity Platform tenant.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1DeleteAccountResponse: {\n                description: \"Response message for DeleteAccount.\",\n                properties: { kind: { type: \"string\" } },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1DownloadAccountResponse: {\n                description: \"Response message for DownloadAccount.\",\n                properties: {\n                    kind: { type: \"string\" },\n                    nextPageToken: {\n                        description: \"If there are more accounts to be downloaded, a token that can be passed back to DownloadAccount to get more accounts. Otherwise, this is blank.\",\n                        type: \"string\",\n                    },\n                    users: {\n                        description: \"All accounts belonging to the project/tenant limited by max_results in the request.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1EmailTemplate: {\n                description: \"Email template\",\n                properties: {\n                    body: { description: \"Email body\", type: \"string\" },\n                    customized: {\n                        description: \"Whether the body or subject of the email is customized.\",\n                        type: \"boolean\",\n                    },\n                    disabled: {\n                        description: \"Whether the template is disabled. If true, a default template will be used.\",\n                        type: \"boolean\",\n                    },\n                    format: {\n                        description: \"Email body format\",\n                        enum: [\"EMAIL_BODY_FORMAT_UNSPECIFIED\", \"PLAINTEXT\", \"HTML\"],\n                        type: \"string\",\n                    },\n                    from: { description: \"From address of the email\", type: \"string\" },\n                    fromDisplayName: { description: \"From display name\", type: \"string\" },\n                    fromLocalPart: { description: \"Local part of From address\", type: \"string\" },\n                    locale: {\n                        description: \"Value is in III language code format (e.g. \\\"zh-CN\\\", \\\"es\\\"). Both '-' and '_' separators are accepted.\",\n                        type: \"string\",\n                    },\n                    replyTo: { description: \"Reply-to address\", type: \"string\" },\n                    subject: { description: \"Subject of the email\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1ErrorInfo: {\n                description: \"Error information explaining why an account cannot be uploaded. batch upload.\",\n                properties: {\n                    index: {\n                        description: \"The index of the item, range is [0, request.size - 1]\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    message: { description: \"Detailed error message\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1FederatedUserIdentifier: {\n                description: \"Federated user identifier at an Identity Provider.\",\n                properties: {\n                    providerId: {\n                        description: \"The ID of supported identity providers. This should be a provider ID enabled for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com/identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`.\",\n                        type: \"string\",\n                    },\n                    rawId: {\n                        description: \"The user ID of the account at the third-party Identity Provider specified by `provider_id`.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1GetAccountInfoRequest: {\n                description: \"Request message for GetAccountInfo.\",\n                properties: {\n                    delegatedProjectNumber: { format: \"int64\", type: \"string\" },\n                    email: {\n                        description: \"The email address of one or more accounts to fetch. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. Should only be specified by authenticated requests from a developer.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    federatedUserId: {\n                        description: \"The federated user identifier of one or more accounts to fetch. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        items: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1FederatedUserIdentifier\",\n                        },\n                        type: \"array\",\n                    },\n                    idToken: {\n                        description: \"The Identity Platform ID token of the account to fetch. Require to be specified for requests from end users.\",\n                        type: \"string\",\n                    },\n                    initialEmail: {\n                        description: \"The initial email of one or more accounts to fetch. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. Should only be specified by authenticated requests from a developer.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    localId: {\n                        description: \"The ID of one or more accounts to fetch. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    phoneNumber: {\n                        description: \"The phone number of one or more accounts to fetch. Should only be specified by authenticated requests from a developer and should be in E.164 format, for example, +15555555555.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    targetProjectId: {\n                        description: \"The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the tenant that the account belongs to. Should only be specified by authenticated requests from a developer.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1GetAccountInfoResponse: {\n                description: \"Response message for GetAccountInfo.\",\n                properties: {\n                    kind: { type: \"string\" },\n                    users: {\n                        description: \"The information of specific user account(s) matching the parameters in the request.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1GetOobCodeRequest: {\n                description: \"Request message for GetOobCode.\",\n                properties: {\n                    androidInstallApp: {\n                        description: \"If an associated android app can handle the OOB code, whether or not to install the android app on the device where the link is opened if the app is not already installed.\",\n                        type: \"boolean\",\n                    },\n                    androidMinimumVersion: {\n                        description: \"If an associated android app can handle the OOB code, the minimum version of the app. If the version on the device is lower than this version then the user is taken to Google Play Store to upgrade the app.\",\n                        type: \"string\",\n                    },\n                    androidPackageName: {\n                        description: \"If an associated android app can handle the OOB code, the Android package name of the android app that will handle the callback when this OOB code is used. This will allow the correct app to open if it is already installed, or allow Google Play Store to open to the correct app if it is not yet installed.\",\n                        type: \"string\",\n                    },\n                    canHandleCodeInApp: {\n                        description: \"When set to true, the OOB code link will be be sent as a Universal Link or an Android App Link and will be opened by the corresponding app if installed. If not set, or set to false, the OOB code will be sent to the web widget first and then on continue will redirect to the app if installed.\",\n                        type: \"boolean\",\n                    },\n                    captchaResp: {\n                        description: \"For a PASSWORD_RESET request, a reCaptcha response is required when the system detects possible abuse activity. In those cases, this is the response from the reCaptcha challenge used to verify the caller.\",\n                        type: \"string\",\n                    },\n                    challenge: { type: \"string\" },\n                    continueUrl: {\n                        description: \"The Url to continue after user clicks the link sent in email. This is the url that will allow the web widget to handle the OOB code.\",\n                        type: \"string\",\n                    },\n                    dynamicLinkDomain: {\n                        description: \"In order to ensure that the url used can be easily opened up in iOS or android, we create a [Firebase Dynamic Link](https://firebase.google.com/docs/dynamic-links). Most Identity Platform projects will only have one Dynamic Link domain enabled, and can leave this field blank. This field contains a specified Dynamic Link domain for projects that have multiple enabled.\",\n                        type: \"string\",\n                    },\n                    email: {\n                        description: \"The account's email address to send the OOB code to, and generally the email address of the account that needs to be updated. Required for PASSWORD_RESET, EMAIL_SIGNIN, and VERIFY_EMAIL.\",\n                        type: \"string\",\n                    },\n                    iOSAppStoreId: {\n                        description: \"If an associated iOS app can handle the OOB code, the App Store id of this app. This will allow App Store to open to the correct app if the app is not yet installed.\",\n                        type: \"string\",\n                    },\n                    iOSBundleId: {\n                        description: \"If an associated iOS app can handle the OOB code, the iOS bundle id of this app. This will allow the correct app to open if it is already installed.\",\n                        type: \"string\",\n                    },\n                    idToken: { type: \"string\" },\n                    newEmail: { type: \"string\" },\n                    requestType: {\n                        description: \"Required. The type of out-of-band (OOB) code to send. Depending on this value, other fields in this request will be required and/or have different meanings. There are 3 different OOB codes that can be sent: * PASSWORD_RESET * EMAIL_SIGNIN * VERIFY_EMAIL\",\n                        enum: [\n                            \"OOB_REQ_TYPE_UNSPECIFIED\",\n                            \"PASSWORD_RESET\",\n                            \"OLD_EMAIL_AGREE\",\n                            \"NEW_EMAIL_ACCEPT\",\n                            \"VERIFY_EMAIL\",\n                            \"RECOVER_EMAIL\",\n                            \"EMAIL_SIGNIN\",\n                            \"VERIFY_AND_CHANGE_EMAIL\",\n                            \"REVERT_SECOND_FACTOR_ADDITION\",\n                        ],\n                        type: \"string\",\n                    },\n                    returnOobLink: {\n                        description: \"Whether the confirmation link containing the OOB code should be returned in the response (no email is sent). Used when a developer wants to construct the email template and send it on their own. By default this is false; to specify this field, and to set it to true, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)\",\n                        type: \"boolean\",\n                    },\n                    targetProjectId: {\n                        description: \"The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n                        type: \"string\",\n                    },\n                    userIp: {\n                        description: \"The IP address of the caller. Required only for PASSWORD_RESET requests.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1GetOobCodeResponse: {\n                description: \"Response message for GetOobCode.\",\n                properties: {\n                    email: {\n                        description: \"If return_oob_link is false in the request, the email address the verification was sent to.\",\n                        type: \"string\",\n                    },\n                    kind: { type: \"string\" },\n                    oobCode: {\n                        description: \"If return_oob_link is true in the request, the OOB code to send.\",\n                        type: \"string\",\n                    },\n                    oobLink: {\n                        description: \"If return_oob_link is true in the request, the OOB link to be sent to the user. This returns the constructed link including [Firebase Dynamic Link](https://firebase.google.com/docs/dynamic-links) related parameters.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1GetProjectConfigResponse: {\n                description: \"Response message for GetProjectConfig.\",\n                properties: {\n                    allowPasswordUser: {\n                        description: \"Whether to allow password account sign up. This field is only returned for authenticated calls from a developer.\",\n                        type: \"boolean\",\n                    },\n                    apiKey: {\n                        description: \"Google Cloud API key. This field is only returned for authenticated calls from a developer.\",\n                        type: \"string\",\n                    },\n                    authorizedDomains: {\n                        description: \"Authorized domains for widget redirect.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    changeEmailTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\",\n                    },\n                    dynamicLinksDomain: {\n                        description: \"The Firebase Dynamic Links domain used to construct links for redirects to native apps.\",\n                        type: \"string\",\n                    },\n                    enableAnonymousUser: {\n                        description: \"Whether anonymous user is enabled. This field is only returned for authenticated calls from a developer.\",\n                        type: \"boolean\",\n                    },\n                    idpConfig: {\n                        description: \"OAuth2 provider config. This field is only returned for authenticated calls from a developer.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1IdpConfig\" },\n                        type: \"array\",\n                    },\n                    legacyResetPasswordTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\",\n                    },\n                    projectId: {\n                        description: \"The project id of the retrieved configuration.\",\n                        type: \"string\",\n                    },\n                    resetPasswordTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\",\n                    },\n                    revertSecondFactorAdditionTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\",\n                    },\n                    useEmailSending: {\n                        description: \"Whether to use email sending. This field is only returned for authenticated calls from a developer.\",\n                        type: \"boolean\",\n                    },\n                    verifyEmailTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1EmailTemplate\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse: {\n                description: \"Response message for GetRecaptchaParam.\",\n                properties: {\n                    kind: { type: \"string\" },\n                    recaptchaSiteKey: {\n                        description: \"The reCAPTCHA v2 site key used to invoke the reCAPTCHA service. Always present.\",\n                        type: \"string\",\n                    },\n                    recaptchaStoken: { type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse: {\n                description: \"Response message for GetSessionCookiePublicKeys.\",\n                properties: {\n                    keys: {\n                        description: \"Public keys of the session cookie signer, formatted as [JSON Web Keys (JWK)](https://tools.ietf.org/html/rfc7517).\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1OpenIdConnectKey\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1IdpConfig: {\n                description: \"Config of an identity provider.\",\n                properties: {\n                    clientId: { description: \"OAuth2 client ID.\", type: \"string\" },\n                    enabled: {\n                        description: \"True if allows the user to sign in with the provider.\",\n                        type: \"boolean\",\n                    },\n                    experimentPercent: {\n                        description: \"Percent of users who will be prompted/redirected federated login for this IdP\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    provider: {\n                        description: \"Name of the identity provider.\",\n                        enum: [\n                            \"PROVIDER_UNSPECIFIED\",\n                            \"MSLIVE\",\n                            \"GOOGLE\",\n                            \"FACEBOOK\",\n                            \"PAYPAL\",\n                            \"TWITTER\",\n                            \"YAHOO\",\n                            \"AOL\",\n                            \"GITHUB\",\n                            \"GOOGLE_PLAY_GAMES\",\n                            \"LINKEDIN\",\n                            \"IOS_GAME_CENTER\",\n                        ],\n                        type: \"string\",\n                    },\n                    secret: { description: \"OAuth2 client secret.\", type: \"string\" },\n                    whitelistedAudiences: {\n                        description: \"Whitelisted client IDs for audience check.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest: {\n                description: \"Request message for IssueSamlResponse.\",\n                properties: {\n                    idToken: {\n                        description: \"The Identity Platform ID token. It will be verified and then converted to a new SAMLResponse.\",\n                        type: \"string\",\n                    },\n                    rpId: {\n                        description: \"Relying Party identifier, which is the audience of issued SAMLResponse.\",\n                        type: \"string\",\n                    },\n                    samlAppEntityId: {\n                        description: \"SAML app entity id specified in Google Admin Console for each app. If developers want to redirect to a third-party app rather than a G Suite app, they'll probably they need this. When it's used, we'll return a RelayState. This includes a SAMLRequest, which can be used to trigger a SP-initiated SAML flow to redirect to the real app.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse: {\n                description: \"Response for IssueSamlResponse request.\",\n                properties: {\n                    acsEndpoint: {\n                        description: \"The ACS endpoint which consumes the returned SAMLResponse.\",\n                        type: \"string\",\n                    },\n                    email: { description: \"Email of the user.\", type: \"string\" },\n                    firstName: { description: \"First name of the user.\", type: \"string\" },\n                    isNewUser: {\n                        description: \"Whether the logged in user was created by this request.\",\n                        type: \"boolean\",\n                    },\n                    lastName: { description: \"Last name of the user.\", type: \"string\" },\n                    relayState: { description: \"Generated RelayState.\", type: \"string\" },\n                    samlResponse: {\n                        description: \"Signed SAMLResponse created for the Relying Party.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1MfaEnrollment: {\n                description: \"Information on which multi-factor authentication (MFA) providers are enabled for an account.\",\n                properties: {\n                    displayName: {\n                        description: 'Display name for this mfa option e.g. \"corp cell phone\".',\n                        type: \"string\",\n                    },\n                    enrolledAt: {\n                        description: \"Timestamp when the account enrolled this second factor.\",\n                        format: \"google-datetime\",\n                        type: \"string\",\n                    },\n                    mfaEnrollmentId: { description: \"ID of this MFA option.\", type: \"string\" },\n                    phoneInfo: {\n                        description: \"Normally this will show the phone number associated with this enrollment. In some situations, such as after a first factor sign in, it will only show the obfuscated version of the associated phone number.\",\n                        type: \"string\",\n                    },\n                    unobfuscatedPhoneInfo: {\n                        description: \"Output only. Unobfuscated phone_info.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1MfaFactor: {\n                properties: {\n                    displayName: {\n                        description: 'Display name for this mfa option e.g. \"corp cell phone\".',\n                        type: \"string\",\n                    },\n                    phoneInfo: { description: \"Phone number to receive OTP for MFA.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1MfaInfo: {\n                description: \"Multi-factor authentication related information.\",\n                properties: {\n                    enrollments: {\n                        description: \"The second factors the user has enrolled.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1OpenIdConnectKey: {\n                description: \"Represents a public key of the session cookie signer, formatted as a [JSON Web Key (JWK)](https://tools.ietf.org/html/rfc7517).\",\n                properties: {\n                    alg: { description: \"Signature algorithm.\", type: \"string\" },\n                    e: {\n                        description: \"Exponent for the RSA public key, it is represented as the base64url encoding of the value's big endian representation.\",\n                        type: \"string\",\n                    },\n                    kid: { description: \"Unique string to identify this key.\", type: \"string\" },\n                    kty: { description: \"Key type.\", type: \"string\" },\n                    n: {\n                        description: \"Modulus for the RSA public key, it is represented as the base64url encoding of the value's big endian representation.\",\n                        type: \"string\",\n                    },\n                    use: { description: \"Key use.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1ProviderUserInfo: {\n                description: \"Information about the user as provided by various Identity Providers.\",\n                properties: {\n                    displayName: {\n                        description: \"The user's display name at the Identity Provider.\",\n                        type: \"string\",\n                    },\n                    email: {\n                        description: \"The user's email address at the Identity Provider.\",\n                        type: \"string\",\n                    },\n                    federatedId: {\n                        description: \"The user's identifier at the Identity Provider.\",\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"The user's phone number at the Identity Provider.\",\n                        type: \"string\",\n                    },\n                    photoUrl: {\n                        description: \"The user's profile photo URL at the Identity Provider.\",\n                        type: \"string\",\n                    },\n                    providerId: { description: \"The ID of the Identity Provider.\", type: \"string\" },\n                    rawId: {\n                        description: \"The user's raw identifier directly returned from Identity Provider.\",\n                        type: \"string\",\n                    },\n                    screenName: {\n                        description: \"The user's screen_name at Twitter or login name at GitHub.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1QueryUserInfoRequest: {\n                description: \"Request message for QueryUserInfo.\",\n                properties: {\n                    expression: {\n                        description: \"Query conditions used to filter results. If more than one is passed, only the first SqlExpression is evaluated.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SqlExpression\" },\n                        type: \"array\",\n                    },\n                    limit: {\n                        description: \"The maximum number of accounts to return with an upper limit of __500__. Defaults to _500_. Only valid when `return_user_info` is set to `true`.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    offset: {\n                        description: \"The number of accounts to skip from the beginning of matching records. Only valid when `return_user_info` is set to `true`.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    order: {\n                        description: \"The order for sorting query result. Defaults to __ascending__ order. Only valid when `return_user_info` is set to `true`.\",\n                        enum: [\"ORDER_UNSPECIFIED\", \"ASC\", \"DESC\"],\n                        type: \"string\",\n                    },\n                    returnUserInfo: {\n                        description: \"If `true`, this request will return the accounts matching the query. If `false`, only the __count__ of accounts matching the query will be returned. Defaults to `true`.\",\n                        type: \"boolean\",\n                    },\n                    sortBy: {\n                        description: \"The field to use for sorting user accounts. Defaults to `USER_ID`. Note: when `phone_number` is specified in `expression`, the result ignores the sorting. Only valid when `return_user_info` is set to `true`.\",\n                        enum: [\n                            \"SORT_BY_FIELD_UNSPECIFIED\",\n                            \"USER_ID\",\n                            \"NAME\",\n                            \"CREATED_AT\",\n                            \"LAST_LOGIN_AT\",\n                            \"USER_EMAIL\",\n                        ],\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the tenant to which the result is scoped.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1QueryUserInfoResponse: {\n                description: \"Response message for QueryUserInfo.\",\n                properties: {\n                    recordsCount: {\n                        description: \"If `return_user_info` in the request is true, this is the number of returned accounts in this message. Otherwise, this is the total number of accounts matching the query.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    userInfo: {\n                        description: \"If `return_user_info` in the request is true, this is the accounts matching the query.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1ResetPasswordRequest: {\n                description: \"Request message for ResetPassword.\",\n                properties: {\n                    email: {\n                        description: \"The email of the account to be modified. Specify this and the old password in order to change an account's password without using an out-of-band code.\",\n                        type: \"string\",\n                    },\n                    newPassword: {\n                        description: \"The new password to be set for this account. Specifying this field will result in a change to the account and consume the out-of-band code if one was specified and it was of type PASSWORD_RESET.\",\n                        type: \"string\",\n                    },\n                    oldPassword: {\n                        description: \"The current password of the account to be modified. Specify this and email to change an account's password without using an out-of-band code.\",\n                        type: \"string\",\n                    },\n                    oobCode: {\n                        description: \"An out-of-band (OOB) code generated by GetOobCode request. Specify only this parameter (or only this parameter and a tenant ID) to get the out-of-band code's type in the response without mutating the account's state. Only a PASSWORD_RESET out-of-band code can be consumed via this method.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The tenant ID of the Identity Platform tenant the account belongs to.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1ResetPasswordResponse: {\n                description: \"Response message for ResetPassword.\",\n                properties: {\n                    email: {\n                        description: \"The email associated with the out-of-band code that was used.\",\n                        type: \"string\",\n                    },\n                    kind: { type: \"string\" },\n                    mfaInfo: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\" },\n                    newEmail: { type: \"string\" },\n                    requestType: {\n                        enum: [\n                            \"OOB_REQ_TYPE_UNSPECIFIED\",\n                            \"PASSWORD_RESET\",\n                            \"OLD_EMAIL_AGREE\",\n                            \"NEW_EMAIL_ACCEPT\",\n                            \"VERIFY_EMAIL\",\n                            \"RECOVER_EMAIL\",\n                            \"EMAIL_SIGNIN\",\n                            \"VERIFY_AND_CHANGE_EMAIL\",\n                            \"REVERT_SECOND_FACTOR_ADDITION\",\n                        ],\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest: {\n                description: \"Request message for SendVerificationCode. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator.\",\n                properties: {\n                    autoRetrievalInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1AutoRetrievalInfo\",\n                    },\n                    iosReceipt: {\n                        description: \"Receipt of successful iOS app token validation. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. This should come from the response of verifyIosClient. If present, the caller should also provide the `ios_secret`, as well as a bundle ID in the `x-ios-bundle-identifier` header, which must match the bundle ID from the verifyIosClient request.\",\n                        type: \"string\",\n                    },\n                    iosSecret: {\n                        description: \"Secret delivered to iOS app as a push notification. Should be passed with an `ios_receipt` as well as the `x-ios-bundle-identifier` header.\",\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"The phone number to send the verification code to in E.164 format.\",\n                        type: \"string\",\n                    },\n                    recaptchaToken: {\n                        description: \"Recaptcha token for app verification. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. The recaptcha should be generated by calling getRecaptchaParams and the recaptcha token will be generated on user completion of the recaptcha challenge.\",\n                        type: \"string\",\n                    },\n                    safetyNetToken: {\n                        description: \"Android only. Used to assert application identity in place of a recaptcha token. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"Tenant ID of the Identity Platform tenant the user is signing in to.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse: {\n                description: \"Response message for SendVerificationCode.\",\n                properties: {\n                    sessionInfo: {\n                        description: \"Encrypted session information. This can be used in signInWithPhoneNumber to authenticate the phone number.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SetAccountInfoRequest: {\n                description: \"Request message for SetAccountInfo.\",\n                properties: {\n                    captchaChallenge: { type: \"string\" },\n                    captchaResponse: {\n                        description: \"The response from reCaptcha challenge. This is required when the system detects possible abuse activities.\",\n                        type: \"string\",\n                    },\n                    createdAt: {\n                        description: \"The timestamp in milliseconds when the account was created.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    customAttributes: {\n                        description: \"JSON formatted custom attributes to be stored in the Identity Platform ID token. Specifying this field requires a Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"string\",\n                    },\n                    delegatedProjectNumber: { format: \"int64\", type: \"string\" },\n                    deleteAttribute: {\n                        description: \"The account's attributes to be deleted.\",\n                        items: {\n                            enum: [\n                                \"USER_ATTRIBUTE_NAME_UNSPECIFIED\",\n                                \"EMAIL\",\n                                \"DISPLAY_NAME\",\n                                \"PROVIDER\",\n                                \"PHOTO_URL\",\n                                \"PASSWORD\",\n                                \"RAW_USER_INFO\",\n                            ],\n                            type: \"string\",\n                        },\n                        type: \"array\",\n                    },\n                    deleteProvider: {\n                        description: \"The Identity Providers to unlink from the user's account.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    disableUser: {\n                        description: \"If true, marks the account as disabled, meaning the user will no longer be able to sign-in.\",\n                        type: \"boolean\",\n                    },\n                    displayName: {\n                        description: \"The user's new display name to be updated in the account's attributes. The length of the display name must be less than or equal to 256 characters.\",\n                        type: \"string\",\n                    },\n                    email: {\n                        description: \"The user's new email to be updated in the account's attributes. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n                        type: \"string\",\n                    },\n                    emailVerified: {\n                        description: \"Whether the user's email has been verified. Specifying this field requires a Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"boolean\",\n                    },\n                    idToken: {\n                        description: \"A valid Identity Platform ID token. Required when attempting to change user-related information.\",\n                        type: \"string\",\n                    },\n                    instanceId: { type: \"string\" },\n                    lastLoginAt: {\n                        description: \"The timestamp in milliseconds when the account last logged in.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    linkProviderUserInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ProviderUserInfo\",\n                    },\n                    localId: {\n                        description: \"The ID of the user. Specifying this field requires a Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). For requests from end-users, an ID token should be passed instead.\",\n                        type: \"string\",\n                    },\n                    mfa: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaInfo\" },\n                    oobCode: {\n                        description: \"The out-of-band code to be applied on the user's account. The following out-of-band code types are supported: * VERIFY_EMAIL * RECOVER_EMAIL * REVERT_SECOND_FACTOR_ADDITION * VERIFY_AND_CHANGE_EMAIL\",\n                        type: \"string\",\n                    },\n                    password: {\n                        description: \"The user's new password to be updated in the account's attributes. The password must be at least 6 characters long.\",\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"The phone number to be updated in the account's attributes.\",\n                        type: \"string\",\n                    },\n                    photoUrl: {\n                        description: \"The user's new photo URL for the account's profile photo to be updated in the account's attributes. The length of the URL must be less than or equal to 2048 characters.\",\n                        type: \"string\",\n                    },\n                    provider: {\n                        description: \"The Identity Providers that the account should be associated with.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    returnSecureToken: {\n                        description: \"Whether or not to return an ID and refresh token. Should always be true.\",\n                        type: \"boolean\",\n                    },\n                    targetProjectId: {\n                        description: \"The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users should pass an Identity Platform ID token rather than setting this field.\",\n                        type: \"string\",\n                    },\n                    upgradeToFederatedLogin: {\n                        description: \"Whether the account should be restricted to only using federated login.\",\n                        type: \"boolean\",\n                    },\n                    validSince: {\n                        description: \"Specifies the minimum timestamp in seconds for an Identity Platform ID token to be considered valid.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SetAccountInfoResponse: {\n                description: \"Response message for SetAccountInfo\",\n                properties: {\n                    displayName: { type: \"string\" },\n                    email: { type: \"string\" },\n                    emailVerified: {\n                        description: \"Whether the account's email has been verified.\",\n                        type: \"boolean\",\n                    },\n                    expiresIn: {\n                        description: \"The number of seconds until the Identity Platform ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"An Identity Platform ID token for the account. This is used for legacy user sign up.\",\n                        type: \"string\",\n                    },\n                    kind: { type: \"string\" },\n                    localId: { description: \"The ID of the authenticated user.\", type: \"string\" },\n                    newEmail: {\n                        description: \"The new email that has been set on the user's account attributes.\",\n                        type: \"string\",\n                    },\n                    passwordHash: { type: \"string\" },\n                    photoUrl: { type: \"string\" },\n                    providerUserInfo: {\n                        description: \"The linked Identity Providers on the account.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ProviderUserInfo\" },\n                        type: \"array\",\n                    },\n                    refreshToken: {\n                        description: \"A refresh token for the account. This is used for legacy user sign up.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest: {\n                description: \"Request message for SignInWithCustomToken.\",\n                properties: {\n                    delegatedProjectNumber: { format: \"int64\", type: \"string\" },\n                    instanceId: { type: \"string\" },\n                    returnSecureToken: { description: \"Should always be true.\", type: \"boolean\" },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to. If present, the ID should match the tenant_id in the token.\",\n                        type: \"string\",\n                    },\n                    token: {\n                        description: 'Required. The custom Auth token asserted by the developer. The token should be a [JSON Web Token (JWT)](https://tools.ietf.org/html/rfc7519) that includes the claims listed in the [API reference](https://cloud.google.com/identity-platform/docs/reference/rest/client/) under the \"Custom Token Claims\" section.',\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse: {\n                description: \"Response message for SignInWithCustomToken.\",\n                properties: {\n                    expiresIn: {\n                        description: \"The number of seconds until the ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"An Identity Platform ID token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    isNewUser: {\n                        description: \"Whether the authenticated user was created by this request.\",\n                        type: \"boolean\",\n                    },\n                    kind: { type: \"string\" },\n                    refreshToken: {\n                        description: \"An Identity Platform refresh token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest: {\n                description: \"Request message for SignInWithEmailLink\",\n                properties: {\n                    email: {\n                        description: \"Required. The email address the sign-in link was sent to. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"A valid ID token for an Identity Platform account. If passed, this request will link the email address to the user represented by this ID token and enable sign-in with email link on the account for the future.\",\n                        type: \"string\",\n                    },\n                    oobCode: {\n                        description: \"Required. The out-of-band code from the email link.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse: {\n                description: \"Response message for SignInWithEmailLink.\",\n                properties: {\n                    email: {\n                        description: \"The email the user signed in with. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    expiresIn: {\n                        description: \"The number of seconds until the ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"An Identity Platform ID token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    isNewUser: {\n                        description: \"Whether the authenticated user was created by this request.\",\n                        type: \"boolean\",\n                    },\n                    kind: { type: \"string\" },\n                    localId: {\n                        description: \"The ID of the authenticated user. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    mfaInfo: {\n                        description: \"Info on which multi-factor authentication providers are enabled. Present if the user needs to complete the sign-in using multi-factor authentication.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\" },\n                        type: \"array\",\n                    },\n                    mfaPendingCredential: {\n                        description: \"An opaque string that functions as proof that the user has successfully passed the first factor check.\",\n                        type: \"string\",\n                    },\n                    refreshToken: {\n                        description: \"Refresh token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest: {\n                description: \"Request message for SignInWithGameCenter\",\n                properties: {\n                    displayName: { description: \"The user's Game Center display name.\", type: \"string\" },\n                    idToken: {\n                        description: \"A valid ID token for an Identity Platform account. If present, this request will link the Game Center player ID to the account represented by this ID token.\",\n                        type: \"string\",\n                    },\n                    playerId: { description: \"Required. The user's Game Center player ID.\", type: \"string\" },\n                    publicKeyUrl: {\n                        description: \"Required. The URL to fetch the Apple public key in order to verify the given signature is signed by Apple.\",\n                        type: \"string\",\n                    },\n                    salt: {\n                        description: \"Required. A random string used to generate the given signature.\",\n                        type: \"string\",\n                    },\n                    signature: {\n                        description: \"Required. The verification signature data generated by Apple.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to.\",\n                        type: \"string\",\n                    },\n                    timestamp: {\n                        description: \"Required. The time when the signature was created by Apple, in milliseconds since the epoch.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse: {\n                description: \"Response message for SignInWithGameCenter\",\n                properties: {\n                    displayName: { description: \"Display name of the authenticated user.\", type: \"string\" },\n                    expiresIn: {\n                        description: \"The number of seconds until the ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"An Identity Platform ID token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    isNewUser: {\n                        description: \"Whether the logged in user was created by this request.\",\n                        type: \"boolean\",\n                    },\n                    localId: {\n                        description: \"The ID of the authenticated user. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    playerId: { description: \"The user's Game Center player ID.\", type: \"string\" },\n                    refreshToken: {\n                        description: \"An Identity Platform refresh token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithIdpRequest: {\n                description: \"Request message for SignInWithIdp.\",\n                properties: {\n                    autoCreate: { type: \"boolean\" },\n                    delegatedProjectNumber: { format: \"int64\", type: \"string\" },\n                    idToken: {\n                        description: \"A valid Identity Platform ID token. If passed, the user's account at the IdP will be linked to the account represented by this ID token.\",\n                        type: \"string\",\n                    },\n                    pendingIdToken: { type: \"string\" },\n                    pendingToken: {\n                        description: \"An opaque string from a previous SignInWithIdp response. If set, it can be used to repeat the sign-in operation from the previous SignInWithIdp operation.\",\n                        type: \"string\",\n                    },\n                    postBody: {\n                        description: \"If the user is signing in with an authorization response obtained via a previous CreateAuthUri authorization request, this is the body of the HTTP POST callback from the IdP, if present. Otherwise, if the user is signing in with a manually provided IdP credential, this should be a URL-encoded form that contains the credential (e.g. an ID token or access token for OAuth 2.0 IdPs) and the provider ID of the IdP that issued the credential. For example, if the user is signing in to the Google provider using a Google ID token, this should be set to `id_token=[GOOGLE_ID_TOKEN]&providerId=google.com`, where `[GOOGLE_ID_TOKEN]` should be replaced with the Google ID token. If the user is signing in to the Facebook provider using a Facebook authentication token, this should be set to `id_token=[FACEBOOK_AUTHENTICATION_TOKEN]&providerId=facebook.com&nonce= [NONCE]`, where `[FACEBOOK_AUTHENTICATION_TOKEN]` should be replaced with the Facebook authentication token. Nonce is required for validating the token. The request will fail if no nonce is provided. If the user is signing in to the Facebook provider using a Facebook access token, this should be set to `access_token=[FACEBOOK_ACCESS_TOKEN]&providerId=facebook.com`, where `[FACEBOOK_ACCESS_TOKEN]` should be replaced with the Facebook access token. If the user is signing in to the Twitter provider using a Twitter OAuth 1.0 credential, this should be set to `access_token=[TWITTER_ACCESS_TOKEN]&oauth_token_secret=[TWITTER_TOKEN_SECRET]&providerId=twitter.com`, where `[TWITTER_ACCESS_TOKEN]` and `[TWITTER_TOKEN_SECRET]` should be replaced with the Twitter OAuth access token and Twitter OAuth token secret respectively.\",\n                        type: \"string\",\n                    },\n                    requestUri: {\n                        description: \"Required. The URL to which the IdP redirects the user back. This can be set to `http://localhost` if the user is signing in with a manually provided IdP credential.\",\n                        type: \"string\",\n                    },\n                    returnIdpCredential: {\n                        description: \"Whether or not to return OAuth credentials from the IdP on the following errors: `FEDERATED_USER_ID_ALREADY_LINKED` and `EMAIL_EXISTS`.\",\n                        type: \"boolean\",\n                    },\n                    returnRefreshToken: {\n                        description: \"Whether or not to return the OAuth refresh token from the IdP, if available.\",\n                        type: \"boolean\",\n                    },\n                    returnSecureToken: { description: \"Should always be true.\", type: \"boolean\" },\n                    sessionId: {\n                        description: \"The session ID returned from a previous CreateAuthUri call. This field is verified against that session ID to prevent session fixation attacks. Required if the user is signing in with an authorization response from a previous CreateAuthUri authorization request.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithIdpResponse: {\n                description: \"Response message for SignInWithIdp.\",\n                properties: {\n                    context: {\n                        description: \"The opaque string set in CreateAuthUri that is used to maintain contextual information between the authentication request and the callback from the IdP.\",\n                        type: \"string\",\n                    },\n                    dateOfBirth: {\n                        description: \"The date of birth for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    displayName: {\n                        description: \"The display name for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    email: {\n                        description: \"The email address of the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    emailRecycled: {\n                        description: 'Whether or not there is an existing Identity Platform user account with the same email address but linked to a different account at the same IdP. Only present if the \"One account per email address\" setting is enabled and the email address at the IdP is verified.',\n                        type: \"boolean\",\n                    },\n                    emailVerified: {\n                        description: \"Whether the user account's email address is verified.\",\n                        type: \"boolean\",\n                    },\n                    errorMessage: {\n                        description: \"The error message returned if `return_idp_credential` is set to `true` and either the `FEDERATED_USER_ID_ALREADY_LINKED` or `EMAIL_EXISTS` error is encountered. This field's value is either `FEDERATED_USER_ID_ALREADY_LINKED` or `EMAIL_EXISTS`.\",\n                        type: \"string\",\n                    },\n                    expiresIn: {\n                        description: \"The number of seconds until the Identity Platform ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    federatedId: {\n                        description: \"The user's account ID at the IdP. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    firstName: {\n                        description: \"The first name for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    fullName: {\n                        description: \"The full name for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"An Identity Platform ID token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    inputEmail: { type: \"string\" },\n                    isNewUser: {\n                        description: \"Whether or not a new Identity Platform account was created for the authenticated user.\",\n                        type: \"boolean\",\n                    },\n                    kind: { type: \"string\" },\n                    language: {\n                        description: \"The language preference for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    lastName: {\n                        description: \"The last name for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    localId: {\n                        description: \"The ID of the authenticated Identity Platform user. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    mfaInfo: {\n                        description: \"Info on which multi-factor authentication providers are enabled for the account. Present if the user needs to complete the sign-in using multi-factor authentication.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\" },\n                        type: \"array\",\n                    },\n                    mfaPendingCredential: {\n                        description: \"An opaque string that functions as proof that the user has successfully passed the first factor authentication.\",\n                        type: \"string\",\n                    },\n                    needConfirmation: {\n                        description: 'Whether or not there is an existing Identity Platform user account with the same email address as the current account signed in at the IdP, and the account\\'s email addresss is not verified at the IdP. The user will need to sign in to the existing Identity Platform account and then link the current credential from the IdP to it. Only present if the \"One account per email address\" setting is enabled.',\n                        type: \"boolean\",\n                    },\n                    needEmail: { type: \"boolean\" },\n                    nickName: {\n                        description: \"The nickname for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    oauthAccessToken: {\n                        description: \"The OAuth access token from the IdP, if available.\",\n                        type: \"string\",\n                    },\n                    oauthAuthorizationCode: {\n                        description: \"The OAuth 2.0 authorization code, if available. Only present for the Google provider.\",\n                        type: \"string\",\n                    },\n                    oauthExpireIn: {\n                        description: \"The number of seconds until the OAuth access token from the IdP expires.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    oauthIdToken: {\n                        description: \"The OpenID Connect ID token from the IdP, if available.\",\n                        type: \"string\",\n                    },\n                    oauthRefreshToken: {\n                        description: \"The OAuth 2.0 refresh token from the IdP, if available and `return_refresh_token` is set to `true`.\",\n                        type: \"string\",\n                    },\n                    oauthTokenSecret: {\n                        description: \"The OAuth 1.0 token secret from the IdP, if available. Only present for the Twitter provider.\",\n                        type: \"string\",\n                    },\n                    originalEmail: {\n                        description: 'The main (top-level) email address of the user\\'s Identity Platform account, if different from the email address at the IdP. Only present if the \"One account per email address\" setting is enabled.',\n                        type: \"string\",\n                    },\n                    pendingToken: {\n                        description: \"An opaque string that can be used as a credential from the IdP the user is signing into. The pending token obtained here can be set in a future SignInWithIdp request to sign the same user in with the IdP again.\",\n                        type: \"string\",\n                    },\n                    photoUrl: {\n                        description: \"The URL of the user's profile picture at the IdP.\",\n                        type: \"string\",\n                    },\n                    providerId: {\n                        description: \"The provider ID of the IdP that the user is signing in to. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    rawUserInfo: {\n                        description: \"The stringified JSON response containing all the data corresponding to the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    refreshToken: {\n                        description: \"An Identity Platform refresh token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    screenName: {\n                        description: \"The screen name for the user's account at the Twitter IdP or the login name for the user's account at the GitHub IdP.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The value of the `tenant_id` field in the request.\",\n                        type: \"string\",\n                    },\n                    timeZone: {\n                        description: \"The time zone for the user's account at the IdP.\",\n                        type: \"string\",\n                    },\n                    verifiedProvider: {\n                        description: \"A list of provider IDs that the user can sign in to in order to resolve a `need_confirmation` error. Only present if `need_confirmation` is set to `true`.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest: {\n                description: \"Request message for SignInWithPassword.\",\n                properties: {\n                    captchaChallenge: { type: \"string\" },\n                    captchaResponse: {\n                        description: \"The response from a reCaptcha challenge. A recaptcha response is required when the service detects possible abuse activity.\",\n                        type: \"string\",\n                    },\n                    delegatedProjectNumber: { format: \"int64\", type: \"string\" },\n                    email: {\n                        description: \"Required. The email the user is signing in with. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.\",\n                        type: \"string\",\n                    },\n                    idToken: { type: \"string\" },\n                    instanceId: { type: \"string\" },\n                    password: {\n                        description: \"Required. The password the user provides to sign in to the account.\",\n                        type: \"string\",\n                    },\n                    pendingIdToken: { type: \"string\" },\n                    returnSecureToken: { description: \"Should always be true.\", type: \"boolean\" },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform instance in the project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse: {\n                description: \"Response message for SignInWithPassword.\",\n                properties: {\n                    displayName: {\n                        description: \"The user's display name stored in the account's attributes.\",\n                        type: \"string\",\n                    },\n                    email: {\n                        description: \"The email of the authenticated user. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    expiresIn: {\n                        description: \"The number of seconds until the Identity Platform ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"An Identity Platform ID token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    kind: { type: \"string\" },\n                    localId: {\n                        description: \"The ID of the authenticated user. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    mfaInfo: {\n                        description: \"Info on which multi-factor authentication providers are enabled for the account. Present if the user needs to complete the sign-in using multi-factor authentication.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\" },\n                        type: \"array\",\n                    },\n                    mfaPendingCredential: {\n                        description: \"An opaque string that functions as proof that the user has successfully passed the first factor authentication.\",\n                        type: \"string\",\n                    },\n                    oauthAccessToken: { description: \"The OAuth2 access token.\", type: \"string\" },\n                    oauthAuthorizationCode: { type: \"string\" },\n                    oauthExpireIn: {\n                        description: \"The access token expiration time in seconds.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    profilePicture: {\n                        description: \"The user's profile picture stored in the account's attributes.\",\n                        type: \"string\",\n                    },\n                    refreshToken: {\n                        description: \"An Identity Platform refresh token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    registered: {\n                        description: \"Whether the email is for an existing account. Always true.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest: {\n                description: \"Request message for SignInWithPhoneNumber.\",\n                properties: {\n                    code: {\n                        description: \"User-entered verification code from an SMS sent to the user's phone.\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"A valid ID token for an Identity Platform account. If passed, this request will link the phone number to the user represented by this ID token if the phone number is not in use, or will reauthenticate the user if the phone number is already linked to the user.\",\n                        type: \"string\",\n                    },\n                    operation: {\n                        enum: [\"VERIFY_OP_UNSPECIFIED\", \"SIGN_UP_OR_IN\", \"REAUTH\", \"UPDATE\", \"LINK\"],\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"The user's phone number to sign in with. This is necessary in the case of uing a temporary proof, in which case it must match the phone number that was authenticated in the request that generated the temporary proof. This field is ignored if a session info is passed.\",\n                        type: \"string\",\n                    },\n                    sessionInfo: {\n                        description: \"Encrypted session information from the response of sendVerificationCode. In the case of authenticating with an SMS code this must be specified, but in the case of using a temporary proof it can be unspecified.\",\n                        type: \"string\",\n                    },\n                    temporaryProof: {\n                        description: \"A proof of the phone number verification, provided from a previous signInWithPhoneNumber request. If this is passed, the caller must also pass in the phone_number field the phone number that was verified in the previous request.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                    verificationProof: { description: \"Do not use.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse: {\n                description: \"Response message for SignInWithPhoneNumber.\",\n                properties: {\n                    expiresIn: {\n                        description: \"The number of seconds until the ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"Identity Platform ID token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    isNewUser: {\n                        description: \"Whether the authenticated user was created by this request.\",\n                        type: \"boolean\",\n                    },\n                    localId: {\n                        description: \"The id of the authenticated user. Present in the case of a successful authentication. In the case when the phone could be verified but the account operation could not be performed, a temporary proof will be returned instead.\",\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"Phone number of the authenticated user. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    refreshToken: {\n                        description: \"Refresh token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                    temporaryProof: {\n                        description: \"A proof of the phone number verification, provided if a phone authentication is successful but the user operation fails. This happens when the request tries to link a phone number to a user with an ID token or reauthenticate with an ID token but the phone number is linked to a different user.\",\n                        type: \"string\",\n                    },\n                    temporaryProofExpiresIn: {\n                        description: \"The number of seconds until the temporary proof expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    verificationProof: { description: \"Do not use.\", type: \"string\" },\n                    verificationProofExpiresIn: {\n                        description: \"Do not use.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignUpRequest: {\n                description: \"Request message for SignUp.\",\n                properties: {\n                    captchaChallenge: { type: \"string\" },\n                    captchaResponse: {\n                        description: \"The response from a reCaptcha challenge. A reCaptcha response is required when the service detects potential abuse activity.\",\n                        type: \"string\",\n                    },\n                    disabled: {\n                        description: \"Whether the user will be disabled upon creation. Disabled accounts are inaccessible except for requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"boolean\",\n                    },\n                    displayName: {\n                        description: \"The display name of the user to be created.\",\n                        type: \"string\",\n                    },\n                    email: {\n                        description: \"The email to assign to the created user. The length of the email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. An anonymous user will be created if not provided.\",\n                        type: \"string\",\n                    },\n                    emailVerified: {\n                        description: \"Whether the user's email is verified. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"boolean\",\n                    },\n                    idToken: {\n                        description: \"A valid ID token for an Identity Platform user. If set, this request will link the authentication credential to the user represented by this ID token. For a non-admin request, both the `email` and `password` fields must be set. For an admin request, `local_id` must not be set.\",\n                        type: \"string\",\n                    },\n                    instanceId: { type: \"string\" },\n                    localId: {\n                        description: \"The ID of the user to create. The ID must be unique within the project that the user is being created under. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"string\",\n                    },\n                    mfaInfo: {\n                        description: \"The multi-factor authentication providers for the user to create.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaFactor\" },\n                        type: \"array\",\n                    },\n                    password: {\n                        description: \"The password to assign to the created user. The password must be be at least 6 characters long. If set, the `email` field must also be set.\",\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"The phone number of the user to create. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        type: \"string\",\n                    },\n                    photoUrl: { description: \"The profile photo url of the user to create.\", type: \"string\" },\n                    targetProjectId: {\n                        description: \"The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant to create a user under. If not set, the user will be created under the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SignUpResponse: {\n                description: \"Response message for SignUp.\",\n                properties: {\n                    displayName: { description: \"The created user's display name.\", type: \"string\" },\n                    email: { description: \"The created user's email.\", type: \"string\" },\n                    expiresIn: {\n                        description: \"The number of seconds until the ID token expires.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    idToken: {\n                        description: \"An Identity Platform ID token for the created user. This field is only set for non-admin requests.\",\n                        type: \"string\",\n                    },\n                    kind: { type: \"string\" },\n                    localId: {\n                        description: \"The ID of the created user. Always present in the response.\",\n                        type: \"string\",\n                    },\n                    refreshToken: {\n                        description: \"An Identity Platform refresh token for the created user. This field is only set for non-admin requests.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1SqlExpression: {\n                description: \"Query conditions used to filter results.\",\n                properties: {\n                    email: {\n                        description: \"A case insensitive string that the account's email should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression. If more than one is specified, only the first (in that order) will be applied.\",\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"A string that the account's phone number should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression. If more than one is specified, only the first (in that order) will be applied.\",\n                        type: \"string\",\n                    },\n                    userId: {\n                        description: \"A string that the account's local ID should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression If more than one is specified, only the first (in that order) will be applied.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1UploadAccountRequest: {\n                description: \"Request message for UploadAccount.\",\n                properties: {\n                    allowOverwrite: {\n                        description: \"Whether to overwrite an existing account in Identity Platform with a matching `local_id` in the request. If true, the existing account will be overwritten. If false, an error will be returned.\",\n                        type: \"boolean\",\n                    },\n                    argon2Parameters: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1Argon2Parameters\",\n                    },\n                    blockSize: {\n                        description: \"The block size parameter used by the STANDARD_SCRYPT hashing function. This parameter, along with parallelization and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    cpuMemCost: {\n                        description: \"The CPU memory cost parameter to be used by the STANDARD_SCRYPT hashing function. This parameter, along with block_size and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    delegatedProjectNumber: {\n                        description: \"If true, the service will do the following list of checks before an account is uploaded: * Duplicate emails * Duplicate federated IDs * Federated ID provider validation If the duplication exists within the list of accounts to be uploaded, it will prevent the entire list from being uploaded. If the email or federated ID is a duplicate of a user already within the project/tenant, the account will not be uploaded, but the rest of the accounts will be unaffected. If false, these checks will be skipped.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    dkLen: {\n                        description: \"The desired key length for the STANDARD_SCRYPT hashing function. Must be at least 1.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    hashAlgorithm: {\n                        description: \"Required. The hashing function used to hash the account passwords. Must be one of the following: * HMAC_SHA256 * HMAC_SHA1 * HMAC_MD5 * SCRYPT * PBKDF_SHA1 * MD5 * HMAC_SHA512 * SHA1 * BCRYPT * PBKDF2_SHA256 * SHA256 * SHA512 * STANDARD_SCRYPT * ARGON2\",\n                        type: \"string\",\n                    },\n                    memoryCost: {\n                        description: \"Memory cost for hash calculation. Only required when the hashing function is SCRYPT.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    parallelization: {\n                        description: \"The parallelization cost parameter to be used by the STANDARD_SCRYPT hashing function. This parameter, along with block_size and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    passwordHashOrder: {\n                        description: \"Password and salt order when verify password.\",\n                        enum: [\"UNSPECIFIED_ORDER\", \"SALT_AND_PASSWORD\", \"PASSWORD_AND_SALT\"],\n                        type: \"string\",\n                    },\n                    rounds: {\n                        description: \"The number of rounds used for hash calculation. Only required for the following hashing functions: * MD5 * SHA1 * SHA256 * SHA512 * PBKDF_SHA1 * PBKDF2_SHA256 * SCRYPT\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                    saltSeparator: {\n                        description: \"One or more bytes to be inserted between the salt and plain text password. For stronger security, this should be a single non-printable character.\",\n                        format: \"byte\",\n                        type: \"string\",\n                    },\n                    sanityCheck: { type: \"boolean\" },\n                    signerKey: {\n                        description: \"The signer key used to hash the password. Required for the following hashing functions: * SCRYPT, * HMAC_MD5, * HMAC_SHA1, * HMAC_SHA256, * HMAC_SHA512\",\n                        format: \"byte\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the account belongs to.\",\n                        type: \"string\",\n                    },\n                    users: {\n                        description: \"A list of accounts to upload.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UserInfo\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1UploadAccountResponse: {\n                description: \"Response message for UploadAccount.\",\n                properties: {\n                    error: {\n                        description: \"Detailed error info for accounts that cannot be uploaded.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ErrorInfo\" },\n                        type: \"array\",\n                    },\n                    kind: { type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1UserInfo: {\n                description: \"An Identity Platform account's information.\",\n                properties: {\n                    createdAt: {\n                        description: \"The time, in milliseconds from epoch, when the account was created.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    customAttributes: {\n                        description: \"Custom claims to be added to any ID tokens minted for the account. Should be at most 1,000 characters in length and in valid JSON format.\",\n                        type: \"string\",\n                    },\n                    customAuth: {\n                        description: \"Output only. Whether this account has been authenticated using SignInWithCustomToken.\",\n                        readOnly: true,\n                        type: \"boolean\",\n                    },\n                    dateOfBirth: {\n                        description: \"Output only. The date of birth set for the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    disabled: {\n                        description: \"Whether the account is disabled. Disabled accounts are inaccessible except for requests bearing a Google OAuth2 credential with proper permissions.\",\n                        type: \"boolean\",\n                    },\n                    displayName: {\n                        description: \"The display name of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n                        type: \"string\",\n                    },\n                    email: {\n                        description: \"The account's email address. The length of the email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec.\",\n                        type: \"string\",\n                    },\n                    emailLinkSignin: {\n                        description: \"Output only. Whether the account can authenticate with email link.\",\n                        readOnly: true,\n                        type: \"boolean\",\n                    },\n                    emailVerified: {\n                        description: \"Whether the account's email address has been verified.\",\n                        type: \"boolean\",\n                    },\n                    initialEmail: {\n                        description: \"The first email address associated with this account. The account's initial email cannot be changed once set and is used to recover access to this account if lost via the RECOVER_EMAIL flow in GetOobCode. Should match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec.\",\n                        type: \"string\",\n                    },\n                    language: {\n                        description: \"Output only. The language preference of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    lastLoginAt: {\n                        description: \"The last time, in milliseconds from epoch, this account was logged into.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    lastRefreshAt: {\n                        description: \"Timestamp when an ID token was last minted for this account.\",\n                        format: \"google-datetime\",\n                        type: \"string\",\n                    },\n                    localId: { description: \"Immutable. The unique ID of the account.\", type: \"string\" },\n                    mfaInfo: {\n                        description: \"Information on which multi-factor authentication providers are enabled for this account.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1MfaEnrollment\" },\n                        type: \"array\",\n                    },\n                    passwordHash: {\n                        description: \"The account's hashed password. Only accessible by requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).\",\n                        format: \"byte\",\n                        type: \"string\",\n                    },\n                    passwordUpdatedAt: {\n                        description: \"The timestamp, in milliseconds from the epoch of 1970-01-01T00:00:00Z, when the account's password was last updated.\",\n                        format: \"double\",\n                        type: \"number\",\n                    },\n                    phoneNumber: { description: \"The account's phone number.\", type: \"string\" },\n                    photoUrl: {\n                        description: \"The URL of the account's profile photo. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n                        type: \"string\",\n                    },\n                    providerUserInfo: {\n                        description: \"Information about the user as provided by various Identity Providers.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1ProviderUserInfo\" },\n                        type: \"array\",\n                    },\n                    rawPassword: {\n                        description: \"Input only. Plain text password used to update a account's password. This field is only ever used as input in a request. Identity Platform uses cryptographically secure hashing when managing passwords and will never store or transmit a user's password in plain text.\",\n                        type: \"string\",\n                    },\n                    salt: {\n                        description: \"The account's password salt. Only accessible by requests bearing a Google OAuth2 credential with proper permissions.\",\n                        format: \"byte\",\n                        type: \"string\",\n                    },\n                    screenName: {\n                        description: \"Output only. This account's screen name at Twitter or login name at GitHub.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"ID of the tenant this account belongs to. Only set if this account belongs to a tenant.\",\n                        type: \"string\",\n                    },\n                    timeZone: {\n                        description: \"Output only. The time zone preference of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    validSince: {\n                        description: \"Oldest timestamp, in seconds since epoch, that an ID token should be considered valid. All ID tokens issued before this time are considered invalid.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    version: {\n                        description: \"The version of the account's password. Only accessible by requests bearing a Google OAuth2 credential with proper permissions.\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1VerifyIosClientRequest: {\n                description: \"Request message for VerifyIosClient\",\n                properties: {\n                    appToken: {\n                        description: \"A device token that the iOS client gets after registering to APNs (Apple Push Notification service).\",\n                        type: \"string\",\n                    },\n                    isSandbox: {\n                        description: \"Whether the app token is in the iOS sandbox. If false, the app token is in the production environment.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV1VerifyIosClientResponse: {\n                description: \"Response message for VerifyIosClient.\",\n                properties: {\n                    receipt: { description: \"Receipt of successful app token validation.\", type: \"string\" },\n                    suggestedTimeout: {\n                        description: \"Suggested time that the client should wait in seconds for delivery of the push notification.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Anonymous: {\n                description: \"Configuration options related to authenticating an anonymous user.\",\n                properties: {\n                    enabled: {\n                        description: \"Whether anonymous user auth is enabled for the project or not.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig: {\n                description: \"Additional config for SignInWithApple.\",\n                properties: {\n                    bundleIds: {\n                        description: \"A list of Bundle ID's usable by this project\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    codeFlowConfig: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig: {\n                description: \"Configuration related to Blocking Functions.\",\n                properties: {\n                    forwardInboundCredentials: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials\",\n                    },\n                    triggers: {\n                        additionalProperties: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Trigger\",\n                        },\n                        description: 'Map of Trigger to event type. Key should be one of the supported event types: \"beforeCreate\", \"beforeSignIn\"',\n                        type: \"object\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2ClientConfig: {\n                description: \"Options related to how clients making requests on behalf of a project should be configured.\",\n                properties: {\n                    apiKey: {\n                        description: \"Output only. API key that can be used when making requests for this project.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    firebaseSubdomain: {\n                        description: \"Output only. Firebase subdomain.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    permissions: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Permissions\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig: {\n                description: \"Additional config for Apple for code flow.\",\n                properties: {\n                    keyId: { description: \"Key ID for the private key.\", type: \"string\" },\n                    privateKey: {\n                        description: \"Private key used for signing the client secret JWT.\",\n                        type: \"string\",\n                    },\n                    teamId: { description: \"Apple Developer Team ID.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Config: {\n                description: \"Represents an Identity Toolkit project.\",\n                properties: {\n                    authorizedDomains: {\n                        description: \"List of domains authorized for OAuth redirects\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    blockingFunctions: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig\",\n                    },\n                    client: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2ClientConfig\" },\n                    mfa: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig\",\n                    },\n                    monitoring: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MonitoringConfig\",\n                    },\n                    multiTenant: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig\",\n                    },\n                    name: {\n                        description: 'Output only. The name of the Config resource. Example: \"projects/my-awesome-project/config\"',\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    notification: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2NotificationConfig\",\n                    },\n                    quota: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2QuotaConfig\" },\n                    signIn: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SignInConfig\" },\n                    subtype: {\n                        description: \"Output only. The subtype of this config.\",\n                        enum: [\"SUBTYPE_UNSPECIFIED\", \"IDENTITY_PLATFORM\", \"FIREBASE_AUTH\"],\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp: {\n                description: \"Standard Identity Toolkit-trusted IDPs.\",\n                properties: {\n                    description: { description: \"Description of the Idp\", type: \"string\" },\n                    idpId: { description: \"Id the of Idp\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig: {\n                description: \"Configurations options for authenticating with a the standard set of Identity Toolkit-trusted IDPs.\",\n                properties: {\n                    appleSignInConfig: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig\",\n                    },\n                    clientId: { description: \"OAuth client ID.\", type: \"string\" },\n                    clientSecret: { description: \"OAuth client secret.\", type: \"string\" },\n                    enabled: {\n                        description: \"True if allows the user to sign in with the provider.\",\n                        type: \"boolean\",\n                    },\n                    name: {\n                        description: 'The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"',\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2DnsInfo: {\n                description: \"Information of custom domain DNS verification. By default, default_domain will be used. A custom domain can be configured using VerifyCustomDomain.\",\n                properties: {\n                    customDomain: {\n                        description: \"Output only. The applied verified custom domain.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    customDomainState: {\n                        description: \"Output only. The current verification state of the custom domain. The custom domain will only be used once the domain verification is successful.\",\n                        enum: [\n                            \"VERIFICATION_STATE_UNSPECIFIED\",\n                            \"NOT_STARTED\",\n                            \"IN_PROGRESS\",\n                            \"FAILED\",\n                            \"SUCCEEDED\",\n                        ],\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    domainVerificationRequestTime: {\n                        description: \"Output only. The timestamp of initial request for the current domain verification.\",\n                        format: \"google-datetime\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    pendingCustomDomain: {\n                        description: \"Output only. The custom domain that's to be verified.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    useCustomDomain: { description: \"Whether to use custom domain.\", type: \"boolean\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Email: {\n                description: \"Configuration options related to authenticating a user by their email address.\",\n                properties: {\n                    enabled: {\n                        description: \"Whether email auth is enabled for the project or not.\",\n                        type: \"boolean\",\n                    },\n                    passwordRequired: {\n                        description: \"Whether a password is required for email auth or not. If true, both an email and password must be provided to sign in. If false, a user may sign in via either email/password or email link.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2EmailTemplate: {\n                description: \"Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.\",\n                properties: {\n                    body: { description: \"Email body\", type: \"string\" },\n                    bodyFormat: {\n                        description: \"Email body format\",\n                        enum: [\"BODY_FORMAT_UNSPECIFIED\", \"PLAIN_TEXT\", \"HTML\"],\n                        type: \"string\",\n                    },\n                    customized: {\n                        description: \"Output only. Whether the body or subject of the email is customized.\",\n                        readOnly: true,\n                        type: \"boolean\",\n                    },\n                    replyTo: { description: \"Reply-to address\", type: \"string\" },\n                    senderDisplayName: { description: \"Sender display name\", type: \"string\" },\n                    senderLocalPart: { description: \"Local part of From address\", type: \"string\" },\n                    subject: { description: \"Subject of the email\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials: {\n                description: \"Indicates which credentials to pass to the registered Blocking Functions.\",\n                properties: {\n                    accessToken: {\n                        description: \"Whether to pass the user's OAuth identity provider's access token.\",\n                        type: \"boolean\",\n                    },\n                    idToken: {\n                        description: \"Whether to pass the user's OIDC identity provider's ID token.\",\n                        type: \"boolean\",\n                    },\n                    refreshToken: {\n                        description: \"Whether to pass the user's OAuth identity provider's refresh token.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2HashConfig: {\n                description: \"History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.\",\n                properties: {\n                    algorithm: {\n                        description: \"Output only. Different password hash algorithms used in Identity Toolkit.\",\n                        enum: [\n                            \"HASH_ALGORITHM_UNSPECIFIED\",\n                            \"HMAC_SHA256\",\n                            \"HMAC_SHA1\",\n                            \"HMAC_MD5\",\n                            \"SCRYPT\",\n                            \"PBKDF_SHA1\",\n                            \"MD5\",\n                            \"HMAC_SHA512\",\n                            \"SHA1\",\n                            \"BCRYPT\",\n                            \"PBKDF2_SHA256\",\n                            \"SHA256\",\n                            \"SHA512\",\n                            \"STANDARD_SCRYPT\",\n                        ],\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    memoryCost: {\n                        description: \"Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.\",\n                        format: \"int32\",\n                        readOnly: true,\n                        type: \"integer\",\n                    },\n                    rounds: {\n                        description: \"Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.\",\n                        format: \"int32\",\n                        readOnly: true,\n                        type: \"integer\",\n                    },\n                    saltSeparator: {\n                        description: \"Output only. Non-printable character to be inserted between the salt and plain text password in base64.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    signerKey: {\n                        description: \"Output only. Signer key in base64.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2IdpCertificate: {\n                description: \"The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.\",\n                properties: { x509Certificate: { description: \"The x509 certificate\", type: \"string\" } },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2IdpConfig: {\n                description: \"The SAML IdP (Identity Provider) configuration when the project acts as the relying party.\",\n                properties: {\n                    idpCertificates: {\n                        description: \"IDP's public keys for verifying signature in the assertions.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2IdpCertificate\" },\n                        type: \"array\",\n                    },\n                    idpEntityId: { description: \"Unique identifier for all SAML entities.\", type: \"string\" },\n                    signRequest: {\n                        description: \"Indicates if outbounding SAMLRequest should be signed.\",\n                        type: \"boolean\",\n                    },\n                    ssoUrl: { description: \"URL to send Authentication request to.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig: {\n                description: \"A pair of SAML RP-IDP configurations when the project acts as the relying party.\",\n                properties: {\n                    displayName: {\n                        description: \"The config's display name set by developers.\",\n                        type: \"string\",\n                    },\n                    enabled: {\n                        description: \"True if allows the user to sign in with the provider.\",\n                        type: \"boolean\",\n                    },\n                    idpConfig: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2IdpConfig\" },\n                    name: {\n                        description: \"The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.\",\n                        type: \"string\",\n                    },\n                    spConfig: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SpConfig\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Inheritance: {\n                description: \"Settings that the tenants will inherit from project level.\",\n                properties: {\n                    emailSendingConfig: {\n                        description: \"Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse: {\n                description: \"Response for DefaultSupportedIdpConfigs\",\n                properties: {\n                    defaultSupportedIdpConfigs: {\n                        description: \"The set of configs.\",\n                        items: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                        },\n                        type: \"array\",\n                    },\n                    nextPageToken: {\n                        description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse: {\n                description: \"Response for ListDefaultSupportedIdps\",\n                properties: {\n                    defaultSupportedIdps: {\n                        description: \"The set of configs.\",\n                        items: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp\",\n                        },\n                        type: \"array\",\n                    },\n                    nextPageToken: {\n                        description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse: {\n                description: \"Response for ListInboundSamlConfigs\",\n                properties: {\n                    inboundSamlConfigs: {\n                        description: \"The set of configs.\",\n                        items: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                        },\n                        type: \"array\",\n                    },\n                    nextPageToken: {\n                        description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse: {\n                description: \"Response for ListOAuthIdpConfigs\",\n                properties: {\n                    nextPageToken: {\n                        description: \"Token to retrieve the next page of results, or empty if there are no more results in the list.\",\n                        type: \"string\",\n                    },\n                    oauthIdpConfigs: {\n                        description: \"The set of configs.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse: {\n                description: \"Response message for ListTenants.\",\n                properties: {\n                    nextPageToken: {\n                        description: \"The token to get the next page of results.\",\n                        type: \"string\",\n                    },\n                    tenants: {\n                        description: \"A list of tenants under the given agent project.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2MonitoringConfig: {\n                description: \"Configuration related to monitoring project activity.\",\n                properties: {\n                    requestLogging: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2RequestLogging\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig: {\n                description: \"Options related to MultiFactor Authentication for the project.\",\n                properties: {\n                    enabledProviders: {\n                        description: \"A list of usable second factors for this project.\",\n                        items: { enum: [\"PROVIDER_UNSPECIFIED\", \"PHONE_SMS\"], type: \"string\" },\n                        type: \"array\",\n                    },\n                    state: {\n                        description: \"Whether MultiFactor Authentication has been enabled for this project.\",\n                        enum: [\"STATE_UNSPECIFIED\", \"DISABLED\", \"ENABLED\", \"MANDATORY\"],\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig: {\n                description: \"Configuration related to multi-tenant functionality.\",\n                properties: {\n                    allowTenants: {\n                        description: \"Whether this project can have tenants or not.\",\n                        type: \"boolean\",\n                    },\n                    defaultTenantLocation: {\n                        description: 'The default cloud parent org or folder that the tenant project should be created under. The parent resource name should be in the format of \"/\", such as \"folders/123\" or \"organizations/456\". If the value is not set, the tenant will be created under the same organization or folder as the agent project.',\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2NotificationConfig: {\n                description: \"Configuration related to sending notifications to users.\",\n                properties: {\n                    defaultLocale: {\n                        description: \"Default locale used for email and SMS in IETF BCP 47 format.\",\n                        type: \"string\",\n                    },\n                    sendEmail: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SendEmail\" },\n                    sendSms: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SendSms\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig: {\n                description: \"Configuration options for authenticating with an OAuth IDP.\",\n                properties: {\n                    clientId: { description: \"The client id of an OAuth client.\", type: \"string\" },\n                    clientSecret: {\n                        description: \"The client secret of the OAuth client, to enable OIDC code flow.\",\n                        type: \"string\",\n                    },\n                    displayName: {\n                        description: \"The config's display name set by developers.\",\n                        type: \"string\",\n                    },\n                    enabled: {\n                        description: \"True if allows the user to sign in with the provider.\",\n                        type: \"boolean\",\n                    },\n                    issuer: { description: \"For OIDC Idps, the issuer identifier.\", type: \"string\" },\n                    name: {\n                        description: \"The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.\",\n                        type: \"string\",\n                    },\n                    responseType: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthResponseType\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2OAuthResponseType: {\n                description: \"The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.\",\n                properties: {\n                    code: {\n                        description: \"If true, authorization code is returned from IdP's authorization endpoint.\",\n                        type: \"boolean\",\n                    },\n                    idToken: {\n                        description: \"If true, ID token is returned from IdP's authorization endpoint.\",\n                        type: \"boolean\",\n                    },\n                    token: {\n                        description: \"Do not use. The `token` response type is not supported at the moment.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Permissions: {\n                description: \"Configuration related to restricting a user's ability to affect their account.\",\n                properties: {\n                    disabledUserDeletion: {\n                        description: \"When true, end users cannot delete their account on the associated project through any of our API methods\",\n                        type: \"boolean\",\n                    },\n                    disabledUserSignup: {\n                        description: \"When true, end users cannot sign up for a new account on the associated project through any of our API methods\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2PhoneNumber: {\n                description: \"Configuration options related to authenticated a user by their phone number.\",\n                properties: {\n                    enabled: {\n                        description: \"Whether phone number auth is enabled for the project or not.\",\n                        type: \"boolean\",\n                    },\n                    testPhoneNumbers: {\n                        additionalProperties: { type: \"string\" },\n                        description: \"A map of that can be used for phone auth testing.\",\n                        type: \"object\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2QuotaConfig: {\n                description: \"Configuration related to quotas.\",\n                properties: {\n                    signUpQuotaConfig: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2TemporaryQuota\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2RequestLogging: {\n                description: \"Configuration for logging requests made to this project to Stackdriver Logging\",\n                properties: {\n                    enabled: {\n                        description: \"Whether logging is enabled for this project or not.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2SendEmail: {\n                description: \"Options for email sending.\",\n                properties: {\n                    callbackUri: { description: \"action url in email template.\", type: \"string\" },\n                    changeEmailTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\",\n                    },\n                    dnsInfo: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DnsInfo\" },\n                    legacyResetPasswordTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\",\n                    },\n                    method: {\n                        description: \"The method used for sending an email.\",\n                        enum: [\"METHOD_UNSPECIFIED\", \"DEFAULT\", \"CUSTOM_SMTP\"],\n                        type: \"string\",\n                    },\n                    resetPasswordTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\",\n                    },\n                    revertSecondFactorAdditionTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\",\n                    },\n                    smtp: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Smtp\" },\n                    verifyEmailTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2EmailTemplate\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2SendSms: {\n                description: \"Options for SMS sending.\",\n                properties: {\n                    smsTemplate: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SmsTemplate\",\n                    },\n                    useDeviceLocale: {\n                        description: \"Whether to use the accept_language header for SMS.\",\n                        type: \"boolean\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2SignInConfig: {\n                description: \"Configuration related to local sign in methods.\",\n                properties: {\n                    allowDuplicateEmails: {\n                        description: \"Whether to allow more than one account to have the same email.\",\n                        type: \"boolean\",\n                    },\n                    anonymous: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Anonymous\" },\n                    email: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Email\" },\n                    hashConfig: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2HashConfig\" },\n                    phoneNumber: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2PhoneNumber\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2SmsTemplate: {\n                description: \"The template to use when sending an SMS.\",\n                properties: {\n                    content: {\n                        description: \"Output only. The SMS's content. Can contain the following placeholders which will be replaced with the appropriate values: %APP_NAME% - For Android or iOS apps, the app's display name. For web apps, the domain hosting the application. %LOGIN_CODE% - The OOB code being sent in the SMS.\",\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Smtp: {\n                description: \"Configuration for SMTP relay\",\n                properties: {\n                    host: { description: \"SMTP relay host\", type: \"string\" },\n                    password: { description: \"SMTP relay password\", type: \"string\" },\n                    port: { description: \"SMTP relay port\", format: \"int32\", type: \"integer\" },\n                    securityMode: {\n                        description: \"SMTP security mode.\",\n                        enum: [\"SECURITY_MODE_UNSPECIFIED\", \"SSL\", \"START_TLS\"],\n                        type: \"string\",\n                    },\n                    senderEmail: { description: \"Sender email for the SMTP relay\", type: \"string\" },\n                    username: { description: \"SMTP relay username\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2SpCertificate: {\n                description: \"The SP's certificate data for IDP to verify the SAMLRequest generated by the SP.\",\n                properties: {\n                    expiresAt: {\n                        description: \"Timestamp of the cert expiration instance.\",\n                        format: \"google-datetime\",\n                        type: \"string\",\n                    },\n                    x509Certificate: { description: \"Self-signed public certificate.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2SpConfig: {\n                description: \"The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.\",\n                properties: {\n                    callbackUri: {\n                        description: \"Callback URI where responses from IDP are handled.\",\n                        type: \"string\",\n                    },\n                    spCertificates: {\n                        description: \"Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.\",\n                        items: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2SpCertificate\" },\n                        readOnly: true,\n                        type: \"array\",\n                    },\n                    spEntityId: { description: \"Unique identifier for all SAML entities.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2TemporaryQuota: {\n                description: \"Temporary quota increase / decrease\",\n                properties: {\n                    quota: {\n                        description: \"Corresponds to the 'refill_token_count' field in QuotaServer config\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    quotaDuration: {\n                        description: \"How long this quota will be active for\",\n                        format: \"google-duration\",\n                        type: \"string\",\n                    },\n                    startTime: {\n                        description: \"When this quota will take affect\",\n                        format: \"google-datetime\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Tenant: {\n                description: \"A Tenant contains configuration for the tenant in a multi-tenant project.\",\n                properties: {\n                    allowPasswordSignup: {\n                        description: \"Whether to allow email/password user authentication.\",\n                        type: \"boolean\",\n                    },\n                    disableAuth: {\n                        description: \"Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.\",\n                        type: \"boolean\",\n                    },\n                    displayName: { description: \"Display name of the tenant.\", type: \"string\" },\n                    enableAnonymousUser: {\n                        description: \"Whether to enable anonymous user authentication.\",\n                        type: \"boolean\",\n                    },\n                    enableEmailLinkSignin: {\n                        description: \"Whether to enable email link user authentication.\",\n                        type: \"boolean\",\n                    },\n                    hashConfig: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2HashConfig\" },\n                    inheritance: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Inheritance\",\n                    },\n                    mfaConfig: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig\",\n                    },\n                    name: {\n                        description: 'Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"',\n                        readOnly: true,\n                        type: \"string\",\n                    },\n                    testPhoneNumbers: {\n                        additionalProperties: { type: \"string\" },\n                        description: \"A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).\",\n                        type: \"object\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitAdminV2Trigger: {\n                description: \"Synchronous Cloud Function with HTTP Trigger\",\n                properties: {\n                    functionUri: { description: \"HTTP URI trigger for the Cloud Function.\", type: \"string\" },\n                    updateTime: {\n                        description: \"When the trigger was changed.\",\n                        format: \"google-datetime\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2AutoRetrievalInfo: {\n                description: \"The information required to auto-retrieve an SMS.\",\n                properties: {\n                    appSignatureHash: {\n                        description: \"The Android app's signature hash for Google Play Service's SMS Retriever API.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest: {\n                description: \"Finishes enrolling a second factor for the user.\",\n                properties: {\n                    displayName: {\n                        description: \"Display name which is entered by users to distinguish between different second factors with same type or different type.\",\n                        type: \"string\",\n                    },\n                    idToken: { description: \"Required. ID token.\", type: \"string\" },\n                    phoneVerificationInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse: {\n                description: \"FinalizeMfaEnrollment response.\",\n                properties: {\n                    idToken: { description: \"ID token updated to reflect MFA enrollment.\", type: \"string\" },\n                    phoneAuthInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo\",\n                    },\n                    refreshToken: {\n                        description: \"Refresh token updated to reflect MFA enrollment.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo: {\n                description: \"Phone Verification info for a FinalizeMfa request.\",\n                properties: {\n                    androidVerificationProof: {\n                        description: 'Android only. Uses for \"instant\" phone number verification though GmsCore.',\n                        type: \"string\",\n                    },\n                    code: { description: \"User-entered verification code.\", type: \"string\" },\n                    phoneNumber: {\n                        description: \"Required if Android verification proof is presented.\",\n                        type: \"string\",\n                    },\n                    sessionInfo: {\n                        description: \"An opaque string that represents the enrollment session.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo: {\n                description: \"Phone Verification info for a FinalizeMfa response.\",\n                properties: {\n                    androidVerificationProof: {\n                        description: \"Android only. Long-lived replacement for valid code tied to android device.\",\n                        type: \"string\",\n                    },\n                    androidVerificationProofExpireTime: {\n                        description: \"Android only. Expiration time of verification proof in seconds.\",\n                        format: \"google-datetime\",\n                        type: \"string\",\n                    },\n                    phoneNumber: { description: \"For Android verification proof.\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest: {\n                description: \"Finalizes sign-in by verifying MFA challenge.\",\n                properties: {\n                    mfaPendingCredential: {\n                        description: \"Required. Pending credential from first factor sign-in.\",\n                        type: \"string\",\n                    },\n                    phoneVerificationInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse: {\n                description: \"FinalizeMfaSignIn response.\",\n                properties: {\n                    idToken: { description: \"ID token for the authenticated user.\", type: \"string\" },\n                    phoneAuthInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo\",\n                    },\n                    refreshToken: {\n                        description: \"Refresh token for the authenticated user.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest: {\n                description: \"Sends MFA enrollment verification SMS for a user.\",\n                properties: {\n                    idToken: { description: \"Required. User's ID token.\", type: \"string\" },\n                    phoneEnrollmentInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse: {\n                description: \"StartMfaEnrollment response.\",\n                properties: {\n                    phoneSessionInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo: {\n                description: \"App Verification info for a StartMfa request.\",\n                properties: {\n                    autoRetrievalInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2AutoRetrievalInfo\",\n                    },\n                    iosReceipt: {\n                        description: \"iOS only. Receipt of successful app token validation with APNS.\",\n                        type: \"string\",\n                    },\n                    iosSecret: {\n                        description: \"iOS only. Secret delivered to iOS app via APNS.\",\n                        type: \"string\",\n                    },\n                    phoneNumber: {\n                        description: \"Required for enrollment. Phone number to be enrolled as MFA.\",\n                        type: \"string\",\n                    },\n                    recaptchaToken: { description: \"Web only. Recaptcha solution.\", type: \"string\" },\n                    safetyNetToken: {\n                        description: \"Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo: {\n                description: \"Phone Verification info for a StartMfa response.\",\n                properties: {\n                    sessionInfo: {\n                        description: \"An opaque string that represents the enrollment session.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2StartMfaSignInRequest: {\n                description: \"Starts multi-factor sign-in by sending the multi-factor auth challenge.\",\n                properties: {\n                    mfaEnrollmentId: {\n                        description: \"Required. MFA enrollment id from the user's list of current MFA enrollments.\",\n                        type: \"string\",\n                    },\n                    mfaPendingCredential: {\n                        description: \"Required. Pending credential from first factor sign-in.\",\n                        type: \"string\",\n                    },\n                    phoneSignInInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2StartMfaSignInResponse: {\n                description: \"StartMfaSignIn response.\",\n                properties: {\n                    phoneResponseInfo: {\n                        $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2WithdrawMfaRequest: {\n                description: \"Withdraws MFA.\",\n                properties: {\n                    idToken: { description: \"Required. User's ID token.\", type: \"string\" },\n                    mfaEnrollmentId: {\n                        description: \"Required. MFA enrollment id from a current MFA enrollment.\",\n                        type: \"string\",\n                    },\n                    tenantId: {\n                        description: \"The ID of the Identity Platform tenant that the user unenrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleCloudIdentitytoolkitV2WithdrawMfaResponse: {\n                description: \"Withdraws MultiFactorAuth response.\",\n                properties: {\n                    idToken: {\n                        description: \"ID token updated to reflect removal of the second factor.\",\n                        type: \"string\",\n                    },\n                    refreshToken: {\n                        description: \"Refresh token updated to reflect removal of the second factor.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1AuditConfig: {\n                description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.',\n                properties: {\n                    auditLogConfigs: {\n                        description: \"The configuration for logging of each type of permission.\",\n                        items: { $ref: \"#/components/schemas/GoogleIamV1AuditLogConfig\" },\n                        type: \"array\",\n                    },\n                    service: {\n                        description: \"Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1AuditLogConfig: {\n                description: 'Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables \\'DATA_READ\\' and \\'DATA_WRITE\\' logging, while exempting jose@example.com from DATA_READ logging.',\n                properties: {\n                    exemptedMembers: {\n                        description: \"Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    logType: {\n                        description: \"The log type that this config enables.\",\n                        enum: [\"LOG_TYPE_UNSPECIFIED\", \"ADMIN_READ\", \"DATA_WRITE\", \"DATA_READ\"],\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1Binding: {\n                description: \"Associates `members`, or principals, with a `role`.\",\n                properties: {\n                    condition: { $ref: \"#/components/schemas/GoogleTypeExpr\" },\n                    members: {\n                        description: \"Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. \",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                    role: {\n                        description: \"Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1GetIamPolicyRequest: {\n                description: \"Request message for `GetIamPolicy` method.\",\n                properties: { options: { $ref: \"#/components/schemas/GoogleIamV1GetPolicyOptions\" } },\n                type: \"object\",\n            },\n            GoogleIamV1GetPolicyOptions: {\n                description: \"Encapsulates settings provided to GetIamPolicy.\",\n                properties: {\n                    requestedPolicyVersion: {\n                        description: \"Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1Policy: {\n                description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp(\\'2020-10-01T00:00:00.000Z\\')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(\\'2020-10-01T00:00:00.000Z\\') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).',\n                properties: {\n                    auditConfigs: {\n                        description: \"Specifies cloud audit logging configuration for this policy.\",\n                        items: { $ref: \"#/components/schemas/GoogleIamV1AuditConfig\" },\n                        type: \"array\",\n                    },\n                    bindings: {\n                        description: \"Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.\",\n                        items: { $ref: \"#/components/schemas/GoogleIamV1Binding\" },\n                        type: \"array\",\n                    },\n                    etag: {\n                        description: \"`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.\",\n                        format: \"byte\",\n                        type: \"string\",\n                    },\n                    version: {\n                        description: \"Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\",\n                        format: \"int32\",\n                        type: \"integer\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1SetIamPolicyRequest: {\n                description: \"Request message for `SetIamPolicy` method.\",\n                properties: {\n                    policy: { $ref: \"#/components/schemas/GoogleIamV1Policy\" },\n                    updateMask: {\n                        description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`',\n                        format: \"google-fieldmask\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1TestIamPermissionsRequest: {\n                description: \"Request message for `TestIamPermissions` method.\",\n                properties: {\n                    permissions: {\n                        description: \"The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleIamV1TestIamPermissionsResponse: {\n                description: \"Response message for `TestIamPermissions` method.\",\n                properties: {\n                    permissions: {\n                        description: \"A subset of `TestPermissionsRequest.permissions` that the caller is allowed.\",\n                        items: { type: \"string\" },\n                        type: \"array\",\n                    },\n                },\n                type: \"object\",\n            },\n            GoogleProtobufEmpty: {\n                description: \"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.\",\n                properties: {},\n                type: \"object\",\n            },\n            GoogleTypeExpr: {\n                description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != \\'private\\' && document.type != \\'internal\\'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"\\'New message received at \\' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.',\n                properties: {\n                    description: {\n                        description: \"Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.\",\n                        type: \"string\",\n                    },\n                    expression: {\n                        description: \"Textual representation of an expression in Common Expression Language syntax.\",\n                        type: \"string\",\n                    },\n                    location: {\n                        description: \"Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.\",\n                        type: \"string\",\n                    },\n                    title: {\n                        description: \"Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GrantTokenRequest: {\n                properties: {\n                    code: {\n                        description: \"ID token to exchange for an access token and a refresh token. This field is called `code` to conform with the OAuth 2.0 specification. This field is deprecated and is ignored.\",\n                        type: \"string\",\n                    },\n                    grantType: {\n                        description: \"The grant_types that are supported: - `refresh_token` to exchange a Identity Platform refresh_token for Identity Platform id_token/access_token and possibly a new Identity Platform refresh_token.\",\n                        type: \"string\",\n                    },\n                    refreshToken: {\n                        description: \"Identity Platform refresh_token. This field is ignored if `grantType` isn't `refresh_token`.\",\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            GrantTokenResponse: {\n                properties: {\n                    access_token: { description: \"DEPRECATED The granted access token.\", type: \"string\" },\n                    expires_in: {\n                        description: \"Expiration time of `access_token` in seconds.\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    id_token: { description: \"The granted ID token\", type: \"string\" },\n                    project_id: {\n                        description: \"The client's project number\",\n                        format: \"int64\",\n                        type: \"string\",\n                    },\n                    refresh_token: {\n                        description: \"The granted refresh token; might be the same as `refreshToken` in the request.\",\n                        type: \"string\",\n                    },\n                    token_type: {\n                        description: \"The type of `access_token`. Included to conform with the OAuth 2.0 specification; always `Bearer`.\",\n                        type: \"string\",\n                    },\n                    user_id: { description: \"The local user ID\", type: \"string\" },\n                },\n                type: \"object\",\n            },\n            EmulatorV1ProjectsConfig: {\n                type: \"object\",\n                description: \"Emulator-specific configuration.\",\n                properties: {\n                    signIn: { properties: { allowDuplicateEmails: { type: \"boolean\" } }, type: \"object\" },\n                    usageMode: { enum: [\"USAGE_MODE_UNSPECIFIED\", \"DEFAULT\", \"PASSTHROUGH\"], type: \"string\" },\n                },\n            },\n            EmulatorV1ProjectsOobCodes: {\n                type: \"object\",\n                description: \"Details of all pending confirmation codes.\",\n                properties: {\n                    oobCodes: {\n                        type: \"array\",\n                        items: {\n                            type: \"object\",\n                            properties: {\n                                email: { type: \"string\" },\n                                oobCode: { type: \"string\" },\n                                oobLink: { type: \"string\" },\n                                requestType: { type: \"string\" },\n                            },\n                        },\n                    },\n                },\n            },\n            EmulatorV1ProjectsVerificationCodes: {\n                type: \"object\",\n                description: \"Details of all pending verification codes.\",\n                properties: {\n                    verificationCodes: {\n                        type: \"array\",\n                        items: {\n                            type: \"object\",\n                            properties: {\n                                code: { type: \"string\" },\n                                phoneNumber: { type: \"string\" },\n                                sessionInfo: { type: \"string\" },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        parameters: {\n            access_token: {\n                name: \"access_token\",\n                in: \"query\",\n                description: \"OAuth access token.\",\n                schema: { type: \"string\" },\n            },\n            alt: {\n                name: \"alt\",\n                in: \"query\",\n                description: \"Data format for response.\",\n                schema: { type: \"string\", enum: [\"json\", \"media\", \"proto\"], default: \"json\" },\n            },\n            callback: { name: \"callback\", in: \"query\", description: \"JSONP\", schema: { type: \"string\" } },\n            fields: {\n                name: \"fields\",\n                in: \"query\",\n                description: \"Selector specifying which fields to include in a partial response.\",\n                schema: { type: \"string\" },\n            },\n            oauth_token: {\n                name: \"oauth_token\",\n                in: \"query\",\n                description: \"OAuth 2.0 token for the current user.\",\n                schema: { type: \"string\" },\n            },\n            prettyPrint: {\n                name: \"prettyPrint\",\n                in: \"query\",\n                description: \"Returns response with indentations and line breaks.\",\n                schema: { type: \"boolean\", default: true },\n            },\n            quotaUser: {\n                name: \"quotaUser\",\n                in: \"query\",\n                description: \"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\",\n                schema: { type: \"string\" },\n            },\n            uploadType: {\n                name: \"uploadType\",\n                in: \"query\",\n                description: 'Legacy upload protocol for media (e.g. \"media\", \"multipart\").',\n                schema: { type: \"string\" },\n            },\n            upload_protocol: {\n                name: \"upload_protocol\",\n                in: \"query\",\n                description: 'Upload protocol for media (e.g. \"raw\", \"multipart\").',\n                schema: { type: \"string\" },\n            },\n        },\n        requestBodies: {\n            GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1SignUpRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SignUpRequest\" },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1DeleteAccountRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1DeleteAccountRequest\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1UploadAccountRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1UploadAccountRequest\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1GetAccountInfoRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetAccountInfoRequest\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1GetOobCodeRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1GetOobCodeRequest\" },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1SetAccountInfoRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1SetAccountInfoRequest\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitV1QueryUserInfoRequest: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitV1QueryUserInfoRequest\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitAdminV2Tenant: {\n                content: {\n                    \"application/json\": {\n                        schema: { $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2Tenant\" },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig\",\n                        },\n                    },\n                },\n            },\n            GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig: {\n                content: {\n                    \"application/json\": {\n                        schema: {\n                            $ref: \"#/components/schemas/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig\",\n                        },\n                    },\n                },\n            },\n        },\n        securitySchemes: {\n            Oauth2: {\n                type: \"oauth2\",\n                description: \"Oauth 2.0 implicit authentication\",\n                flows: {\n                    implicit: {\n                        authorizationUrl: \"https://accounts.google.com/o/oauth2/auth\",\n                        scopes: {\n                            \"https://www.googleapis.com/auth/cloud-platform\": \"See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\",\n                            \"https://www.googleapis.com/auth/firebase\": \"View and administer all your Firebase data and settings\",\n                        },\n                    },\n                    authorizationCode: {\n                        authorizationUrl: \"https://accounts.google.com/o/oauth2/auth\",\n                        tokenUrl: \"https://accounts.google.com/o/oauth2/token\",\n                        scopes: {\n                            \"https://www.googleapis.com/auth/cloud-platform\": \"See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\",\n                            \"https://www.googleapis.com/auth/firebase\": \"View and administer all your Firebase data and settings\",\n                        },\n                    },\n                },\n            },\n            apiKey: {\n                type: \"apiKey\",\n                name: \"key\",\n                in: \"query\",\n                description: \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\",\n            },\n        },\n    },\n};\n"]},"metadata":{},"sourceType":"script"}