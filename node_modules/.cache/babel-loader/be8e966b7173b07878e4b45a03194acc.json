{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SourceTokenScraper = void 0;\n\nconst logger_1 = require(\"../../../logger\");\n\nclass SourceTokenScraper {\n  constructor() {\n    this.firstCall = true;\n    this.promise = new Promise(resolve => this.resolve = resolve);\n  }\n\n  tokenPromise() {\n    if (this.firstCall) {\n      this.firstCall = false;\n      return Promise.resolve(undefined);\n    }\n\n    return this.promise;\n  }\n\n  get poller() {\n    return op => {\n      var _a, _b, _c, _d, _e;\n\n      if (((_a = op.metadata) === null || _a === void 0 ? void 0 : _a.sourceToken) || op.done) {\n        const [,,, region] = ((_c = (_b = op.metadata) === null || _b === void 0 ? void 0 : _b.target) === null || _c === void 0 ? void 0 : _c.split(\"/\")) || [];\n        logger_1.logger.debug(`Got source token ${(_d = op.metadata) === null || _d === void 0 ? void 0 : _d.sourceToken} for region ${region}`);\n        this.resolve((_e = op.metadata) === null || _e === void 0 ? void 0 : _e.sourceToken);\n      }\n    };\n  }\n\n}\n\nexports.SourceTokenScraper = SourceTokenScraper;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/deploy/functions/release/sourceTokenScraper.js"],"names":["Object","defineProperty","exports","value","SourceTokenScraper","logger_1","require","constructor","firstCall","promise","Promise","resolve","tokenPromise","undefined","poller","op","_a","_b","_c","_d","_e","metadata","sourceToken","done","region","target","split","logger","debug"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AACA,MAAMF,kBAAN,CAAyB;AACrBG,EAAAA,WAAW,GAAG;AACV,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,OAAL,GAAe,IAAIC,OAAJ,CAAaC,OAAD,IAAc,KAAKA,OAAL,GAAeA,OAAzC,CAAf;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKJ,SAAT,EAAoB;AAChB,WAAKA,SAAL,GAAiB,KAAjB;AACA,aAAOE,OAAO,CAACC,OAAR,CAAgBE,SAAhB,CAAP;AACH;;AACD,WAAO,KAAKJ,OAAZ;AACH;;AACS,MAANK,MAAM,GAAG;AACT,WAAQC,EAAD,IAAQ;AACX,UAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB;;AACA,UAAI,CAAC,CAACJ,EAAE,GAAGD,EAAE,CAACM,QAAT,MAAuB,IAAvB,IAA+BL,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACM,WAA5D,KAA4EP,EAAE,CAACQ,IAAnF,EAAyF;AACrF,cAAM,KAAOC,MAAP,IAAiB,CAAC,CAACN,EAAE,GAAG,CAACD,EAAE,GAAGF,EAAE,CAACM,QAAT,MAAuB,IAAvB,IAA+BJ,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACQ,MAAjE,MAA6E,IAA7E,IAAqFP,EAAE,KAAK,KAAK,CAAjG,GAAqG,KAAK,CAA1G,GAA8GA,EAAE,CAACQ,KAAH,CAAS,GAAT,CAA/G,KAAiI,EAAxJ;AACArB,QAAAA,QAAQ,CAACsB,MAAT,CAAgBC,KAAhB,CAAuB,oBAAmB,CAACT,EAAE,GAAGJ,EAAE,CAACM,QAAT,MAAuB,IAAvB,IAA+BF,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACG,WAAY,eAAcE,MAAO,EAAtI;AACA,aAAKb,OAAL,CAAa,CAACS,EAAE,GAAGL,EAAE,CAACM,QAAT,MAAuB,IAAvB,IAA+BD,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACE,WAAxE;AACH;AACJ,KAPD;AAQH;;AArBoB;;AAuBzBpB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceTokenScraper = void 0;\nconst logger_1 = require(\"../../../logger\");\nclass SourceTokenScraper {\n    constructor() {\n        this.firstCall = true;\n        this.promise = new Promise((resolve) => (this.resolve = resolve));\n    }\n    tokenPromise() {\n        if (this.firstCall) {\n            this.firstCall = false;\n            return Promise.resolve(undefined);\n        }\n        return this.promise;\n    }\n    get poller() {\n        return (op) => {\n            var _a, _b, _c, _d, _e;\n            if (((_a = op.metadata) === null || _a === void 0 ? void 0 : _a.sourceToken) || op.done) {\n                const [, , , region] = ((_c = (_b = op.metadata) === null || _b === void 0 ? void 0 : _b.target) === null || _c === void 0 ? void 0 : _c.split(\"/\")) || [];\n                logger_1.logger.debug(`Got source token ${(_d = op.metadata) === null || _d === void 0 ? void 0 : _d.sourceToken} for region ${region}`);\n                this.resolve((_e = op.metadata) === null || _e === void 0 ? void 0 : _e.sourceToken);\n            }\n        };\n    }\n}\nexports.SourceTokenScraper = SourceTokenScraper;\n"]},"metadata":{},"sourceType":"script"}