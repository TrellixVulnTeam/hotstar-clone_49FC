{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkForV2Upgrade = exports.checkForIllegalUpdate = exports.upgradedScheduleFromV1ToV2 = exports.changedV2PubSubTopic = exports.changedTriggerRegion = exports.upgradedToGCFv2WithoutSettingConcurrency = exports.createDeploymentPlan = exports.calculateUpdate = exports.calculateRegionalChanges = void 0;\n\nconst functionsDeployHelper_1 = require(\"../functionsDeployHelper\");\n\nconst functionsDeployHelper_2 = require(\"../functionsDeployHelper\");\n\nconst deploymentTool_1 = require(\"../../../deploymentTool\");\n\nconst error_1 = require(\"../../../error\");\n\nconst utils = require(\"../../../utils\");\n\nconst backend = require(\"../backend\");\n\nconst gcfv2 = require(\"../../../gcp/cloudfunctionsv2\");\n\nfunction calculateRegionalChanges(want, have, options) {\n  const endpointsToCreate = Object.keys(want).filter(id => !have[id]).map(id => want[id]);\n  const endpointsToDelete = Object.keys(have).filter(id => !want[id]).filter(id => options.deleteAll || deploymentTool_1.isFirebaseManaged(have[id].labels || {})).map(id => have[id]);\n  const endpointsToUpdate = Object.keys(want).filter(id => have[id]).map(id => calculateUpdate(want[id], have[id]));\n  return {\n    endpointsToCreate,\n    endpointsToUpdate,\n    endpointsToDelete\n  };\n}\n\nexports.calculateRegionalChanges = calculateRegionalChanges;\n\nfunction calculateUpdate(want, have) {\n  checkForIllegalUpdate(want, have);\n  const update = {\n    endpoint: want\n  };\n  const needsDelete = changedTriggerRegion(want, have) || changedV2PubSubTopic(want, have) || upgradedScheduleFromV1ToV2(want, have);\n\n  if (needsDelete) {\n    update.deleteAndRecreate = have;\n  }\n\n  return update;\n}\n\nexports.calculateUpdate = calculateUpdate;\n\nfunction createDeploymentPlan(want, have, options = {}) {\n  const deployment = {};\n  want = backend.matchingBackend(want, endpoint => {\n    return functionsDeployHelper_1.functionMatchesAnyGroup(endpoint, options.filters || []);\n  });\n  have = backend.matchingBackend(have, endpoint => {\n    return functionsDeployHelper_1.functionMatchesAnyGroup(endpoint, options.filters || []);\n  });\n  const regions = new Set([...Object.keys(want.endpoints), ...Object.keys(have.endpoints)]);\n\n  for (const region of regions) {\n    deployment[region] = calculateRegionalChanges(want.endpoints[region] || {}, have.endpoints[region] || {}, options);\n  }\n\n  if (upgradedToGCFv2WithoutSettingConcurrency(want, have)) {\n    utils.logLabeledBullet(\"functions\", \"You are updating one or more functions to Google Cloud Functions v2, \" + \"which introduces support for concurrent execution. New functions \" + \"default to 80 concurrent executions, but existing functions keep the \" + \"old default of 1. You can change this with the 'concurrency' option.\");\n  }\n\n  return deployment;\n}\n\nexports.createDeploymentPlan = createDeploymentPlan;\n\nfunction upgradedToGCFv2WithoutSettingConcurrency(want, have) {\n  return backend.someEndpoint(want, endpoint => {\n    var _a, _b;\n\n    if (((_b = (_a = have.endpoints[endpoint.region]) === null || _a === void 0 ? void 0 : _a[endpoint.id]) === null || _b === void 0 ? void 0 : _b.platform) !== \"gcfv1\") {\n      return false;\n    }\n\n    if (endpoint.platform !== \"gcfv2\") {\n      return false;\n    }\n\n    if (endpoint.concurrency) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nexports.upgradedToGCFv2WithoutSettingConcurrency = upgradedToGCFv2WithoutSettingConcurrency;\n\nfunction changedTriggerRegion(want, have) {\n  if (want.platform != \"gcfv2\") {\n    return false;\n  }\n\n  if (have.platform != \"gcfv2\") {\n    return false;\n  }\n\n  if (!backend.isEventTriggered(want)) {\n    return false;\n  }\n\n  if (!backend.isEventTriggered(have)) {\n    return false;\n  }\n\n  return want.eventTrigger.region != have.eventTrigger.region;\n}\n\nexports.changedTriggerRegion = changedTriggerRegion;\n\nfunction changedV2PubSubTopic(want, have) {\n  if (want.platform !== \"gcfv2\") {\n    return false;\n  }\n\n  if (have.platform !== \"gcfv2\") {\n    return false;\n  }\n\n  if (!backend.isEventTriggered(want)) {\n    return false;\n  }\n\n  if (!backend.isEventTriggered(have)) {\n    return false;\n  }\n\n  if (want.eventTrigger.eventType != gcfv2.PUBSUB_PUBLISH_EVENT) {\n    return false;\n  }\n\n  if (have.eventTrigger.eventType !== gcfv2.PUBSUB_PUBLISH_EVENT) {\n    return false;\n  }\n\n  return have.eventTrigger.eventFilters[\"resource\"] != want.eventTrigger.eventFilters[\"resource\"];\n}\n\nexports.changedV2PubSubTopic = changedV2PubSubTopic;\n\nfunction upgradedScheduleFromV1ToV2(want, have) {\n  if (have.platform !== \"gcfv1\") {\n    return false;\n  }\n\n  if (want.platform !== \"gcfv2\") {\n    return false;\n  }\n\n  if (!backend.isScheduleTriggered(have)) {\n    return false;\n  }\n\n  if (!backend.isScheduleTriggered(want)) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.upgradedScheduleFromV1ToV2 = upgradedScheduleFromV1ToV2;\n\nfunction checkForIllegalUpdate(want, have) {\n  const triggerType = e => {\n    if (backend.isHttpsTriggered(e)) {\n      return \"an HTTPS\";\n    } else if (backend.isEventTriggered(e)) {\n      return \"a background triggered\";\n    } else if (backend.isScheduleTriggered(e)) {\n      return \"a scheduled\";\n    }\n\n    throw Error(\"Functions release planner is not able to handle an unknown trigger type\");\n  };\n\n  const wantType = triggerType(want);\n  const haveType = triggerType(have);\n\n  if (wantType != haveType) {\n    throw new error_1.FirebaseError(`[${functionsDeployHelper_2.getFunctionLabel(want)}] Changing from ${haveType} function to ${wantType} function is not allowed. Please delete your function and create a new one instead.`);\n  }\n\n  if (want.platform == \"gcfv1\" && have.platform == \"gcfv2\") {\n    throw new error_1.FirebaseError(`[${functionsDeployHelper_2.getFunctionLabel(want)}] Functions cannot be downgraded from GCFv2 to GCFv1`);\n  }\n\n  exports.checkForV2Upgrade(want, have);\n}\n\nexports.checkForIllegalUpdate = checkForIllegalUpdate;\n\nfunction checkForV2Upgrade(want, have) {\n  if (want.platform == \"gcfv2\" && have.platform == \"gcfv1\") {\n    throw new error_1.FirebaseError(`[${functionsDeployHelper_2.getFunctionLabel(have)}] Upgrading from GCFv1 to GCFv2 is not yet supported. Please delete your old function or wait for this feature to be ready.`);\n  }\n}\n\nexports.checkForV2Upgrade = checkForV2Upgrade;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/deploy/functions/release/planner.js"],"names":["Object","defineProperty","exports","value","checkForV2Upgrade","checkForIllegalUpdate","upgradedScheduleFromV1ToV2","changedV2PubSubTopic","changedTriggerRegion","upgradedToGCFv2WithoutSettingConcurrency","createDeploymentPlan","calculateUpdate","calculateRegionalChanges","functionsDeployHelper_1","require","functionsDeployHelper_2","deploymentTool_1","error_1","utils","backend","gcfv2","want","have","options","endpointsToCreate","keys","filter","id","map","endpointsToDelete","deleteAll","isFirebaseManaged","labels","endpointsToUpdate","update","endpoint","needsDelete","deleteAndRecreate","deployment","matchingBackend","functionMatchesAnyGroup","filters","regions","Set","endpoints","region","logLabeledBullet","someEndpoint","_a","_b","platform","concurrency","isEventTriggered","eventTrigger","eventType","PUBSUB_PUBLISH_EVENT","eventFilters","isScheduleTriggered","triggerType","e","isHttpsTriggered","Error","wantType","haveType","FirebaseError","getFunctionLabel"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkForV2Upgrade = exports.checkForIllegalUpdate = exports.upgradedScheduleFromV1ToV2 = exports.changedV2PubSubTopic = exports.changedTriggerRegion = exports.upgradedToGCFv2WithoutSettingConcurrency = exports.createDeploymentPlan = exports.calculateUpdate = exports.calculateRegionalChanges = void 0;\nconst functionsDeployHelper_1 = require(\"../functionsDeployHelper\");\nconst functionsDeployHelper_2 = require(\"../functionsDeployHelper\");\nconst deploymentTool_1 = require(\"../../../deploymentTool\");\nconst error_1 = require(\"../../../error\");\nconst utils = require(\"../../../utils\");\nconst backend = require(\"../backend\");\nconst gcfv2 = require(\"../../../gcp/cloudfunctionsv2\");\nfunction calculateRegionalChanges(want, have, options) {\n    const endpointsToCreate = Object.keys(want)\n        .filter((id) => !have[id])\n        .map((id) => want[id]);\n    const endpointsToDelete = Object.keys(have)\n        .filter((id) => !want[id])\n        .filter((id) => options.deleteAll || deploymentTool_1.isFirebaseManaged(have[id].labels || {}))\n        .map((id) => have[id]);\n    const endpointsToUpdate = Object.keys(want)\n        .filter((id) => have[id])\n        .map((id) => calculateUpdate(want[id], have[id]));\n    return { endpointsToCreate, endpointsToUpdate, endpointsToDelete };\n}\nexports.calculateRegionalChanges = calculateRegionalChanges;\nfunction calculateUpdate(want, have) {\n    checkForIllegalUpdate(want, have);\n    const update = {\n        endpoint: want,\n    };\n    const needsDelete = changedTriggerRegion(want, have) ||\n        changedV2PubSubTopic(want, have) ||\n        upgradedScheduleFromV1ToV2(want, have);\n    if (needsDelete) {\n        update.deleteAndRecreate = have;\n    }\n    return update;\n}\nexports.calculateUpdate = calculateUpdate;\nfunction createDeploymentPlan(want, have, options = {}) {\n    const deployment = {};\n    want = backend.matchingBackend(want, (endpoint) => {\n        return functionsDeployHelper_1.functionMatchesAnyGroup(endpoint, options.filters || []);\n    });\n    have = backend.matchingBackend(have, (endpoint) => {\n        return functionsDeployHelper_1.functionMatchesAnyGroup(endpoint, options.filters || []);\n    });\n    const regions = new Set([...Object.keys(want.endpoints), ...Object.keys(have.endpoints)]);\n    for (const region of regions) {\n        deployment[region] = calculateRegionalChanges(want.endpoints[region] || {}, have.endpoints[region] || {}, options);\n    }\n    if (upgradedToGCFv2WithoutSettingConcurrency(want, have)) {\n        utils.logLabeledBullet(\"functions\", \"You are updating one or more functions to Google Cloud Functions v2, \" +\n            \"which introduces support for concurrent execution. New functions \" +\n            \"default to 80 concurrent executions, but existing functions keep the \" +\n            \"old default of 1. You can change this with the 'concurrency' option.\");\n    }\n    return deployment;\n}\nexports.createDeploymentPlan = createDeploymentPlan;\nfunction upgradedToGCFv2WithoutSettingConcurrency(want, have) {\n    return backend.someEndpoint(want, (endpoint) => {\n        var _a, _b;\n        if (((_b = (_a = have.endpoints[endpoint.region]) === null || _a === void 0 ? void 0 : _a[endpoint.id]) === null || _b === void 0 ? void 0 : _b.platform) !== \"gcfv1\") {\n            return false;\n        }\n        if (endpoint.platform !== \"gcfv2\") {\n            return false;\n        }\n        if (endpoint.concurrency) {\n            return false;\n        }\n        return true;\n    });\n}\nexports.upgradedToGCFv2WithoutSettingConcurrency = upgradedToGCFv2WithoutSettingConcurrency;\nfunction changedTriggerRegion(want, have) {\n    if (want.platform != \"gcfv2\") {\n        return false;\n    }\n    if (have.platform != \"gcfv2\") {\n        return false;\n    }\n    if (!backend.isEventTriggered(want)) {\n        return false;\n    }\n    if (!backend.isEventTriggered(have)) {\n        return false;\n    }\n    return want.eventTrigger.region != have.eventTrigger.region;\n}\nexports.changedTriggerRegion = changedTriggerRegion;\nfunction changedV2PubSubTopic(want, have) {\n    if (want.platform !== \"gcfv2\") {\n        return false;\n    }\n    if (have.platform !== \"gcfv2\") {\n        return false;\n    }\n    if (!backend.isEventTriggered(want)) {\n        return false;\n    }\n    if (!backend.isEventTriggered(have)) {\n        return false;\n    }\n    if (want.eventTrigger.eventType != gcfv2.PUBSUB_PUBLISH_EVENT) {\n        return false;\n    }\n    if (have.eventTrigger.eventType !== gcfv2.PUBSUB_PUBLISH_EVENT) {\n        return false;\n    }\n    return have.eventTrigger.eventFilters[\"resource\"] != want.eventTrigger.eventFilters[\"resource\"];\n}\nexports.changedV2PubSubTopic = changedV2PubSubTopic;\nfunction upgradedScheduleFromV1ToV2(want, have) {\n    if (have.platform !== \"gcfv1\") {\n        return false;\n    }\n    if (want.platform !== \"gcfv2\") {\n        return false;\n    }\n    if (!backend.isScheduleTriggered(have)) {\n        return false;\n    }\n    if (!backend.isScheduleTriggered(want)) {\n        return false;\n    }\n    return true;\n}\nexports.upgradedScheduleFromV1ToV2 = upgradedScheduleFromV1ToV2;\nfunction checkForIllegalUpdate(want, have) {\n    const triggerType = (e) => {\n        if (backend.isHttpsTriggered(e)) {\n            return \"an HTTPS\";\n        }\n        else if (backend.isEventTriggered(e)) {\n            return \"a background triggered\";\n        }\n        else if (backend.isScheduleTriggered(e)) {\n            return \"a scheduled\";\n        }\n        throw Error(\"Functions release planner is not able to handle an unknown trigger type\");\n    };\n    const wantType = triggerType(want);\n    const haveType = triggerType(have);\n    if (wantType != haveType) {\n        throw new error_1.FirebaseError(`[${functionsDeployHelper_2.getFunctionLabel(want)}] Changing from ${haveType} function to ${wantType} function is not allowed. Please delete your function and create a new one instead.`);\n    }\n    if (want.platform == \"gcfv1\" && have.platform == \"gcfv2\") {\n        throw new error_1.FirebaseError(`[${functionsDeployHelper_2.getFunctionLabel(want)}] Functions cannot be downgraded from GCFv2 to GCFv1`);\n    }\n    exports.checkForV2Upgrade(want, have);\n}\nexports.checkForIllegalUpdate = checkForIllegalUpdate;\nfunction checkForV2Upgrade(want, have) {\n    if (want.platform == \"gcfv2\" && have.platform == \"gcfv1\") {\n        throw new error_1.FirebaseError(`[${functionsDeployHelper_2.getFunctionLabel(have)}] Upgrading from GCFv1 to GCFv2 is not yet supported. Please delete your old function or wait for this feature to be ready.`);\n    }\n}\nexports.checkForV2Upgrade = checkForV2Upgrade;\n"]},"metadata":{},"sourceType":"script"}