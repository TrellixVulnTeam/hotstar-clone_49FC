{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploy = void 0;\n\nconst tmp_1 = require(\"tmp\");\n\nconst clc = require(\"cli-color\");\n\nconst fs = require(\"fs\");\n\nconst checkIam_1 = require(\"./checkIam\");\n\nconst api_1 = require(\"../../api\");\n\nconst utils_1 = require(\"../../utils\");\n\nconst gcs = require(\"../../gcp/storage\");\n\nconst gcf = require(\"../../gcp/cloudfunctions\");\n\nconst gcfv2 = require(\"../../gcp/cloudfunctionsv2\");\n\nconst utils = require(\"../../utils\");\n\nconst backend = require(\"./backend\");\n\nconst GCP_REGION = api_1.functionsUploadRegion;\ntmp_1.setGracefulCleanup();\n\nasync function uploadSourceV1(context) {\n  const uploadUrl = await gcf.generateUploadUrl(context.projectId, GCP_REGION);\n  context.uploadUrl = uploadUrl;\n  const uploadOpts = {\n    file: context.functionsSourceV1,\n    stream: fs.createReadStream(context.functionsSourceV1)\n  };\n  await gcs.upload(uploadOpts, uploadUrl, {\n    \"x-goog-content-length-range\": \"0,104857600\"\n  });\n}\n\nasync function uploadSourceV2(context, region) {\n  const res = await gcfv2.generateUploadUrl(context.projectId, region);\n  const uploadOpts = {\n    file: context.functionsSourceV2,\n    stream: fs.createReadStream(context.functionsSourceV2)\n  };\n  await gcs.upload(uploadOpts, res.uploadUrl);\n  context.storage = Object.assign(Object.assign({}, context.storage), {\n    [region]: res.storageSource\n  });\n}\n\nasync function deploy(context, options, payload) {\n  if (!options.config.src.functions) {\n    return;\n  }\n\n  if (!context.functionsSourceV1 && !context.functionsSourceV2) {\n    return;\n  }\n\n  await checkIam_1.checkHttpIam(context, options, payload);\n\n  try {\n    const want = payload.functions.backend;\n    const uploads = [];\n\n    if (backend.allEndpoints(want).some(endpoint => endpoint.platform === \"gcfv1\")) {\n      uploads.push(uploadSourceV1(context));\n    }\n\n    for (const region of Object.keys(want.endpoints)) {\n      if (backend.regionalEndpoints(want, region).some(e => e.platform === \"gcfv2\")) {\n        uploads.push(uploadSourceV2(context, region));\n      }\n    }\n\n    await Promise.all(uploads);\n    utils.assertDefined(options.config.src.functions.source, \"Error: 'functions.source' is not defined\");\n\n    if (uploads.length) {\n      utils_1.logSuccess(clc.green.bold(\"functions:\") + \" \" + clc.bold(options.config.src.functions.source) + \" folder uploaded successfully\");\n    }\n  } catch (err) {\n    utils_1.logWarning(clc.yellow(\"functions:\") + \" Upload Error: \" + err.message);\n    throw err;\n  }\n}\n\nexports.deploy = deploy;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/deploy/functions/deploy.js"],"names":["Object","defineProperty","exports","value","deploy","tmp_1","require","clc","fs","checkIam_1","api_1","utils_1","gcs","gcf","gcfv2","utils","backend","GCP_REGION","functionsUploadRegion","setGracefulCleanup","uploadSourceV1","context","uploadUrl","generateUploadUrl","projectId","uploadOpts","file","functionsSourceV1","stream","createReadStream","upload","uploadSourceV2","region","res","functionsSourceV2","storage","assign","storageSource","options","payload","config","src","functions","checkHttpIam","want","uploads","allEndpoints","some","endpoint","platform","push","keys","endpoints","regionalEndpoints","e","Promise","all","assertDefined","source","length","logSuccess","green","bold","err","logWarning","yellow","message"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deploy = void 0;\nconst tmp_1 = require(\"tmp\");\nconst clc = require(\"cli-color\");\nconst fs = require(\"fs\");\nconst checkIam_1 = require(\"./checkIam\");\nconst api_1 = require(\"../../api\");\nconst utils_1 = require(\"../../utils\");\nconst gcs = require(\"../../gcp/storage\");\nconst gcf = require(\"../../gcp/cloudfunctions\");\nconst gcfv2 = require(\"../../gcp/cloudfunctionsv2\");\nconst utils = require(\"../../utils\");\nconst backend = require(\"./backend\");\nconst GCP_REGION = api_1.functionsUploadRegion;\ntmp_1.setGracefulCleanup();\nasync function uploadSourceV1(context) {\n    const uploadUrl = await gcf.generateUploadUrl(context.projectId, GCP_REGION);\n    context.uploadUrl = uploadUrl;\n    const uploadOpts = {\n        file: context.functionsSourceV1,\n        stream: fs.createReadStream(context.functionsSourceV1),\n    };\n    await gcs.upload(uploadOpts, uploadUrl, {\n        \"x-goog-content-length-range\": \"0,104857600\",\n    });\n}\nasync function uploadSourceV2(context, region) {\n    const res = await gcfv2.generateUploadUrl(context.projectId, region);\n    const uploadOpts = {\n        file: context.functionsSourceV2,\n        stream: fs.createReadStream(context.functionsSourceV2),\n    };\n    await gcs.upload(uploadOpts, res.uploadUrl);\n    context.storage = Object.assign(Object.assign({}, context.storage), { [region]: res.storageSource });\n}\nasync function deploy(context, options, payload) {\n    if (!options.config.src.functions) {\n        return;\n    }\n    if (!context.functionsSourceV1 && !context.functionsSourceV2) {\n        return;\n    }\n    await checkIam_1.checkHttpIam(context, options, payload);\n    try {\n        const want = payload.functions.backend;\n        const uploads = [];\n        if (backend.allEndpoints(want).some((endpoint) => endpoint.platform === \"gcfv1\")) {\n            uploads.push(uploadSourceV1(context));\n        }\n        for (const region of Object.keys(want.endpoints)) {\n            if (backend.regionalEndpoints(want, region).some((e) => e.platform === \"gcfv2\")) {\n                uploads.push(uploadSourceV2(context, region));\n            }\n        }\n        await Promise.all(uploads);\n        utils.assertDefined(options.config.src.functions.source, \"Error: 'functions.source' is not defined\");\n        if (uploads.length) {\n            utils_1.logSuccess(clc.green.bold(\"functions:\") +\n                \" \" +\n                clc.bold(options.config.src.functions.source) +\n                \" folder uploaded successfully\");\n        }\n    }\n    catch (err) {\n        utils_1.logWarning(clc.yellow(\"functions:\") + \" Upload Error: \" + err.message);\n        throw err;\n    }\n}\nexports.deploy = deploy;\n"]},"metadata":{},"sourceType":"script"}