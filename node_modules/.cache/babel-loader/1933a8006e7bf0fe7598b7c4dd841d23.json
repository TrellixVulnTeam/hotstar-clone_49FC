{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateDotenvFilename = exports.toDotenvFormat = exports.hydrateEnvs = exports.configToEnv = exports.convertKey = exports.hydrateConfigs = exports.getProjectInfos = void 0;\n\nconst clc = require(\"cli-color\");\n\nconst env = require(\"./env\");\n\nconst functionsConfig = require(\"../functionsConfig\");\n\nconst error_1 = require(\"../error\");\n\nconst logger_1 = require(\"../logger\");\n\nconst projectUtils_1 = require(\"../projectUtils\");\n\nconst rc_1 = require(\"../rc\");\n\nconst utils_1 = require(\"../utils\");\n\nconst functional_1 = require(\"../functional\");\n\nfunction getProjectInfos(options) {\n  const result = {};\n  const rc = rc_1.loadRC(options);\n\n  if (rc.projects) {\n    for (const [alias, projectId] of Object.entries(rc.projects)) {\n      if (Object.keys(result).includes(projectId)) {\n        utils_1.logWarning(`Multiple aliases found for ${clc.bold(projectId)}. ` + `Preferring alias (${clc.bold(result[projectId])}) over (${clc.bold(alias)}).`);\n        continue;\n      }\n\n      result[projectId] = alias;\n    }\n  }\n\n  const projectId = projectUtils_1.getProjectId(options);\n\n  if (projectId && !Object.keys(result).includes(projectId)) {\n    result[projectId] = projectId;\n  }\n\n  return Object.entries(result).map(([k, v]) => {\n    const result = {\n      projectId: k\n    };\n\n    if (k !== v) {\n      result.alias = v;\n    }\n\n    return result;\n  });\n}\n\nexports.getProjectInfos = getProjectInfos;\n\nasync function hydrateConfigs(pInfos) {\n  const hydrate = pInfos.map(info => {\n    return functionsConfig.materializeAll(info.projectId).then(config => {\n      info.config = config;\n      return;\n    }).catch(err => {\n      logger_1.logger.debug(`Failed to fetch runtime config for project ${info.projectId}: ${err.message}`);\n    });\n  });\n  await Promise.all(hydrate);\n}\n\nexports.hydrateConfigs = hydrateConfigs;\n\nfunction convertKey(configKey, prefix) {\n  const baseKey = configKey.toUpperCase().replace(/\\./g, \"_\").replace(/-/g, \"_\");\n  let envKey = baseKey;\n\n  try {\n    env.validateKey(envKey);\n  } catch (err) {\n    if (err instanceof env.KeyValidationError) {\n      envKey = prefix + envKey;\n      env.validateKey(envKey);\n    }\n  }\n\n  return envKey;\n}\n\nexports.convertKey = convertKey;\n\nfunction configToEnv(configs, prefix) {\n  const success = [];\n  const errors = [];\n\n  for (const [configKey, value] of functional_1.flatten(configs)) {\n    try {\n      const envKey = convertKey(configKey, prefix);\n      success.push({\n        origKey: configKey,\n        newKey: envKey,\n        value: value\n      });\n    } catch (err) {\n      if (err instanceof env.KeyValidationError) {\n        errors.push({\n          origKey: configKey,\n          newKey: err.key,\n          err: err.message,\n          value: value\n        });\n      } else {\n        throw new error_1.FirebaseError(\"Unexpected error while converting config\", {\n          exit: 2,\n          original: err\n        });\n      }\n    }\n  }\n\n  return {\n    success,\n    errors\n  };\n}\n\nexports.configToEnv = configToEnv;\n\nfunction hydrateEnvs(pInfos, prefix) {\n  let errMsg = \"\";\n\n  for (const pInfo of pInfos) {\n    const {\n      success,\n      errors\n    } = configToEnv(pInfo.config, prefix);\n\n    if (errors.length > 0) {\n      const msg = `${pInfo.projectId} ` + `${pInfo.alias ? \"(\" + pInfo.alias + \")\" : \"\"}:\\n` + errors.map(err => `\\t${err.origKey} => ${clc.bold(err.newKey)} (${err.err})`).join(\"\\n\") + \"\\n\";\n      errMsg += msg;\n    } else {\n      pInfo.envs = success;\n    }\n  }\n\n  return errMsg;\n}\n\nexports.hydrateEnvs = hydrateEnvs;\n\nfunction escape(s) {\n  const result = s.replace(\"\\n\", \"\\\\n\").replace(\"\\r\", \"\\\\r\").replace(\"\\t\", \"\\\\t\").replace(\"\\v\", \"\\\\v\");\n  return result.replace(/(['\"])/g, \"\\\\$1\");\n}\n\nfunction toDotenvFormat(envs, header = \"\") {\n  const lines = envs.map(({\n    newKey,\n    value\n  }) => `${newKey}=\"${escape(value)}\"`);\n  const maxLineLen = Math.max(...lines.map(l => l.length));\n  return `${header}\\n` + lines.map((line, idx) => `${line.padEnd(maxLineLen)} # from ${envs[idx].origKey}`).join(\"\\n\");\n}\n\nexports.toDotenvFormat = toDotenvFormat;\n\nfunction generateDotenvFilename(pInfo) {\n  var _a;\n\n  return `.env.${(_a = pInfo.alias) !== null && _a !== void 0 ? _a : pInfo.projectId}`;\n}\n\nexports.generateDotenvFilename = generateDotenvFilename;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/functions/runtimeConfigExport.js"],"names":["Object","defineProperty","exports","value","generateDotenvFilename","toDotenvFormat","hydrateEnvs","configToEnv","convertKey","hydrateConfigs","getProjectInfos","clc","require","env","functionsConfig","error_1","logger_1","projectUtils_1","rc_1","utils_1","functional_1","options","result","rc","loadRC","projects","alias","projectId","entries","keys","includes","logWarning","bold","getProjectId","map","k","v","pInfos","hydrate","info","materializeAll","then","config","catch","err","logger","debug","message","Promise","all","configKey","prefix","baseKey","toUpperCase","replace","envKey","validateKey","KeyValidationError","configs","success","errors","flatten","push","origKey","newKey","key","FirebaseError","exit","original","errMsg","pInfo","length","msg","join","envs","escape","s","header","lines","maxLineLen","Math","max","l","line","idx","padEnd","_a"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateDotenvFilename = exports.toDotenvFormat = exports.hydrateEnvs = exports.configToEnv = exports.convertKey = exports.hydrateConfigs = exports.getProjectInfos = void 0;\nconst clc = require(\"cli-color\");\nconst env = require(\"./env\");\nconst functionsConfig = require(\"../functionsConfig\");\nconst error_1 = require(\"../error\");\nconst logger_1 = require(\"../logger\");\nconst projectUtils_1 = require(\"../projectUtils\");\nconst rc_1 = require(\"../rc\");\nconst utils_1 = require(\"../utils\");\nconst functional_1 = require(\"../functional\");\nfunction getProjectInfos(options) {\n    const result = {};\n    const rc = rc_1.loadRC(options);\n    if (rc.projects) {\n        for (const [alias, projectId] of Object.entries(rc.projects)) {\n            if (Object.keys(result).includes(projectId)) {\n                utils_1.logWarning(`Multiple aliases found for ${clc.bold(projectId)}. ` +\n                    `Preferring alias (${clc.bold(result[projectId])}) over (${clc.bold(alias)}).`);\n                continue;\n            }\n            result[projectId] = alias;\n        }\n    }\n    const projectId = projectUtils_1.getProjectId(options);\n    if (projectId && !Object.keys(result).includes(projectId)) {\n        result[projectId] = projectId;\n    }\n    return Object.entries(result).map(([k, v]) => {\n        const result = { projectId: k };\n        if (k !== v) {\n            result.alias = v;\n        }\n        return result;\n    });\n}\nexports.getProjectInfos = getProjectInfos;\nasync function hydrateConfigs(pInfos) {\n    const hydrate = pInfos.map((info) => {\n        return functionsConfig\n            .materializeAll(info.projectId)\n            .then((config) => {\n            info.config = config;\n            return;\n        })\n            .catch((err) => {\n            logger_1.logger.debug(`Failed to fetch runtime config for project ${info.projectId}: ${err.message}`);\n        });\n    });\n    await Promise.all(hydrate);\n}\nexports.hydrateConfigs = hydrateConfigs;\nfunction convertKey(configKey, prefix) {\n    const baseKey = configKey\n        .toUpperCase()\n        .replace(/\\./g, \"_\")\n        .replace(/-/g, \"_\");\n    let envKey = baseKey;\n    try {\n        env.validateKey(envKey);\n    }\n    catch (err) {\n        if (err instanceof env.KeyValidationError) {\n            envKey = prefix + envKey;\n            env.validateKey(envKey);\n        }\n    }\n    return envKey;\n}\nexports.convertKey = convertKey;\nfunction configToEnv(configs, prefix) {\n    const success = [];\n    const errors = [];\n    for (const [configKey, value] of functional_1.flatten(configs)) {\n        try {\n            const envKey = convertKey(configKey, prefix);\n            success.push({ origKey: configKey, newKey: envKey, value: value });\n        }\n        catch (err) {\n            if (err instanceof env.KeyValidationError) {\n                errors.push({\n                    origKey: configKey,\n                    newKey: err.key,\n                    err: err.message,\n                    value: value,\n                });\n            }\n            else {\n                throw new error_1.FirebaseError(\"Unexpected error while converting config\", {\n                    exit: 2,\n                    original: err,\n                });\n            }\n        }\n    }\n    return { success, errors };\n}\nexports.configToEnv = configToEnv;\nfunction hydrateEnvs(pInfos, prefix) {\n    let errMsg = \"\";\n    for (const pInfo of pInfos) {\n        const { success, errors } = configToEnv(pInfo.config, prefix);\n        if (errors.length > 0) {\n            const msg = `${pInfo.projectId} ` +\n                `${pInfo.alias ? \"(\" + pInfo.alias + \")\" : \"\"}:\\n` +\n                errors.map((err) => `\\t${err.origKey} => ${clc.bold(err.newKey)} (${err.err})`).join(\"\\n\") +\n                \"\\n\";\n            errMsg += msg;\n        }\n        else {\n            pInfo.envs = success;\n        }\n    }\n    return errMsg;\n}\nexports.hydrateEnvs = hydrateEnvs;\nfunction escape(s) {\n    const result = s\n        .replace(\"\\n\", \"\\\\n\")\n        .replace(\"\\r\", \"\\\\r\")\n        .replace(\"\\t\", \"\\\\t\")\n        .replace(\"\\v\", \"\\\\v\");\n    return result.replace(/(['\"])/g, \"\\\\$1\");\n}\nfunction toDotenvFormat(envs, header = \"\") {\n    const lines = envs.map(({ newKey, value }) => `${newKey}=\"${escape(value)}\"`);\n    const maxLineLen = Math.max(...lines.map((l) => l.length));\n    return (`${header}\\n` +\n        lines.map((line, idx) => `${line.padEnd(maxLineLen)} # from ${envs[idx].origKey}`).join(\"\\n\"));\n}\nexports.toDotenvFormat = toDotenvFormat;\nfunction generateDotenvFilename(pInfo) {\n    var _a;\n    return `.env.${(_a = pInfo.alias) !== null && _a !== void 0 ? _a : pInfo.projectId}`;\n}\nexports.generateDotenvFilename = generateDotenvFilename;\n"]},"metadata":{},"sourceType":"script"}