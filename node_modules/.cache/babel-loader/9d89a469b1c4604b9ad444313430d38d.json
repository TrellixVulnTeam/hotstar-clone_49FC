{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.functionIdsAreValid = exports.functionsDirectoryExists = void 0;\n\nconst clc = require(\"cli-color\");\n\nconst error_1 = require(\"../../error\");\n\nconst fsutils = require(\"../../fsutils\");\n\nconst projectPath = require(\"../../projectPath\");\n\nfunction functionsDirectoryExists(options, sourceDirName) {\n  if (!fsutils.dirExistsSync(projectPath.resolveProjectPath(options, sourceDirName))) {\n    const msg = `could not deploy functions because the ${clc.bold('\"' + sourceDirName + '\"')} ` + `directory was not found. Please create it or specify a different source directory in firebase.json`;\n    throw new error_1.FirebaseError(msg);\n  }\n}\n\nexports.functionsDirectoryExists = functionsDirectoryExists;\n\nfunction functionIdsAreValid(functions) {\n  const v1FunctionName = /^[a-zA-Z][a-zA-Z0-9_-]{0,62}$/;\n  const invalidV1Ids = functions.filter(fn => {\n    return fn.platform === \"gcfv1\" && !v1FunctionName.test(fn.id);\n  });\n\n  if (invalidV1Ids.length !== 0) {\n    const msg = `${invalidV1Ids.map(f => f.id).join(\", \")} function name(s) can only contain letters, ` + `numbers, hyphens, and not exceed 62 characters in length`;\n    throw new error_1.FirebaseError(msg);\n  }\n\n  const v2FunctionName = /^[a-z][a-z0-9-]{0,62}$/;\n  const invalidV2Ids = functions.filter(fn => {\n    return fn.platform === \"gcfv2\" && !v2FunctionName.test(fn.id);\n  });\n\n  if (invalidV2Ids.length !== 0) {\n    const msg = `${invalidV2Ids.map(f => f.id).join(\", \")} v2 function name(s) can only contin lower ` + `case letters, numbers, hyphens, and not exceed 62 characters in length`;\n    throw new error_1.FirebaseError(msg);\n  }\n}\n\nexports.functionIdsAreValid = functionIdsAreValid;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/deploy/functions/validate.js"],"names":["Object","defineProperty","exports","value","functionIdsAreValid","functionsDirectoryExists","clc","require","error_1","fsutils","projectPath","options","sourceDirName","dirExistsSync","resolveProjectPath","msg","bold","FirebaseError","functions","v1FunctionName","invalidV1Ids","filter","fn","platform","test","id","length","map","f","join","v2FunctionName","invalidV2Ids"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8BF,OAAO,CAACG,wBAAR,GAAmC,KAAK,CAAtE;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,eAAD,CAAvB;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,mBAAD,CAA3B;;AACA,SAASF,wBAAT,CAAkCM,OAAlC,EAA2CC,aAA3C,EAA0D;AACtD,MAAI,CAACH,OAAO,CAACI,aAAR,CAAsBH,WAAW,CAACI,kBAAZ,CAA+BH,OAA/B,EAAwCC,aAAxC,CAAtB,CAAL,EAAoF;AAChF,UAAMG,GAAG,GAAI,0CAAyCT,GAAG,CAACU,IAAJ,CAAS,MAAMJ,aAAN,GAAsB,GAA/B,CAAoC,GAA9E,GACP,oGADL;AAEA,UAAM,IAAIJ,OAAO,CAACS,aAAZ,CAA0BF,GAA1B,CAAN;AACH;AACJ;;AACDb,OAAO,CAACG,wBAAR,GAAmCA,wBAAnC;;AACA,SAASD,mBAAT,CAA6Bc,SAA7B,EAAwC;AACpC,QAAMC,cAAc,GAAG,+BAAvB;AACA,QAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAkBC,EAAD,IAAQ;AAC1C,WAAOA,EAAE,CAACC,QAAH,KAAgB,OAAhB,IAA2B,CAACJ,cAAc,CAACK,IAAf,CAAoBF,EAAE,CAACG,EAAvB,CAAnC;AACH,GAFoB,CAArB;;AAGA,MAAIL,YAAY,CAACM,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,UAAMX,GAAG,GAAI,GAAEK,YAAY,CAACO,GAAb,CAAkBC,CAAD,IAAOA,CAAC,CAACH,EAA1B,EAA8BI,IAA9B,CAAmC,IAAnC,CAAyC,8CAA5C,GACP,0DADL;AAEA,UAAM,IAAIrB,OAAO,CAACS,aAAZ,CAA0BF,GAA1B,CAAN;AACH;;AACD,QAAMe,cAAc,GAAG,wBAAvB;AACA,QAAMC,YAAY,GAAGb,SAAS,CAACG,MAAV,CAAkBC,EAAD,IAAQ;AAC1C,WAAOA,EAAE,CAACC,QAAH,KAAgB,OAAhB,IAA2B,CAACO,cAAc,CAACN,IAAf,CAAoBF,EAAE,CAACG,EAAvB,CAAnC;AACH,GAFoB,CAArB;;AAGA,MAAIM,YAAY,CAACL,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,UAAMX,GAAG,GAAI,GAAEgB,YAAY,CAACJ,GAAb,CAAkBC,CAAD,IAAOA,CAAC,CAACH,EAA1B,EAA8BI,IAA9B,CAAmC,IAAnC,CAAyC,6CAA5C,GACP,wEADL;AAEA,UAAM,IAAIrB,OAAO,CAACS,aAAZ,CAA0BF,GAA1B,CAAN;AACH;AACJ;;AACDb,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.functionIdsAreValid = exports.functionsDirectoryExists = void 0;\nconst clc = require(\"cli-color\");\nconst error_1 = require(\"../../error\");\nconst fsutils = require(\"../../fsutils\");\nconst projectPath = require(\"../../projectPath\");\nfunction functionsDirectoryExists(options, sourceDirName) {\n    if (!fsutils.dirExistsSync(projectPath.resolveProjectPath(options, sourceDirName))) {\n        const msg = `could not deploy functions because the ${clc.bold('\"' + sourceDirName + '\"')} ` +\n            `directory was not found. Please create it or specify a different source directory in firebase.json`;\n        throw new error_1.FirebaseError(msg);\n    }\n}\nexports.functionsDirectoryExists = functionsDirectoryExists;\nfunction functionIdsAreValid(functions) {\n    const v1FunctionName = /^[a-zA-Z][a-zA-Z0-9_-]{0,62}$/;\n    const invalidV1Ids = functions.filter((fn) => {\n        return fn.platform === \"gcfv1\" && !v1FunctionName.test(fn.id);\n    });\n    if (invalidV1Ids.length !== 0) {\n        const msg = `${invalidV1Ids.map((f) => f.id).join(\", \")} function name(s) can only contain letters, ` +\n            `numbers, hyphens, and not exceed 62 characters in length`;\n        throw new error_1.FirebaseError(msg);\n    }\n    const v2FunctionName = /^[a-z][a-z0-9-]{0,62}$/;\n    const invalidV2Ids = functions.filter((fn) => {\n        return fn.platform === \"gcfv2\" && !v2FunctionName.test(fn.id);\n    });\n    if (invalidV2Ids.length !== 0) {\n        const msg = `${invalidV2Ids.map((f) => f.id).join(\", \")} v2 function name(s) can only contin lower ` +\n            `case letters, numbers, hyphens, and not exceed 62 characters in length`;\n        throw new error_1.FirebaseError(msg);\n    }\n}\nexports.functionIdsAreValid = functionIdsAreValid;\n"]},"metadata":{},"sourceType":"script"}