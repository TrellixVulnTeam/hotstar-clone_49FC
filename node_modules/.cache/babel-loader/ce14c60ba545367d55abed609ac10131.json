{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printSourceDownloadLink = exports.displayUpdateChangesRequiringConfirmation = exports.displayUpdateChangesNoInput = exports.displayExtInfo = void 0;\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst marked = require(\"marked\");\n\nconst TerminalRenderer = require(\"marked-terminal\");\n\nconst utils = require(\"../utils\");\n\nconst extensionsHelper_1 = require(\"./extensionsHelper\");\n\nconst logger_1 = require(\"../logger\");\n\nconst error_1 = require(\"../error\");\n\nmarked.setOptions({\n  renderer: new TerminalRenderer()\n});\nconst additionColor = clc.green;\nconst deletionColor = clc.red;\n\nfunction displayExtInfo(extensionName, publisher, spec, published = false) {\n  const lines = [];\n  lines.push(`**Name**: ${spec.displayName}`);\n\n  if (publisher) {\n    lines.push(`**Publisher**: ${publisher}`);\n  }\n\n  if (spec.description) {\n    lines.push(`**Description**: ${spec.description}`);\n  }\n\n  if (published) {\n    if (spec.license) {\n      lines.push(`**License**: ${spec.license}`);\n    }\n\n    lines.push(`**Source code**: ${spec.sourceUrl}`);\n  }\n\n  if (lines.length > 0) {\n    utils.logLabeledBullet(extensionsHelper_1.logPrefix, `information about '${clc.bold(extensionName)}':`);\n    const infoStr = lines.join(\"\\n\");\n    const formatted = marked(infoStr).replace(/\\n+$/, \"\\n\");\n    logger_1.logger.info(formatted);\n    return lines;\n  } else {\n    throw new error_1.FirebaseError(\"Error occurred during installation: cannot parse info from source spec\", {\n      context: {\n        spec: spec,\n        extensionName: extensionName\n      }\n    });\n  }\n}\n\nexports.displayExtInfo = displayExtInfo;\n\nfunction displayUpdateChangesNoInput(spec, newSpec) {\n  var _a, _b, _c, _d;\n\n  const lines = [];\n\n  if (spec.displayName !== newSpec.displayName) {\n    lines.push(\"\", \"**Name:**\", deletionColor(`- ${spec.displayName}`), additionColor(`+ ${newSpec.displayName}`));\n  }\n\n  if (((_a = spec.author) === null || _a === void 0 ? void 0 : _a.authorName) !== ((_b = newSpec.author) === null || _b === void 0 ? void 0 : _b.authorName)) {\n    lines.push(\"\", \"**Author:**\", deletionColor(`- ${(_c = spec.author) === null || _c === void 0 ? void 0 : _c.authorName}`), additionColor(`+ ${(_d = spec.author) === null || _d === void 0 ? void 0 : _d.authorName}`));\n  }\n\n  if (spec.description !== newSpec.description) {\n    lines.push(\"\", \"**Description:**\", deletionColor(`- ${spec.description}`), additionColor(`+ ${newSpec.description}`));\n  }\n\n  if (spec.sourceUrl !== newSpec.sourceUrl) {\n    lines.push(\"\", \"**Source code:**\", deletionColor(`- ${spec.sourceUrl}`), additionColor(`+ ${newSpec.sourceUrl}`));\n  }\n\n  if (spec.billingRequired && !newSpec.billingRequired) {\n    lines.push(\"\", \"**Billing is no longer required for this extension.**\");\n  }\n\n  logger_1.logger.info(marked(lines.join(\"\\n\")));\n  return lines;\n}\n\nexports.displayUpdateChangesNoInput = displayUpdateChangesNoInput;\n\nasync function displayUpdateChangesRequiringConfirmation(args) {\n  const equals = (a, b) => {\n    return _.isEqual(a, b);\n  };\n\n  if (args.spec.license !== args.newSpec.license) {\n    const message = \"\\n\" + \"**License**\\n\" + deletionColor(args.spec.license ? `- ${args.spec.license}\\n` : \"- None\\n\") + additionColor(args.newSpec.license ? `+ ${args.newSpec.license}\\n` : \"+ None\\n\");\n    logger_1.logger.info(message);\n\n    if (!(await extensionsHelper_1.confirm({\n      nonInteractive: args.nonInteractive,\n      force: args.force,\n      default: true\n    }))) {\n      throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'License'.\");\n    }\n  }\n\n  const apisDiffDeletions = _.differenceWith(args.spec.apis, _.get(args.newSpec, \"apis\", []), equals);\n\n  const apisDiffAdditions = _.differenceWith(args.newSpec.apis, _.get(args.spec, \"apis\", []), equals);\n\n  if (apisDiffDeletions.length || apisDiffAdditions.length) {\n    let message = \"\\n**APIs:**\\n\";\n    apisDiffDeletions.forEach(api => {\n      message += deletionColor(`- ${api.apiName} (${api.reason})\\n`);\n    });\n    apisDiffAdditions.forEach(api => {\n      message += additionColor(`+ ${api.apiName} (${api.reason})\\n`);\n    });\n    logger_1.logger.info(message);\n\n    if (!(await extensionsHelper_1.confirm({\n      nonInteractive: args.nonInteractive,\n      force: args.force,\n      default: true\n    }))) {\n      throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'APIs'.\");\n    }\n  }\n\n  const resourcesDiffDeletions = _.differenceWith(args.spec.resources, _.get(args.newSpec, \"resources\", []), compareResources);\n\n  const resourcesDiffAdditions = _.differenceWith(args.newSpec.resources, _.get(args.spec, \"resources\", []), compareResources);\n\n  if (resourcesDiffDeletions.length || resourcesDiffAdditions.length) {\n    let message = \"\\n**Resources:**\\n\";\n    resourcesDiffDeletions.forEach(resource => {\n      message += deletionColor(` - ${getResourceReadableName(resource)}`);\n    });\n    resourcesDiffAdditions.forEach(resource => {\n      message += additionColor(`+ ${getResourceReadableName(resource)}`);\n    });\n    logger_1.logger.info(message);\n\n    if (!(await extensionsHelper_1.confirm({\n      nonInteractive: args.nonInteractive,\n      force: args.force,\n      default: true\n    }))) {\n      throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'Resources'.\");\n    }\n  }\n\n  const rolesDiffDeletions = _.differenceWith(args.spec.roles, _.get(args.newSpec, \"roles\", []), equals);\n\n  const rolesDiffAdditions = _.differenceWith(args.newSpec.roles, _.get(args.spec, \"roles\", []), equals);\n\n  if (rolesDiffDeletions.length || rolesDiffAdditions.length) {\n    let message = \"\\n**Permissions:**\\n\";\n    rolesDiffDeletions.forEach(role => {\n      message += deletionColor(`- ${role.role} (${role.reason})\\n`);\n    });\n    rolesDiffAdditions.forEach(role => {\n      message += additionColor(`+ ${role.role} (${role.reason})\\n`);\n    });\n    logger_1.logger.info(message);\n\n    if (!(await extensionsHelper_1.confirm({\n      nonInteractive: args.nonInteractive,\n      force: args.force,\n      default: true\n    }))) {\n      throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'Permissions'.\");\n    }\n  }\n\n  if (!args.spec.billingRequired && args.newSpec.billingRequired) {\n    logger_1.logger.info(\"Billing is now required for the new version of this extension.\");\n\n    if (!(await extensionsHelper_1.confirm({\n      nonInteractive: args.nonInteractive,\n      force: args.force,\n      default: true\n    }))) {\n      throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'BillingRequired'.\");\n    }\n  }\n}\n\nexports.displayUpdateChangesRequiringConfirmation = displayUpdateChangesRequiringConfirmation;\n\nfunction compareResources(resource1, resource2) {\n  return resource1.name == resource2.name && resource1.type == resource2.type;\n}\n\nfunction getResourceReadableName(resource) {\n  return resource.type === \"firebaseextensions.v1beta.function\" ? `${resource.name} (Cloud Function): ${resource.description}\\n` : `${resource.name} (${resource.type})\\n`;\n}\n\nfunction printSourceDownloadLink(sourceDownloadUri) {\n  const sourceDownloadMsg = `Want to review the source code that will be installed? Download it here: ${sourceDownloadUri}`;\n  utils.logBullet(marked(sourceDownloadMsg));\n}\n\nexports.printSourceDownloadLink = printSourceDownloadLink;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/extensions/displayExtensionInfo.js"],"names":["Object","defineProperty","exports","value","printSourceDownloadLink","displayUpdateChangesRequiringConfirmation","displayUpdateChangesNoInput","displayExtInfo","_","require","clc","marked","TerminalRenderer","utils","extensionsHelper_1","logger_1","error_1","setOptions","renderer","additionColor","green","deletionColor","red","extensionName","publisher","spec","published","lines","push","displayName","description","license","sourceUrl","length","logLabeledBullet","logPrefix","bold","infoStr","join","formatted","replace","logger","info","FirebaseError","context","newSpec","_a","_b","_c","_d","author","authorName","billingRequired","args","equals","a","b","isEqual","message","confirm","nonInteractive","force","default","apisDiffDeletions","differenceWith","apis","get","apisDiffAdditions","forEach","api","apiName","reason","resourcesDiffDeletions","resources","compareResources","resourcesDiffAdditions","resource","getResourceReadableName","rolesDiffDeletions","roles","rolesDiffAdditions","role","resource1","resource2","name","type","sourceDownloadUri","sourceDownloadMsg","logBullet"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printSourceDownloadLink = exports.displayUpdateChangesRequiringConfirmation = exports.displayUpdateChangesNoInput = exports.displayExtInfo = void 0;\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst marked = require(\"marked\");\nconst TerminalRenderer = require(\"marked-terminal\");\nconst utils = require(\"../utils\");\nconst extensionsHelper_1 = require(\"./extensionsHelper\");\nconst logger_1 = require(\"../logger\");\nconst error_1 = require(\"../error\");\nmarked.setOptions({\n    renderer: new TerminalRenderer(),\n});\nconst additionColor = clc.green;\nconst deletionColor = clc.red;\nfunction displayExtInfo(extensionName, publisher, spec, published = false) {\n    const lines = [];\n    lines.push(`**Name**: ${spec.displayName}`);\n    if (publisher) {\n        lines.push(`**Publisher**: ${publisher}`);\n    }\n    if (spec.description) {\n        lines.push(`**Description**: ${spec.description}`);\n    }\n    if (published) {\n        if (spec.license) {\n            lines.push(`**License**: ${spec.license}`);\n        }\n        lines.push(`**Source code**: ${spec.sourceUrl}`);\n    }\n    if (lines.length > 0) {\n        utils.logLabeledBullet(extensionsHelper_1.logPrefix, `information about '${clc.bold(extensionName)}':`);\n        const infoStr = lines.join(\"\\n\");\n        const formatted = marked(infoStr).replace(/\\n+$/, \"\\n\");\n        logger_1.logger.info(formatted);\n        return lines;\n    }\n    else {\n        throw new error_1.FirebaseError(\"Error occurred during installation: cannot parse info from source spec\", {\n            context: {\n                spec: spec,\n                extensionName: extensionName,\n            },\n        });\n    }\n}\nexports.displayExtInfo = displayExtInfo;\nfunction displayUpdateChangesNoInput(spec, newSpec) {\n    var _a, _b, _c, _d;\n    const lines = [];\n    if (spec.displayName !== newSpec.displayName) {\n        lines.push(\"\", \"**Name:**\", deletionColor(`- ${spec.displayName}`), additionColor(`+ ${newSpec.displayName}`));\n    }\n    if (((_a = spec.author) === null || _a === void 0 ? void 0 : _a.authorName) !== ((_b = newSpec.author) === null || _b === void 0 ? void 0 : _b.authorName)) {\n        lines.push(\"\", \"**Author:**\", deletionColor(`- ${(_c = spec.author) === null || _c === void 0 ? void 0 : _c.authorName}`), additionColor(`+ ${(_d = spec.author) === null || _d === void 0 ? void 0 : _d.authorName}`));\n    }\n    if (spec.description !== newSpec.description) {\n        lines.push(\"\", \"**Description:**\", deletionColor(`- ${spec.description}`), additionColor(`+ ${newSpec.description}`));\n    }\n    if (spec.sourceUrl !== newSpec.sourceUrl) {\n        lines.push(\"\", \"**Source code:**\", deletionColor(`- ${spec.sourceUrl}`), additionColor(`+ ${newSpec.sourceUrl}`));\n    }\n    if (spec.billingRequired && !newSpec.billingRequired) {\n        lines.push(\"\", \"**Billing is no longer required for this extension.**\");\n    }\n    logger_1.logger.info(marked(lines.join(\"\\n\")));\n    return lines;\n}\nexports.displayUpdateChangesNoInput = displayUpdateChangesNoInput;\nasync function displayUpdateChangesRequiringConfirmation(args) {\n    const equals = (a, b) => {\n        return _.isEqual(a, b);\n    };\n    if (args.spec.license !== args.newSpec.license) {\n        const message = \"\\n\" +\n            \"**License**\\n\" +\n            deletionColor(args.spec.license ? `- ${args.spec.license}\\n` : \"- None\\n\") +\n            additionColor(args.newSpec.license ? `+ ${args.newSpec.license}\\n` : \"+ None\\n\");\n        logger_1.logger.info(message);\n        if (!(await extensionsHelper_1.confirm({ nonInteractive: args.nonInteractive, force: args.force, default: true }))) {\n            throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'License'.\");\n        }\n    }\n    const apisDiffDeletions = _.differenceWith(args.spec.apis, _.get(args.newSpec, \"apis\", []), equals);\n    const apisDiffAdditions = _.differenceWith(args.newSpec.apis, _.get(args.spec, \"apis\", []), equals);\n    if (apisDiffDeletions.length || apisDiffAdditions.length) {\n        let message = \"\\n**APIs:**\\n\";\n        apisDiffDeletions.forEach((api) => {\n            message += deletionColor(`- ${api.apiName} (${api.reason})\\n`);\n        });\n        apisDiffAdditions.forEach((api) => {\n            message += additionColor(`+ ${api.apiName} (${api.reason})\\n`);\n        });\n        logger_1.logger.info(message);\n        if (!(await extensionsHelper_1.confirm({ nonInteractive: args.nonInteractive, force: args.force, default: true }))) {\n            throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'APIs'.\");\n        }\n    }\n    const resourcesDiffDeletions = _.differenceWith(args.spec.resources, _.get(args.newSpec, \"resources\", []), compareResources);\n    const resourcesDiffAdditions = _.differenceWith(args.newSpec.resources, _.get(args.spec, \"resources\", []), compareResources);\n    if (resourcesDiffDeletions.length || resourcesDiffAdditions.length) {\n        let message = \"\\n**Resources:**\\n\";\n        resourcesDiffDeletions.forEach((resource) => {\n            message += deletionColor(` - ${getResourceReadableName(resource)}`);\n        });\n        resourcesDiffAdditions.forEach((resource) => {\n            message += additionColor(`+ ${getResourceReadableName(resource)}`);\n        });\n        logger_1.logger.info(message);\n        if (!(await extensionsHelper_1.confirm({ nonInteractive: args.nonInteractive, force: args.force, default: true }))) {\n            throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'Resources'.\");\n        }\n    }\n    const rolesDiffDeletions = _.differenceWith(args.spec.roles, _.get(args.newSpec, \"roles\", []), equals);\n    const rolesDiffAdditions = _.differenceWith(args.newSpec.roles, _.get(args.spec, \"roles\", []), equals);\n    if (rolesDiffDeletions.length || rolesDiffAdditions.length) {\n        let message = \"\\n**Permissions:**\\n\";\n        rolesDiffDeletions.forEach((role) => {\n            message += deletionColor(`- ${role.role} (${role.reason})\\n`);\n        });\n        rolesDiffAdditions.forEach((role) => {\n            message += additionColor(`+ ${role.role} (${role.reason})\\n`);\n        });\n        logger_1.logger.info(message);\n        if (!(await extensionsHelper_1.confirm({ nonInteractive: args.nonInteractive, force: args.force, default: true }))) {\n            throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'Permissions'.\");\n        }\n    }\n    if (!args.spec.billingRequired && args.newSpec.billingRequired) {\n        logger_1.logger.info(\"Billing is now required for the new version of this extension.\");\n        if (!(await extensionsHelper_1.confirm({ nonInteractive: args.nonInteractive, force: args.force, default: true }))) {\n            throw new error_1.FirebaseError(\"Unable to update this extension instance without explicit consent for the change to 'BillingRequired'.\");\n        }\n    }\n}\nexports.displayUpdateChangesRequiringConfirmation = displayUpdateChangesRequiringConfirmation;\nfunction compareResources(resource1, resource2) {\n    return resource1.name == resource2.name && resource1.type == resource2.type;\n}\nfunction getResourceReadableName(resource) {\n    return resource.type === \"firebaseextensions.v1beta.function\"\n        ? `${resource.name} (Cloud Function): ${resource.description}\\n`\n        : `${resource.name} (${resource.type})\\n`;\n}\nfunction printSourceDownloadLink(sourceDownloadUri) {\n    const sourceDownloadMsg = `Want to review the source code that will be installed? Download it here: ${sourceDownloadUri}`;\n    utils.logBullet(marked(sourceDownloadMsg));\n}\nexports.printSourceDownloadLink = printSourceDownloadLink;\n"]},"metadata":{},"sourceType":"script"}