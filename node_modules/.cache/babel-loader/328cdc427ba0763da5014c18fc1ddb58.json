{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jobFromEndpoint = exports.createOrReplaceJob = exports.updateJob = exports.getJob = exports.deleteJob = exports.createJob = exports.assertValidJob = void 0;\n\nconst _ = require(\"lodash\");\n\nconst error_1 = require(\"../error\");\n\nconst logger_1 = require(\"../logger\");\n\nconst api = require(\"../api\");\n\nconst backend = require(\"../deploy/functions/backend\");\n\nconst proto = require(\"./proto\");\n\nconst functional_1 = require(\"../functional\");\n\nconst VERSION = \"v1beta1\";\nconst DEFAULT_TIME_ZONE = \"America/Los_Angeles\";\n\nfunction assertValidJob(job) {\n  proto.assertOneOf(\"Scheduler Job\", job, \"target\", \"httpTarget\", \"pubsubTarget\");\n\n  if (job.httpTarget) {\n    proto.assertOneOf(\"Scheduler Job\", job.httpTarget, \"httpTarget.authorizationHeader\", \"oauthToken\", \"odicToken\");\n  }\n}\n\nexports.assertValidJob = assertValidJob;\n\nfunction createJob(job) {\n  const strippedName = job.name.substring(0, job.name.lastIndexOf(\"/\"));\n  return api.request(\"POST\", `/${VERSION}/${strippedName}`, {\n    auth: true,\n    origin: api.cloudschedulerOrigin,\n    data: Object.assign({\n      timeZone: DEFAULT_TIME_ZONE\n    }, job)\n  });\n}\n\nexports.createJob = createJob;\n\nfunction deleteJob(name) {\n  return api.request(\"DELETE\", `/${VERSION}/${name}`, {\n    auth: true,\n    origin: api.cloudschedulerOrigin\n  });\n}\n\nexports.deleteJob = deleteJob;\n\nfunction getJob(name) {\n  return api.request(\"GET\", `/${VERSION}/${name}`, {\n    auth: true,\n    origin: api.cloudschedulerOrigin,\n    resolveOnHTTPError: true\n  });\n}\n\nexports.getJob = getJob;\n\nfunction updateJob(job) {\n  return api.request(\"PATCH\", `/${VERSION}/${job.name}`, {\n    auth: true,\n    origin: api.cloudschedulerOrigin,\n    data: Object.assign({\n      timeZone: DEFAULT_TIME_ZONE\n    }, job)\n  });\n}\n\nexports.updateJob = updateJob;\n\nasync function createOrReplaceJob(job) {\n  var _a, _b;\n\n  const jobName = job.name.split(\"/\").pop();\n  const existingJob = await getJob(job.name);\n\n  if (existingJob.status === 404) {\n    let newJob;\n\n    try {\n      newJob = await createJob(job);\n    } catch (err) {\n      if (((_b = (_a = err === null || err === void 0 ? void 0 : err.context) === null || _a === void 0 ? void 0 : _a.response) === null || _b === void 0 ? void 0 : _b.statusCode) === 404) {\n        throw new error_1.FirebaseError(`Cloud resource location is not set for this project but scheduled functions require it. ` + `Please see this documentation for more details: https://firebase.google.com/docs/projects/locations.`);\n      }\n\n      throw new error_1.FirebaseError(`Failed to create scheduler job ${job.name}: ${err.message}`);\n    }\n\n    logger_1.logger.debug(`created scheduler job ${jobName}`);\n    return newJob;\n  }\n\n  if (!job.timeZone) {\n    job.timeZone = DEFAULT_TIME_ZONE;\n  }\n\n  if (isIdentical(existingJob.body, job)) {\n    logger_1.logger.debug(`scheduler job ${jobName} is up to date, no changes required`);\n    return;\n  }\n\n  const updatedJob = await updateJob(job);\n  logger_1.logger.debug(`updated scheduler job ${jobName}`);\n  return updatedJob;\n}\n\nexports.createOrReplaceJob = createOrReplaceJob;\n\nfunction isIdentical(job, otherJob) {\n  return job && otherJob && job.schedule === otherJob.schedule && job.timeZone === otherJob.timeZone && _.isEqual(job.retryConfig, otherJob.retryConfig);\n}\n\nfunction jobFromEndpoint(endpoint, appEngineLocation) {\n  const job = {};\n\n  if (endpoint.platform === \"gcfv1\") {\n    const id = backend.scheduleIdForFunction(endpoint);\n    const region = appEngineLocation;\n    job.name = `projects/${endpoint.project}/locations/${region}/jobs/${id}`;\n    job.pubsubTarget = {\n      topicName: `projects/${endpoint.project}/topics/${id}`,\n      attributes: {\n        scheduled: \"true\"\n      }\n    };\n  } else if (endpoint.platform === \"gcfv2\") {\n    throw new error_1.FirebaseError(\"Do not know how to create a scheduled GCFv2 function\");\n  } else {\n    functional_1.assertExhaustive(endpoint.platform);\n  }\n\n  proto.copyIfPresent(job, endpoint.scheduleTrigger, \"schedule\", \"retryConfig\", \"timeZone\");\n  return job;\n}\n\nexports.jobFromEndpoint = jobFromEndpoint;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/gcp/cloudscheduler.js"],"names":["Object","defineProperty","exports","value","jobFromEndpoint","createOrReplaceJob","updateJob","getJob","deleteJob","createJob","assertValidJob","_","require","error_1","logger_1","api","backend","proto","functional_1","VERSION","DEFAULT_TIME_ZONE","job","assertOneOf","httpTarget","strippedName","name","substring","lastIndexOf","request","auth","origin","cloudschedulerOrigin","data","assign","timeZone","resolveOnHTTPError","_a","_b","jobName","split","pop","existingJob","status","newJob","err","context","response","statusCode","FirebaseError","message","logger","debug","isIdentical","body","updatedJob","otherJob","schedule","isEqual","retryConfig","endpoint","appEngineLocation","platform","id","scheduleIdForFunction","region","project","pubsubTarget","topicName","attributes","scheduled","assertExhaustive","copyIfPresent","scheduleTrigger"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jobFromEndpoint = exports.createOrReplaceJob = exports.updateJob = exports.getJob = exports.deleteJob = exports.createJob = exports.assertValidJob = void 0;\nconst _ = require(\"lodash\");\nconst error_1 = require(\"../error\");\nconst logger_1 = require(\"../logger\");\nconst api = require(\"../api\");\nconst backend = require(\"../deploy/functions/backend\");\nconst proto = require(\"./proto\");\nconst functional_1 = require(\"../functional\");\nconst VERSION = \"v1beta1\";\nconst DEFAULT_TIME_ZONE = \"America/Los_Angeles\";\nfunction assertValidJob(job) {\n    proto.assertOneOf(\"Scheduler Job\", job, \"target\", \"httpTarget\", \"pubsubTarget\");\n    if (job.httpTarget) {\n        proto.assertOneOf(\"Scheduler Job\", job.httpTarget, \"httpTarget.authorizationHeader\", \"oauthToken\", \"odicToken\");\n    }\n}\nexports.assertValidJob = assertValidJob;\nfunction createJob(job) {\n    const strippedName = job.name.substring(0, job.name.lastIndexOf(\"/\"));\n    return api.request(\"POST\", `/${VERSION}/${strippedName}`, {\n        auth: true,\n        origin: api.cloudschedulerOrigin,\n        data: Object.assign({ timeZone: DEFAULT_TIME_ZONE }, job),\n    });\n}\nexports.createJob = createJob;\nfunction deleteJob(name) {\n    return api.request(\"DELETE\", `/${VERSION}/${name}`, {\n        auth: true,\n        origin: api.cloudschedulerOrigin,\n    });\n}\nexports.deleteJob = deleteJob;\nfunction getJob(name) {\n    return api.request(\"GET\", `/${VERSION}/${name}`, {\n        auth: true,\n        origin: api.cloudschedulerOrigin,\n        resolveOnHTTPError: true,\n    });\n}\nexports.getJob = getJob;\nfunction updateJob(job) {\n    return api.request(\"PATCH\", `/${VERSION}/${job.name}`, {\n        auth: true,\n        origin: api.cloudschedulerOrigin,\n        data: Object.assign({ timeZone: DEFAULT_TIME_ZONE }, job),\n    });\n}\nexports.updateJob = updateJob;\nasync function createOrReplaceJob(job) {\n    var _a, _b;\n    const jobName = job.name.split(\"/\").pop();\n    const existingJob = await getJob(job.name);\n    if (existingJob.status === 404) {\n        let newJob;\n        try {\n            newJob = await createJob(job);\n        }\n        catch (err) {\n            if (((_b = (_a = err === null || err === void 0 ? void 0 : err.context) === null || _a === void 0 ? void 0 : _a.response) === null || _b === void 0 ? void 0 : _b.statusCode) === 404) {\n                throw new error_1.FirebaseError(`Cloud resource location is not set for this project but scheduled functions require it. ` +\n                    `Please see this documentation for more details: https://firebase.google.com/docs/projects/locations.`);\n            }\n            throw new error_1.FirebaseError(`Failed to create scheduler job ${job.name}: ${err.message}`);\n        }\n        logger_1.logger.debug(`created scheduler job ${jobName}`);\n        return newJob;\n    }\n    if (!job.timeZone) {\n        job.timeZone = DEFAULT_TIME_ZONE;\n    }\n    if (isIdentical(existingJob.body, job)) {\n        logger_1.logger.debug(`scheduler job ${jobName} is up to date, no changes required`);\n        return;\n    }\n    const updatedJob = await updateJob(job);\n    logger_1.logger.debug(`updated scheduler job ${jobName}`);\n    return updatedJob;\n}\nexports.createOrReplaceJob = createOrReplaceJob;\nfunction isIdentical(job, otherJob) {\n    return (job &&\n        otherJob &&\n        job.schedule === otherJob.schedule &&\n        job.timeZone === otherJob.timeZone &&\n        _.isEqual(job.retryConfig, otherJob.retryConfig));\n}\nfunction jobFromEndpoint(endpoint, appEngineLocation) {\n    const job = {};\n    if (endpoint.platform === \"gcfv1\") {\n        const id = backend.scheduleIdForFunction(endpoint);\n        const region = appEngineLocation;\n        job.name = `projects/${endpoint.project}/locations/${region}/jobs/${id}`;\n        job.pubsubTarget = {\n            topicName: `projects/${endpoint.project}/topics/${id}`,\n            attributes: {\n                scheduled: \"true\",\n            },\n        };\n    }\n    else if (endpoint.platform === \"gcfv2\") {\n        throw new error_1.FirebaseError(\"Do not know how to create a scheduled GCFv2 function\");\n    }\n    else {\n        functional_1.assertExhaustive(endpoint.platform);\n    }\n    proto.copyIfPresent(job, endpoint.scheduleTrigger, \"schedule\", \"retryConfig\", \"timeZone\");\n    return job;\n}\nexports.jobFromEndpoint = jobFromEndpoint;\n"]},"metadata":{},"sourceType":"script"}