{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSignatureType = exports.formatHost = exports.findModuleRoot = exports.waitForBody = exports.getServiceFromEventType = exports.getFunctionService = exports.getTemporarySocketPath = exports.getEmulatedTriggersFromDefinitions = exports.emulatedFunctionsByRegion = exports.EmulatedTrigger = exports.HttpConstants = void 0;\n\nconst _ = require(\"lodash\");\n\nconst os = require(\"os\");\n\nconst path = require(\"path\");\n\nconst fs = require(\"fs\");\n\nconst constants_1 = require(\"./constants\");\n\nconst memoryLookup = {\n  \"128MB\": 128,\n  \"256MB\": 256,\n  \"512MB\": 512,\n  \"1GB\": 1024,\n  \"2GB\": 2048,\n  \"4GB\": 4096\n};\n\nclass HttpConstants {}\n\nexports.HttpConstants = HttpConstants;\nHttpConstants.CALLABLE_AUTH_HEADER = \"x-callable-context-auth\";\nHttpConstants.ORIGINAL_AUTH_HEADER = \"x-original-auth\";\n\nclass EmulatedTrigger {\n  constructor(definition, module) {\n    this.definition = definition;\n    this.module = module;\n  }\n\n  get memoryLimitBytes() {\n    return memoryLookup[this.definition.availableMemoryMb || \"128MB\"] * 1024 * 1024;\n  }\n\n  get timeoutMs() {\n    if (typeof this.definition.timeout === \"number\") {\n      return this.definition.timeout * 1000;\n    } else {\n      return parseInt((this.definition.timeout || \"60s\").split(\"s\")[0], 10) * 1000;\n    }\n  }\n\n  getRawFunction() {\n    if (!this.module) {\n      throw new Error(\"EmulatedTrigger has not been provided a module.\");\n    }\n\n    const func = _.get(this.module, this.definition.entryPoint);\n\n    return func.__emulator_func || func;\n  }\n\n}\n\nexports.EmulatedTrigger = EmulatedTrigger;\n\nfunction emulatedFunctionsByRegion(definitions) {\n  const regionDefinitions = [];\n\n  for (const def of definitions) {\n    if (!def.regions) {\n      def.regions = [\"us-central1\"];\n    }\n\n    for (const region of def.regions) {\n      const defDeepCopy = JSON.parse(JSON.stringify(def));\n      defDeepCopy.regions = [region];\n      defDeepCopy.region = region;\n      defDeepCopy.id = `${region}-${defDeepCopy.name}`;\n      regionDefinitions.push(defDeepCopy);\n    }\n  }\n\n  return regionDefinitions;\n}\n\nexports.emulatedFunctionsByRegion = emulatedFunctionsByRegion;\n\nfunction getEmulatedTriggersFromDefinitions(definitions, module) {\n  return definitions.reduce((obj, definition) => {\n    obj[definition.id] = new EmulatedTrigger(definition, module);\n    return obj;\n  }, {});\n}\n\nexports.getEmulatedTriggersFromDefinitions = getEmulatedTriggersFromDefinitions;\n\nfunction getTemporarySocketPath(pid, cwd) {\n  if (process.platform === \"win32\") {\n    return path.join(\"\\\\\\\\?\\\\pipe\", cwd, pid.toString());\n  } else {\n    return path.join(os.tmpdir(), `fire_emu_${pid.toString()}.sock`);\n  }\n}\n\nexports.getTemporarySocketPath = getTemporarySocketPath;\n\nfunction getFunctionService(def) {\n  var _a;\n\n  if (def.eventTrigger) {\n    return (_a = def.eventTrigger.service) !== null && _a !== void 0 ? _a : getServiceFromEventType(def.eventTrigger.eventType);\n  }\n\n  return \"unknown\";\n}\n\nexports.getFunctionService = getFunctionService;\n\nfunction getServiceFromEventType(eventType) {\n  if (eventType.includes(\"firestore\")) {\n    return constants_1.Constants.SERVICE_FIRESTORE;\n  }\n\n  if (eventType.includes(\"database\")) {\n    return constants_1.Constants.SERVICE_REALTIME_DATABASE;\n  }\n\n  if (eventType.includes(\"pubsub\")) {\n    return constants_1.Constants.SERVICE_PUBSUB;\n  }\n\n  if (eventType.includes(\"storage\")) {\n    return constants_1.Constants.SERVICE_STORAGE;\n  }\n\n  if (eventType.includes(\"analytics\")) {\n    return constants_1.Constants.SERVICE_ANALYTICS;\n  }\n\n  if (eventType.includes(\"auth\")) {\n    return constants_1.Constants.SERVICE_AUTH;\n  }\n\n  if (eventType.includes(\"crashlytics\")) {\n    return constants_1.Constants.SERVICE_CRASHLYTICS;\n  }\n\n  if (eventType.includes(\"remoteconfig\")) {\n    return constants_1.Constants.SERVICE_REMOTE_CONFIG;\n  }\n\n  if (eventType.includes(\"testing\")) {\n    return constants_1.Constants.SERVICE_TEST_LAB;\n  }\n\n  return \"\";\n}\n\nexports.getServiceFromEventType = getServiceFromEventType;\n\nfunction waitForBody(req) {\n  let data = \"\";\n  return new Promise(resolve => {\n    req.on(\"data\", chunk => {\n      data += chunk;\n    });\n    req.on(\"end\", () => {\n      resolve(data);\n    });\n  });\n}\n\nexports.waitForBody = waitForBody;\n\nfunction findModuleRoot(moduleName, filepath) {\n  const hierarchy = filepath.split(path.sep);\n\n  for (let i = 0; i < hierarchy.length; i++) {\n    try {\n      let chunks = [];\n\n      if (i) {\n        chunks = hierarchy.slice(0, -i);\n      } else {\n        chunks = hierarchy;\n      }\n\n      const packagePath = path.join(chunks.join(path.sep), \"package.json\");\n      const serializedPackage = fs.readFileSync(packagePath, \"utf8\").toString();\n\n      if (JSON.parse(serializedPackage).name === moduleName) {\n        return chunks.join(\"/\");\n      }\n\n      break;\n    } catch (err) {}\n  }\n\n  return \"\";\n}\n\nexports.findModuleRoot = findModuleRoot;\n\nfunction formatHost(info) {\n  if (info.host.includes(\":\")) {\n    return `[${info.host}]:${info.port}`;\n  } else {\n    return `${info.host}:${info.port}`;\n  }\n}\n\nexports.formatHost = formatHost;\n\nfunction getSignatureType(def) {\n  if (def.httpsTrigger) {\n    return \"http\";\n  }\n\n  return def.platform === \"gcfv2\" ? \"cloudevent\" : \"event\";\n}\n\nexports.getSignatureType = getSignatureType;","map":{"version":3,"sources":["C:/Users/Sharik/Desktop/Projects/ReactProject/my-first-app/node_modules/firebase-tools/lib/emulator/functionsEmulatorShared.js"],"names":["Object","defineProperty","exports","value","getSignatureType","formatHost","findModuleRoot","waitForBody","getServiceFromEventType","getFunctionService","getTemporarySocketPath","getEmulatedTriggersFromDefinitions","emulatedFunctionsByRegion","EmulatedTrigger","HttpConstants","_","require","os","path","fs","constants_1","memoryLookup","CALLABLE_AUTH_HEADER","ORIGINAL_AUTH_HEADER","constructor","definition","module","memoryLimitBytes","availableMemoryMb","timeoutMs","timeout","parseInt","split","getRawFunction","Error","func","get","entryPoint","__emulator_func","definitions","regionDefinitions","def","regions","region","defDeepCopy","JSON","parse","stringify","id","name","push","reduce","obj","pid","cwd","process","platform","join","toString","tmpdir","_a","eventTrigger","service","eventType","includes","Constants","SERVICE_FIRESTORE","SERVICE_REALTIME_DATABASE","SERVICE_PUBSUB","SERVICE_STORAGE","SERVICE_ANALYTICS","SERVICE_AUTH","SERVICE_CRASHLYTICS","SERVICE_REMOTE_CONFIG","SERVICE_TEST_LAB","req","data","Promise","resolve","on","chunk","moduleName","filepath","hierarchy","sep","i","length","chunks","slice","packagePath","serializedPackage","readFileSync","err","info","host","port","httpsTrigger"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSignatureType = exports.formatHost = exports.findModuleRoot = exports.waitForBody = exports.getServiceFromEventType = exports.getFunctionService = exports.getTemporarySocketPath = exports.getEmulatedTriggersFromDefinitions = exports.emulatedFunctionsByRegion = exports.EmulatedTrigger = exports.HttpConstants = void 0;\nconst _ = require(\"lodash\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst constants_1 = require(\"./constants\");\nconst memoryLookup = {\n    \"128MB\": 128,\n    \"256MB\": 256,\n    \"512MB\": 512,\n    \"1GB\": 1024,\n    \"2GB\": 2048,\n    \"4GB\": 4096,\n};\nclass HttpConstants {\n}\nexports.HttpConstants = HttpConstants;\nHttpConstants.CALLABLE_AUTH_HEADER = \"x-callable-context-auth\";\nHttpConstants.ORIGINAL_AUTH_HEADER = \"x-original-auth\";\nclass EmulatedTrigger {\n    constructor(definition, module) {\n        this.definition = definition;\n        this.module = module;\n    }\n    get memoryLimitBytes() {\n        return memoryLookup[this.definition.availableMemoryMb || \"128MB\"] * 1024 * 1024;\n    }\n    get timeoutMs() {\n        if (typeof this.definition.timeout === \"number\") {\n            return this.definition.timeout * 1000;\n        }\n        else {\n            return parseInt((this.definition.timeout || \"60s\").split(\"s\")[0], 10) * 1000;\n        }\n    }\n    getRawFunction() {\n        if (!this.module) {\n            throw new Error(\"EmulatedTrigger has not been provided a module.\");\n        }\n        const func = _.get(this.module, this.definition.entryPoint);\n        return func.__emulator_func || func;\n    }\n}\nexports.EmulatedTrigger = EmulatedTrigger;\nfunction emulatedFunctionsByRegion(definitions) {\n    const regionDefinitions = [];\n    for (const def of definitions) {\n        if (!def.regions) {\n            def.regions = [\"us-central1\"];\n        }\n        for (const region of def.regions) {\n            const defDeepCopy = JSON.parse(JSON.stringify(def));\n            defDeepCopy.regions = [region];\n            defDeepCopy.region = region;\n            defDeepCopy.id = `${region}-${defDeepCopy.name}`;\n            regionDefinitions.push(defDeepCopy);\n        }\n    }\n    return regionDefinitions;\n}\nexports.emulatedFunctionsByRegion = emulatedFunctionsByRegion;\nfunction getEmulatedTriggersFromDefinitions(definitions, module) {\n    return definitions.reduce((obj, definition) => {\n        obj[definition.id] = new EmulatedTrigger(definition, module);\n        return obj;\n    }, {});\n}\nexports.getEmulatedTriggersFromDefinitions = getEmulatedTriggersFromDefinitions;\nfunction getTemporarySocketPath(pid, cwd) {\n    if (process.platform === \"win32\") {\n        return path.join(\"\\\\\\\\?\\\\pipe\", cwd, pid.toString());\n    }\n    else {\n        return path.join(os.tmpdir(), `fire_emu_${pid.toString()}.sock`);\n    }\n}\nexports.getTemporarySocketPath = getTemporarySocketPath;\nfunction getFunctionService(def) {\n    var _a;\n    if (def.eventTrigger) {\n        return (_a = def.eventTrigger.service) !== null && _a !== void 0 ? _a : getServiceFromEventType(def.eventTrigger.eventType);\n    }\n    return \"unknown\";\n}\nexports.getFunctionService = getFunctionService;\nfunction getServiceFromEventType(eventType) {\n    if (eventType.includes(\"firestore\")) {\n        return constants_1.Constants.SERVICE_FIRESTORE;\n    }\n    if (eventType.includes(\"database\")) {\n        return constants_1.Constants.SERVICE_REALTIME_DATABASE;\n    }\n    if (eventType.includes(\"pubsub\")) {\n        return constants_1.Constants.SERVICE_PUBSUB;\n    }\n    if (eventType.includes(\"storage\")) {\n        return constants_1.Constants.SERVICE_STORAGE;\n    }\n    if (eventType.includes(\"analytics\")) {\n        return constants_1.Constants.SERVICE_ANALYTICS;\n    }\n    if (eventType.includes(\"auth\")) {\n        return constants_1.Constants.SERVICE_AUTH;\n    }\n    if (eventType.includes(\"crashlytics\")) {\n        return constants_1.Constants.SERVICE_CRASHLYTICS;\n    }\n    if (eventType.includes(\"remoteconfig\")) {\n        return constants_1.Constants.SERVICE_REMOTE_CONFIG;\n    }\n    if (eventType.includes(\"testing\")) {\n        return constants_1.Constants.SERVICE_TEST_LAB;\n    }\n    return \"\";\n}\nexports.getServiceFromEventType = getServiceFromEventType;\nfunction waitForBody(req) {\n    let data = \"\";\n    return new Promise((resolve) => {\n        req.on(\"data\", (chunk) => {\n            data += chunk;\n        });\n        req.on(\"end\", () => {\n            resolve(data);\n        });\n    });\n}\nexports.waitForBody = waitForBody;\nfunction findModuleRoot(moduleName, filepath) {\n    const hierarchy = filepath.split(path.sep);\n    for (let i = 0; i < hierarchy.length; i++) {\n        try {\n            let chunks = [];\n            if (i) {\n                chunks = hierarchy.slice(0, -i);\n            }\n            else {\n                chunks = hierarchy;\n            }\n            const packagePath = path.join(chunks.join(path.sep), \"package.json\");\n            const serializedPackage = fs.readFileSync(packagePath, \"utf8\").toString();\n            if (JSON.parse(serializedPackage).name === moduleName) {\n                return chunks.join(\"/\");\n            }\n            break;\n        }\n        catch (err) {\n        }\n    }\n    return \"\";\n}\nexports.findModuleRoot = findModuleRoot;\nfunction formatHost(info) {\n    if (info.host.includes(\":\")) {\n        return `[${info.host}]:${info.port}`;\n    }\n    else {\n        return `${info.host}:${info.port}`;\n    }\n}\nexports.formatHost = formatHost;\nfunction getSignatureType(def) {\n    if (def.httpsTrigger) {\n        return \"http\";\n    }\n    return def.platform === \"gcfv2\" ? \"cloudevent\" : \"event\";\n}\nexports.getSignatureType = getSignatureType;\n"]},"metadata":{},"sourceType":"script"}